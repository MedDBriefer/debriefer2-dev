{"version":3,"file":"main.js","mappings":"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","sources":["webpack://debriefer2/./src/App.js","webpack://debriefer2/./src/environments/environment.js","webpack://debriefer2/./src/main.js","webpack://debriefer2/../../libs/analysis/actionInsertion.js","webpack://debriefer2/../../libs/analysis/analyzeEvents.js","webpack://debriefer2/../../libs/analysis/constraintHandling.js","webpack://debriefer2/../../libs/analysis/debriefingUtils.js","webpack://debriefer2/../../libs/analysis/handleMinimal.js","webpack://debriefer2/../../libs/analysis/index.js","webpack://debriefer2/../../libs/analysis/organizeCond1Display.js","webpack://debriefer2/../../libs/analysis/scenarioDataAccesors.js","webpack://debriefer2/../../libs/analysis/summarizeAnalysis.js","webpack://debriefer2/../../libs/analysis/utils.js","webpack://debriefer2/../../libs/analysis/vitalsChecking.js","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/Card.js","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/Cond2Debriefing.jsx","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/DebriefingContext.js","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/b/Benchmarks.jsx","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/d/Define.jsx","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/e/Explain.jsx","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/experiment/SaveDebriefingModal.jsx","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/f/Formalize.jsx","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/footer/NavButtons.jsx","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/header/StepTabs.jsx","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/header/TopButton.js","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/ie/Analysis.jsx","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/ie/AnalysisMessages.jsx","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/ie/ExamineForm.js","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/ie/FeedbackIcon.jsx","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/ie/InvestigateExamine.jsx","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/ie/SequentialIEView.jsx","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/ie/TabbedIEView.jsx","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/ie/UserRating.jsx","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/index.js","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/layouts/SingleColumnLayout.jsx","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/layouts/TwoDivLayout.js","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/layouts/UnauthedLayout.js","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/layouts/index.js","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/outline/FlatLeftNav.jsx","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/outline/HierarchicalLeftNav.jsx","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/outline/OutlineButton.jsx","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/outline/OutlineChildren.js","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/outline/OutlineLabel.jsx","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/r/Review.jsx","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/r/Tooltip.js","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/review/SaveReviewModal.jsx","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/dataStructureUtils.js","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/index.js","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/routes/DebLog.js","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/routes/index.js","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/utils.js","webpack://debriefer2/../../libs/debriefing/log-chooser/src/components/AnalysesTable.jsx","webpack://debriefer2/../../libs/debriefing/log-chooser/src/components/AnalysisDetails.jsx","webpack://debriefer2/../../libs/debriefing/log-chooser/src/components/AnalysisTableHeader.jsx","webpack://debriefer2/../../libs/debriefing/log-chooser/src/components/DebriefingsTable.jsx","webpack://debriefer2/../../libs/debriefing/log-chooser/src/components/ObserverLogDetails.jsx","webpack://debriefer2/../../libs/debriefing/log-chooser/src/components/ObserverLogTable.jsx","webpack://debriefer2/../../libs/debriefing/log-chooser/src/components/ObserverLogTableHeader.jsx","webpack://debriefer2/../../libs/debriefing/log-chooser/src/components/index.js","webpack://debriefer2/../../libs/debriefing/log-chooser/src/index.js","webpack://debriefer2/../../libs/debriefing/log-chooser/src/routes/Analysis.jsx","webpack://debriefer2/../../libs/debriefing/log-chooser/src/routes/LogChooser.jsx","webpack://debriefer2/../../libs/debriefing/log-chooser/src/routes/ObserverLog.jsx","webpack://debriefer2/../../libs/debriefing/log-chooser/src/routes/ObserverLogList.jsx","webpack://debriefer2/../../libs/debriefing/log-chooser/src/routes/index.js","webpack://debriefer2/../../libs/debriefing/log-chooser/src/utils.js","webpack://debriefer2/../../libs/feedback-data/B4CA_data_PhaseDEBRF.js","webpack://debriefer2/../../libs/feedback-data/B4CA_data_PhaseIE.js","webpack://debriefer2/../../libs/feedback-data/B5CA_data_PhaseDEBRF.js","webpack://debriefer2/../../libs/feedback-data/B5CA_data_PhaseIE.js","webpack://debriefer2/../../libs/feedback-data/Bogus data for testingA.js","webpack://debriefer2/../../libs/feedback-data/C5CA_data_PhaseDEBRF.js","webpack://debriefer2/../../libs/feedback-data/C5CA_data_PhaseIE.js","webpack://debriefer2/../../libs/feedback-data/SC8CP_DEBR_Data.js","webpack://debriefer2/../../libs/feedback-data/SC8CP_data_PhaseIE.js","webpack://debriefer2/../../libs/feedback-data/analysisData.js","webpack://debriefer2/../../libs/feedback-data/c1Data.js","webpack://debriefer2/../../libs/feedback-data/c2Data.js","webpack://debriefer2/../../libs/feedback-data/constants.js","webpack://debriefer2/../../libs/feedback-data/index.js","webpack://debriefer2/../../libs/feedback-data/mergeDataFiles.js","webpack://debriefer2/../../libs/feedback-data/utils.js","webpack://debriefer2/../../libs/mdb-auth/src/index.js","webpack://debriefer2/../../libs/mdb-auth/src/lib/components/AuthFlow.js","webpack://debriefer2/../../libs/mdb-auth/src/lib/components/EmailVerification.js","webpack://debriefer2/../../libs/mdb-auth/src/lib/components/ForgotPasswordForm.js","webpack://debriefer2/../../libs/mdb-auth/src/lib/components/LoginForm.js","webpack://debriefer2/../../libs/mdb-auth/src/lib/components/RegistrationForm.js","webpack://debriefer2/../../libs/mdb-auth/src/lib/components/icons/PasswordVisibilityIcon.js","webpack://debriefer2/../../libs/mdb-auth/src/lib/contexts/Auth.js","webpack://debriefer2/../../libs/mdb-auth/src/lib/routes/PrivateRoute.js","webpack://debriefer2/../../libs/mdb-auth/src/lib/routes/StaffRoute.js","webpack://debriefer2/../../libs/mdb-ui/src/index.js","webpack://debriefer2/../../libs/mdb-ui/src/lib/modal/MDBModal.jsx","webpack://debriefer2/../../libs/mdb-ui/src/lib/modal/index.js","webpack://debriefer2/../../libs/mdb-ui/src/lib/navbar/MDBNavBar.js","webpack://debriefer2/../../libs/mdb-ui/src/lib/navbar/UserDropDown.js","webpack://debriefer2/../../libs/mdb-ui/src/lib/navbar/UserIcon.js","webpack://debriefer2/../../libs/mdb-ui/src/lib/snackbar/Snackbar.js","webpack://debriefer2/../../libs/prompt-answer-grading/src/index.js","webpack://debriefer2/../../libs/prompt-answer-grading/src/prompt-answer-grading.js","webpack://debriefer2/../../libs/mdb-ui/src/lib/index.css","webpack://debriefer2/../../libs/debriefing/cond2-debriefing-ui/src/components/Cond2Debriefing.module.css?457c","webpack://debriefer2/../../libs/mdb-auth/src/lib/styles/auth-styles.module.scss?8a4b","webpack://debriefer2/./src/styles.css","webpack://debriefer2/../../node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://debriefer2/../../libs/mdb-ui/src/lib/index.css?eaf7","webpack://debriefer2/../../libs/mdb-firebase/index.js","webpack://debriefer2/../../libs/scenario-data/constants.js","webpack://debriefer2/../../libs/scenario-data/index.js","webpack://debriefer2/../../libs/scenario-data/intvMenuItems.js","webpack://debriefer2/../../libs/scenario-data/intvMenusCats.js","webpack://debriefer2/../../libs/scenario-data/intvPromptAnswers.js","webpack://debriefer2/../../libs/scenario-data/intvPrompts.js","webpack://debriefer2/../../libs/scenario-data/intvs.js","webpack://debriefer2/../../libs/scenario-data/types.js","webpack://debriefer2/../../libs/scenario-data/utils.js"],"sourcesContent":["import {\n    Switch,\n    useHistory\n} from \"react-router-dom\";\n\nimport {useFirebaseProject, FirebaseContext} from \"@meddbriefer/mdb-firebase\"\nimport { AuthProvider, PrivateRoute } from \"@meddbriefer/mdb-auth\";\n\nimport { DebLog, UnauthedLayout, computeReviewTitle, SaveReviewModal } from \"@meddbriefer/cond2-debriefing-ui\"\nimport { LogChooser } from \"@meddbriefer/log-chooser\"\n\n// import SaveModal from \"./SaveModal\";\n\nimport \"./styles.css\";\n\nimport { environment } from \"./environments/environment\";\n\n\nexport default function App() {\n    const {auth, db} = useFirebaseProject(environment.firebaseProject)\n    let history = useHistory()\n    window.db = db;\n    \n    function redirectToCond2Debriefing(debriefID) {\n      const newURL = `/debriefing2/${debriefID}`\n      history.push(newURL)\n    }\n\n    return (\n      <FirebaseContext.Provider\n        value={{\n          auth,\n          db,\n        }}\n      >\n        <AuthProvider>\n          <Switch>\n            <PrivateRoute\n              path=\"/debriefing2/:debriefingID\"\n              authFlowLayout={UnauthedLayout}\n            >\n              <DebLog\n                computeTitle={computeReviewTitle}\n                saveButtonLabel=\"Save\"\n                saveModal={SaveReviewModal}\n              />\n            </PrivateRoute>\n            {/* catchall route - no path needed?*/}\n            <PrivateRoute authFlowLayout={UnauthedLayout}>\n              <LogChooser\n                redirectToCond2Debriefing={redirectToCond2Debriefing}\n              />\n            </PrivateRoute>\n          </Switch>\n        </AuthProvider>\n      </FirebaseContext.Provider>\n    );\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// When building for production, this file is replaced with `environment.prod.ts`.\nexport const environment = {\n    production: false,\n    firebaseProject: process.env.NX_FIREBASE_PROJECT || \"MedDBriefer\"\n};\n","import {StrictMode} from 'react'\nimport ReactDOM from 'react-dom/client'\nimport {HashRouter as Router} from \"react-router-dom\"\nimport App from './App'\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"))\nroot.render(\n    <StrictMode>\n        <Router>\n            <App/>\n        </Router>\n    </StrictMode>\n)\n","// this approximates the placement for a missing intervention based on ordering of interventions\n// in the problems definitions, what appears in the log that is just before and just after\n// the item to be inserted, and what is marked as required that is in the log just before and after.  An approach that\n// utilizes partial ordering constraints would be better.  Also it is not clear what to do for really badly ordered\n// actions on the part of the student.  Note that it only looks for two anchor points before and two anchor points after\n// rather than all potential anchor points.  Also it does not deal with a phase that is split into multiple time periods\n// within a log. It looks for the best placement in the last phase found.\n\n//input orderedArrayObjects is the interventions for a problem as ordered in the problem def\n// objIndex is the index in orderedArrayObjects for the intervention object that needs to be inserted in phases\nexport const insertInPhaseRelativeToSuggestedOrder = (phaseNames, phases, object, orderedArrayObjects, objIndex, confirmedEvents, checklistHierarchy, requiredPhaseNames, requiredSubphases, phaseRequiredAtEnd) => {\n    // if expertPhase in object is a phase then find the last subphase and insert there instead of at the beginning\n    let phaseIndex = -1;\n    // if it is a subphase or a phase with no subphases then get the last entry for a proposed initial insertion point\n    // object.expertPhase is the phase recommended for this action to appear\n    if (object.expertPhase === \"\"){\n        /* let errorMsg = 'No phase specified in the problem defs for object: ' + object.actionDescription;\n        throw new Error(errorMsg) */\n        //just use the next to last phase if none is specified\n        object.expertPhase = requiredPhaseNames[requiredPhaseNames.length - 2]}\n\n\n    if (requiredSubphases.includes(object.expertPhase) || !getSubPhases(object.expertPhase, checklistHierarchy)) {\n        phaseIndex = phaseNames.lastIndexOf(object.expertPhase);\n    }\n    // if it is a phase then get the last entry of the last suphase within it for a proposed intial insertion point\n    // for an intervention but if it is an assessment suggest goes in the first instance of the phase at the end of \n    // that phase\n    else {\n        phaseIndex = getEndSubPhaseIndex(object.expertPhase, phaseNames, checklistHierarchy);}\n        /* if([\"assessment\", \"required-action\", \"assessment-option\"].includes(object.type)){\n            phaseIndex = getFirstSubPhaseIndex(object.expertPhase, phaseNames)}\n        else {phaseIndex = getEndSubPhaseIndex(object.expertPhase, phaseNames);}} */\n    if (object.expertPhase === phaseRequiredAtEnd && phaseNames.length-1 !== phaseIndex){\n        //add a phase ongoing management at the end\n        phaseIndex = phaseNames.length\n        phaseNames[phaseIndex] = phaseRequiredAtEnd;\n        phases[phaseIndex] = []\n    }\n\n    //update object when field which is mostly to see what gets computed for the insertion point\n    object.when = phaseNames[phaseIndex];\n\n    let objectsBefore\n    let objectBefore\n    let requiredObjectBefore\n    if (objIndex !== 0) {\n        objectsBefore = orderedArrayObjects.slice(0, objIndex);\n        objectBefore = [...objectsBefore].reverse().find(entry => confirmedEvents.includes(entry.id) || confirmedEvents.includes(entry.interventionID));\n        requiredObjectBefore = objectsBefore.find(entry => [\"required\", \"alternative\"].includes(entry.protocolRelationship)  && confirmedEvents.includes(entry.interventionID))\n    }\n    let objectAfter \n    let objectsAfter\n    let requiredObjectAfter \n    if (objIndex !== orderedArrayObjects.length-1) {\n        objectsAfter = orderedArrayObjects.slice(objIndex + 1);\n        objectAfter = [...objectsAfter].find(entry => confirmedEvents.includes(entry.id) || confirmedEvents.includes(entry.interventionID));\n        requiredObjectAfter = objectsAfter.find(entry => [\"required\", \"alternative\"].includes(entry.protocolRelationship) && confirmedEvents.includes(entry.interventionID)) ;\n    }\n  \n    let phaseObjects = [...phases[phaseIndex]]; //trying for a deep copy of the array mainly for debug via console.log\n    \n    let indexBefore = -1;\n    let indexAfter = -1;\n    let indexRequiredBefore = -1;\n    let indexRequiredAfter = -1;\n    let insertionIndex = false;\n    if (objectBefore) { \n        indexBefore = phaseObjects.findIndex(entry => entry.id === objectBefore.id || entry.id === objectBefore.interventionID); \n    }\n    if (objectAfter) { \n        indexAfter = phaseObjects.findIndex(entry => entry.id === objectAfter.id || entry.id === objectAfter.interventionID);\n        }\n    if (requiredObjectBefore) { \n        indexRequiredBefore = phaseObjects.findIndex(entry => entry.id === requiredObjectBefore.id || entry.id === requiredObjectBefore.interventionID); \n    }\n    if (requiredObjectAfter) { \n        indexRequiredAfter = phaseObjects.findIndex(entry => entry.id === requiredObjectAfter.id || entry.id === requiredObjectAfter.interventionID); \n    }\n    \n    // There is a more compact way to do the below but this made\n    // it easier for me to get the logic right\n    // insert according to required before first as we want to follow something that was required\n    if (indexRequiredBefore !== -1) {\n        insertionIndex = indexRequiredBefore + 1;\n        // but if the just before object is greater then insert relative to it\n        if (!!indexBefore && indexBefore > indexRequiredBefore) { insertionIndex = indexBefore + 1; }\n    }\n    //if no required before and not required after then insert relative to\n    //required item after in actions definition\n    if (!insertionIndex && indexRequiredAfter !== -1) {\n        insertionIndex = indexRequiredAfter - 1};\n        // unless the just after is smaller then override and insert relative to it\n        if (indexAfter < indexRequiredAfter) { insertionIndex = indexAfter - 1; }\n    \n    //otherwide if have a just before insert relative to it\n    if (!insertionIndex && indexBefore !== -1) {\n        insertionIndex = indexBefore + 1;\n    }\n    //otherwise if have a just after insert relative to it\n    if (!insertionIndex && indexAfter !== -1) {\n        insertionIndex = indexAfter - 1;\n    }\n    //otherwise put at end of phase\n    if (!insertionIndex) {\n        insertionIndex = phaseObjects.length + 1;\n    }\n    insertInPhaseInOrder(phaseNames, phases, object, insertionIndex);\n\n};\n\n\n\n\n//support functions for updating and searching the phaseNames and phases data structures\nexport const insertInPhaseInOrder = (phaseNames, phases, object, objIndex) => {\n    let phase\n    phase = object.when;  //what phase should it be added to\n    let phaseIndex = phaseNames.lastIndexOf(phase); //get the index for the last instance of the phase\n    let phaseObjects = phases[phaseIndex];  //get the objects associated with that phase\n    if (!phaseObjects) { phaseObjects = []; }\n    phaseObjects.splice(objIndex, 0, object);  //insert it at the place indicated by input objIndex\n    phases[phaseIndex] = phaseObjects;\n};\n\nexport const getEndSubPhase = (inPhaseId, phaseNames, checklistHierarchy) => {\n    let subPhases = getSubPhases(inPhaseId, checklistHierarchy);\n    let subPhaseName;\n    let reversedSubPhases = [...subPhases].reverse();\n    for (let subPhase of reversedSubPhases) {\n        subPhaseName = phaseNames.find(id => id === subPhase.id);\n        if (!!subPhaseName) { break; }\n    }\n    return subPhaseName;\n};\n\nexport const getEndSubPhaseIndex = (inPhaseId, phaseNames, checklistHierarchy) => {\n    let subPhaseName = getEndSubPhase(inPhaseId, phaseNames, checklistHierarchy);\n    let index = phaseNames.lastIndexOf(subPhaseName);\n    return index;\n};\n\n// sts 01/23/22\nexport const getSubPhases = (phaseId, checklistHierarchy) => {\n    return checklistHierarchy.find(phase => phase.id === phaseId).subPhases\n    // let mainPhases = findPhases();\n    // let phaseEntry = mainPhases.find(phase => phase.id === phaseId);\n    // return (phaseEntry.subPhases);\n};\n\nexport const hasSubPhases = (phaseId, checklistHierarchy) => {\n    let phase = checklistHierarchy.find(phase => phase.id === phaseId)\n    if (!!phase && !!phase.subPhases){\n        return true}\n    else {return false}\n}\n\n\n//given a numerical id, what is its parent phase or subphase\n//find the header under which the input numericalID appears\nexport const findHeaderFor = (numericalID, log) => {\n    let candidateHeader = {};\n    let foundHeader = {};\n    for (let entry of log) {\n        if (entry.id === \"problemHeader\") {\n            candidateHeader = entry;\n        }\n        else {\n            if (entry.numericalID === numericalID) {\n                foundHeader = candidateHeader;\n                break;\n            }\n        }\n    }\n    return (foundHeader);\n};","import { MDB_TYPES, ANALYSIS_TYPES, } from '@meddbriefer/scenario-data';\nimport {\n    initializeConstraints,\n    //getConstraint,\n    filterConstraintsBySolutions,\n    getStatesForStatus,\n    getEventsByIdTime,\n    pushNew,\n    trimActions,\n    getItem,\n    scenarios,  //just for debugging \n} from \"./debriefingUtils\";\n\nimport { summarizeAnalysis } from \"./summarizeAnalysis\"; //for debug\n\nimport { checkAgainstKB } from './constraintHandling';\n\nimport {\n    insertInPhaseRelativeToSuggestedOrder,\n    //hasSubPhases,\n} from \"./actionInsertion\";\n\nimport { checkForMinimalCases } from './handleMinimal';\n\nimport { organizeLogDisplay } from './organizeCond1Display';\n\nimport { doVitalsCounts, doVitalsFeedback } from './vitalsChecking';\n\nimport {\n    intvChecks,\n    exceptionDefs,\n    fbTemplatesDef,\n} from \"@meddbriefer/feedback-data\"\n\nimport { processInterventionAnswers, processAssessmentAnswers, getPrescribedInvAnswers, initializePromptAnswerGrading } from \"@meddebriefer/prompt-answer-grading\";\n\n\nimport { getChecklistItemsByType, getChecklistHierarchy, groupByKey } from './scenarioDataAccesors';\n\n\nlet debugSummarize = false\n\nlet problemStates\nlet cautionStates\nlet constraintsViolated = []\nlet insertInterventionHeader = false  //setting to true helps during debugging analysis, shows headers for problems\n//index of subphase names and value is phase id to which belongs\nlet subPhases = {}\n// list of all subphase IDs\nlet requiredSubphases\nlet requiredPhaseNames = []\nlet requiredPhaseAndSubPhases\nlet phaseRequiredAtEnd\nlet scenario\n//let version\nlet phaseFB\nvar promptIDs = {}\nvar itemByID\nvar itemByLabel\n// sts 1/23/22 - added as global\nlet checklistHierarchy\nlet training\n\n// analysisFields to include in output\nlet analysisFields = [\n    \"numericalID\",\n    \"actionDescription\",\n    \"id\",\n    \"type\",\n    \"label\",\n    \"labelID\",\n    \"answerDetails\",\n    \"vital\",\n    \"vitalType\",\n    \"value\",\n    \"subPhase\",\n    \"finding\",\n    \"intvStatus\",\n    \"vitalsNotDoneTwice\",\n    \"vitalsDoneTwice\",\n    \"probLabel\",\n    \"feedback\",\n    \"phFeedback\",\n    \"phaseOrderStatus\",\n    \"lateRelativeTo\",\n    \"why\",\n    \"orderingFB\",\n    \"vitalsFB\",\n    \"incorrectAnswersFB\",\n    \"intvStatusFB\",\n    \"redundantToFB\",\n    \"minimalWhy\",\n    \"timestamp\",\n    \"status\",\n    \"displayColor\",\n    \"comment\",\n]\n\nfunction initGlobals(scen) {\n    problemStates = getStatesForStatus(\"Problem\", fbTemplatesDef)\n    cautionStates = getStatesForStatus(\"Caution\", fbTemplatesDef)\n    phaseRequiredAtEnd = \"ongoing-mgmt-plan\"\n    scenario = scen\n    initializeConstraints(scen.name)\n    getPromptIDs(scenario)\n    training = scenario.info.debriefing\n    initializePromptAnswerGrading(scenario)\n    itemByID = initializeItemLookupByID(scen)\n    itemByLabel = initializeItemLookupByLabel(scen)\n    requiredPhaseNames = getChecklistItemsByType(scen, MDB_TYPES.PHASE).map(e => e.id).concat([\"Unknown\"])\n    requiredSubphases = getChecklistItemsByType(scen, MDB_TYPES.SUB_PHASE).map(e => e.id)\n    checklistHierarchy = getChecklistHierarchy(scen)\n    requiredPhaseAndSubPhases = findPhaseSubphasesOrdered(checklistHierarchy)\n    checklistHierarchy.forEach(ph => {\n        if (undefined === ph.subPhases) {\n            subPhases[ph.id] = ph.label\n        }\n        else {\n            ph.subPhases.forEach(sp => {\n                subPhases[sp.id] = ph.label\n            })\n        }\n    })\n    subPhases[\"Unknown\"] = \"Unknown\"\n    // initializeC2FB(scen)\n    constraintsViolated = []\n    phaseFB = []\n}\n\n\n\nfunction getPromptIDs(scen) {\n    if (scen._interventionPrompts) {\n        let prompts = scen._interventionPrompts\n        prompts.forEach(prompt => {\n            promptIDs[prompt.id] = prompt.label\n        })\n\n    }\n}\n\n\n//This starts section for accessing checklist and intervention components by id or label\nconst initializeItemLookupByID = (scenario) => {\n    let checklistLookupByID = groupByKey(scenario._checkListMetaData.filter(e => ANALYSIS_TYPES.includes(e.type)), \"id\")\n    let intvLookupByID\n    if (!!scenario._interventions) {\n        intvLookupByID = groupByKey(scenario._interventions, \"id\")\n    }\n    else { intvLookupByID = groupByKey(scenario.intvMetaData.filter(e => ANALYSIS_TYPES.includes(e.type)), \"id\") }\n    let result = Object.assign(checklistLookupByID, intvLookupByID)\n    return result\n}\n\nconst initializeItemLookupByLabel = (scenario) => {\n    let checklistLookupByLabel = groupByKey(scenario._checkListMetaData.filter(e => ANALYSIS_TYPES.includes(e.type)), \"label\")\n    let intvLookupByLabel\n    if (!!scenario._interventions) {\n        intvLookupByLabel = groupByKey(scenario._interventions, \"label\")\n    }\n    else { intvLookupByLabel = groupByKey(scenario.intvMetaData.filter(e => ANALYSIS_TYPES.includes(e.type)), \"label\") }\n    let result = Object.assign(checklistLookupByLabel, intvLookupByLabel)\n    return result\n}\n\n\nconst findPhaseSubphasesOrdered = (phases) => {\n    let result = []\n    phases.forEach(ph => {\n        if (!!ph.subPhases) {\n            let subPhIds = ph.subPhases.map(e => e.id)\n            //not currently useful to collect parent phases unless there were no subphases\n            //if parent phase included subphases and steps then it should be in this result\n            //result = result.concat(ph.id)\n            result = result.concat(subPhIds)\n        }\n        else { result = result.concat(ph.id) }\n    })\n    return result\n}\n\nconst collectScenAssessments = (problems) => {\n    let assessments = []\n    problems.forEach(prob => {\n        if (prob.assessments !== \"\") {\n            assessments = assessments.concat(prob.assessments)\n        }\n    })\n    return assessments\n}\n\nconst collectScenInterventions = (problems) => {\n    let interventions = []\n    problems.forEach(prob => {\n        if (prob.allActions !== \"\") {\n            let ids = (prob.allActions).map(a => a.id)\n            interventions = interventions.concat(ids)\n            ids = (prob.allAlts).map(a => a.id)\n            interventions = interventions.concat(ids)\n        }\n    })\n    return interventions\n}\n\n//will need to update to comply with any relevant constraints on phases and subphases\n//currently looks for missing phases/subphases and inserts them into the analysis list\n//based on where last preceding phase appeared\nconst insertMissingSubphases = (phases, phaseNames) => {\n    let priorPh\n    requiredPhaseAndSubPhases.forEach((phase, i) => {\n        if (!phaseNames.includes(phase)) {\n            if (phase === phaseRequiredAtEnd) {  //needs special handling to be placed last \n                priorPh = requiredPhaseAndSubPhases[requiredPhaseAndSubPhases.length - 2]\n            }\n            else {\n                //find last index for phase before and splice that\n                if (i === 0) {\n                    priorPh = requiredPhaseAndSubPhases[0]\n                }\n                else { priorPh = requiredPhaseAndSubPhases[i - 1] }\n            }\n\n            let insertionIndex = 0\n            if (priorPh !== phase) {\n                insertionIndex = phaseNames.lastIndexOf(priorPh)  //if prior phase was missing it will have been inserted earlier\n                insertionIndex = insertionIndex + 1\n            }\n\n            phaseNames.splice(insertionIndex, 0, phase); //insert it where it should have appeared\n            phases.splice(insertionIndex, 0, []); //add the empty array for phase objects\n        }\n    });\n    return [phases, phaseNames]\n}\n\n\n//as vital requests and intervention requests are made, update that it was requested\n//if it is one that we are tracking for post intervention success.\nconst updateVital = (vitalEntries, timestamp) => {\n    let updatedEntries = []\n    vitalEntries.forEach(vitalEntry => {\n        if (vitalEntry.timestamp < timestamp) {\n            vitalEntry[\"foundCk\"] = true\n        }\n        updatedEntries.push(vitalEntry)\n    })\n    return updatedEntries\n}\n\n\nconst processRawLogForDisplay = (events) => {\n    let processedForDisplay = []\n    events.forEach((event, i) => {\n        // Each eventObj is one of the lines in the displayed base log\n        // Set up fields for extra annotations for this event after analyzing each event\n        let eventObj = {\n            \"comment\": \"\",\n            \"numericalID\": i+1,\n            \"status\": \"test\",\n            \"intvStatus\": [], //will be an array what patient status checks were and weren't done\n            \"contraindicatedWhy\": \"\",\n            \"minimalWhy\": \"\",\n            \"why\": \"\",\n            \"answerCorrect\": \"false\",\n            \"answerDetails\": {},\n            \"expertPhase\": \"\",  //filled in only for interventions\n            \"workingPhase\": \"\",  //is subphase or if no suphase then the phase\n            \"suggestedPhase\": \"\", //mostly for interventions so don't override info on when was originally done\n            \"phaseLabel\": \"\", //label to display for the phase or subphase\n            \"protocol\": \"\",\n            \"protocolRelationship\": \"\",\n            \"probLabel\": \"\",\n            \"solutionIds\": [],\n            \"assessments\": \"\",\n            \"required\": false,\n            \"actionDescription\": \"\",\n            \"assessmentFB\": \"\",\n            \"incorrectAnswersFB\": \"\",\n            \"orderingFB\": \"\",\n            \"processingState\": \"good\" // values of good/bad used to filter out events not needed for analysis or displaying\n        };\n\n        if (!event.answers) { eventObj.answerCorrect = true }\n\n        // copy over the event fields that exist in the input log from observer UI (which is type dependent)\n        const EVENT_FIELDS = [\"id\", \"interventionID\", //\"intvVariant\",  //ignoring intvVariant for now until questions resolved 8/10/22\n            \"label\", \"finding\", \"phase\", \"subPhase\", \"vitalType\", \"vital\", \"value\", \"type\", \"prompt\", \"promptID\", \"intervention\", \"timestamp\", \"probLabel\"];\n        EVENT_FIELDS.forEach(fldName => {\n            if (!!event[fldName]) {\n                eventObj[fldName] = event[fldName];\n            }\n        });\n\n\n        if (event.type === \"intervention\") {\n            if (!!event.interventionID) { eventObj.id = event.interventionID }\n        }\n\n        let item = getItem(eventObj.id, itemByID, itemByLabel)\n        if (!!item) {\n            eventObj.label = item.label\n            eventObj.abbrLabel = item.abbrLabel\n        }\n\n        //copy event fields if defined to initialize some of the above annotation fields\n\n        /* if (!!eventObj.abbrLabel){eventObj.actionDescription = eventObj.abbrLabel;}\n        else {eventObj.actionDescription = eventObj.label;} */\n\n        eventObj.actionDescription = eventObj.label;\n\n        //if (!!event.type) { eventObj.status = event.type; }\n\n        // prefer subPhase if available\n        if (!!event.subPhase) {\n            eventObj.workingPhase = event.subPhase;\n            eventObj.phaseLabel = getItem(event.subPhase, itemByID, itemByLabel).label\n        }\n        else {\n            if (!!event.phase) {\n                eventObj.workingPhase = event.phase;\n                eventObj.phaseLabel = getItem(event.phase, itemByID, itemByLabel).label\n            }\n        }\n        eventObj.expertPhase = eventObj.workingPhase;\n        processedForDisplay.push(eventObj)\n    })\n    let trimmedActions = trimActions(processedForDisplay, analysisFields)\n\n    const retVal = {\n        \"events\": trimmedActions,\n        // \"FBfields\": c2FB,\n        \"constraintsViolated\": [],\n        \"requiredPhaseNames\": requiredPhaseNames,\n        \"promptIDs\": promptIDs\n        // \"feedbackTemplates\": assessmentEntries,\n    }\n    return retVal\n\n}\n\n\n/* function isEmpty(obj) {\n        return Object.keys(obj).length === 0;\n} */\n\nconst annotateInputEvents = (events, problems) => {\n    let confirmedEvents = [];\n    let interventionsConfirmed = [];  //needed for vital checking\n    //instead of a multi-dimensional array, am using an array of phase and subphase names e.g. \"BSI\", \"prinary\" ...\n    let phaseNames = [];\n    let phases = []; //and another array with the actual content for each phase.  I can search phaseNames for the index into phases\n    let phaseObjects = [];\n    let trackForStatus = {};  //save correct interventions that were done that require status checks later\n    //let altFound = undefined   //can have only one set of alternative interventions per problem\n\n\n    // will create a phases entry of that name in phaseNames and then use that index to retrieve the appropriate phase entry\n    //in structure phases to add on the missing items (assessment or intervention) for that phase\n    let priorPhase = \"\";\n    let parentPhase = \"\"\n    let parentIndex = 0\n    let phaseIndex = 0;\n    let newPhaseStart = true\n    let assessmentTypes = [\"assessment\", \"required-action\", \"decision-option\", \"assessment-option\"]\n\n    // created annotated object for each event\n    events.forEach((event, i) => {\n        // Each eventObj is one of the lines in the displayed base log\n        // Set up fields for extra annotations for this event after analyzing each event\n        let eventObj = {\n            \"comment\": \"\",\n            \"numericalID\": i,\n            \"status\": \"\",\n            \"intvStatus\": [], //will be an array what patient status checks were and weren't done\n            \"contraindicatedWhy\": \"\",\n            \"minimalWhy\": \"\",\n            \"why\": \"\",\n            \"answerCorrect\": \"false\",\n            \"answerDetails\": {},\n            \"expertPhase\": \"\",  //filled in only for interventions\n            \"workingPhase\": \"\",  //is subphase or if no suphase then the phase\n            \"suggestedPhase\": \"\", //mostly for interventions so don't override info on when was originally done\n            \"phaseLabel\": \"\", //label to display for the phase or subphase\n            \"protocol\": \"\",\n            \"protocolRelationship\": \"\",\n            \"probLabel\": \"\",\n            \"solutionIds\": [],\n            \"assessments\": \"\",\n            \"required\": false,\n            \"actionDescription\": \"\",\n            \"assessmentFB\": \"\",\n            \"incorrectAnswersFB\": \"\",\n            \"orderingFB\": \"\",\n            \"processingState\": \"good\" // values of good/bad used to filter out events not needed for analysis or displaying\n        };\n\n        if (!event.answers) { eventObj.answerCorrect = true }\n\n        // copy over the event fields that exist in the input log from observer UI (which is type dependent)\n        const EVENT_FIELDS = [\"id\", \"interventionID\", //\"intvVariant\",  //ignoring intvVariant for now until questions resolved 8/10/22\n            \"label\", \"finding\", \"phase\", \"subPhase\", \"vitalType\", \"vital\", \"value\", \"type\", \"prompt\", \"promptID\", \"intervention\", \"timestamp\", \"probLabel\"];\n        EVENT_FIELDS.forEach(fldName => {\n            if (!!event[fldName]) {\n                eventObj[fldName] = event[fldName];\n            }\n        });\n\n\n        if (event.type === \"intervention\") {\n            if (!!event.interventionID) { eventObj.id = event.interventionID }\n        }\n\n        let item = getItem(eventObj.id, itemByID, itemByLabel)\n        if (!!item) {\n            eventObj.label = item.label\n            eventObj.abbrLabel = item.abbrLabel\n        }\n\n        //copy event fields if defined to initialize some of the above annotation fields\n\n        /* if (!!eventObj.abbrLabel){eventObj.actionDescription = eventObj.abbrLabel;}\n        else {eventObj.actionDescription = eventObj.label;} */\n\n        eventObj.actionDescription = eventObj.label;\n\n        if (!!event.type) { eventObj.status = event.type; }\n\n        // prefer subPhase if available\n        if (!!event.subPhase) {\n            eventObj.workingPhase = event.subPhase;\n            eventObj.phaseLabel = getItem(event.subPhase, itemByID, itemByLabel).label\n        }\n        else {\n            if (!!event.phase) {\n                eventObj.workingPhase = event.phase;\n                eventObj.phaseLabel = getItem(event.phase, itemByID, itemByLabel).label\n            }\n        }\n        eventObj.expertPhase = eventObj.workingPhase;\n\n        //if current phase same as prior then keep on with the current phase\n        // otherwise initialize for a new phase but don' let an intervention\n        // or intervention answer set a new phase since this info in event is\n        // not reliable\n\n        if (priorPhase !== eventObj.workingPhase || parentPhase !== eventObj.phase) {\n            if (priorPhase !== \"\" && assessmentTypes.includes(eventObj.type)) {\n                //have a non initial phase change and we have an assessment type (i.e. we can't base phase changes on interventions)\n                newPhaseStart = true\n                phases[phaseIndex] = phaseObjects;\n                if (phaseIndex !== parentIndex) {\n                    phases[parentIndex] = phases[parentIndex].concat(phaseObjects);\n                }\n                phaseIndex++\n\n                //if upcoming parent phase is different than current parent phase then set up\n                //for a new parent phase\n                if (eventObj.phase !== parentPhase) {\n                    parentPhase = eventObj.phase\n                    parentIndex = phaseIndex\n                    // if the upcoming is truly a parent with subphases\n                    // then add an extra entry for the new parent phase\n                    if (eventObj.phase !== eventObj.workingPhase) {\n                        //create the new parent phase\n                        phases[parentIndex] = []\n                        phaseNames[parentIndex] = parentPhase\n                        phaseIndex++\n                    }\n                }\n            }\n            else {\n                if (priorPhase === \"\" && assessmentTypes.includes(eventObj.type)) {\n                    // first item in events so initialize\n                    parentPhase = eventObj.phase\n                    // if the event parent phase is not the same as the subPhase\n                    // then we need to save that parent phase in phases and phaseNames\n                    if (parentPhase !== eventObj.workingPhase) {\n                        parentPhase = eventObj.phase\n                        phaseNames[parentIndex] = parentPhase\n                        phases[parentIndex] = []\n                        phaseIndex++;\n                    }\n                }\n\n                else {\n                    if (priorPhase === \"\") {\n                        //did an intervention before doing any assessments\n                        //so make up an initial phase of unknown\n                        parentPhase = \"Unknown\"\n                        eventObj.workingPhase = parentPhase\n                        eventObj.phase = parentPhase\n                        eventObj.subPhase = \"\"\n                    }\n                    else { newPhaseStart = false }\n                }\n            }\n\n\n\n            //now setup for collecting for the current phase if not skipping new phase start\n            if (newPhaseStart) {\n                priorPhase = eventObj.workingPhase;\n                phaseObjects = [];\n                phaseNames[phaseIndex] = priorPhase;\n                phases[phaseIndex] = []\n            }\n            else { newPhaseStart = true }\n        }\n\n\n        let eventType = eventObj.type;\n        // List of types in log that are currently processed.  Rest are filtered out.\n        let processedTypes = [\"assessment\", \"required-action\", \"intervention\", \"obtain-vital-sign\", \"decision-option\", \"assessment-option\"];\n\n        //skip over adding anything not of these types to the debriefing display for now\n        if (!processedTypes.includes(eventType)) {\n            eventObj.processingState = \"bad\";\n        }\n\n\n\n\n\n        if (eventObj.processingState === \"good\") {\n\n            if (eventObj.type === \"obtain-vital-sign\") {\n                //if it is an intervention status check then the vital field contains\n                //the intervention id and otherwise the vital label\n                let vital = eventObj.vital\n                let type = \"\"\n                if (eventObj.vitalType === \"intervention-status\") {\n                    if (interventionsConfirmed.includes(vital)) {\n                        type = \"intv\"\n                    }\n                    else { type = \"noIntv\" }\n                }\n                else { type = \"vital\" }\n\n                //update trackForStatus relative to this \"vital\"\n                let vitalEntry = trackForStatus[vital]\n                //set the status for this particular vital (i.e. makes sense to ask for it or not)\n                switch (type) {\n                    case \"intv\":\n                        eventObj.status = \"patientIntvCheck\"\n                        if (vitalEntry && (vitalEntry.timestamp < eventObj.timestamp)) {\n                            vitalEntry[\"foundCk\"] = true\n                            trackForStatus[vital] = vitalEntry\n                        }\n                        break\n                    case \"noIntv\":\n                        eventObj.status = \"intvCheckWNoIntvFound\"\n                        break\n                    case \"vital\":\n                        eventObj.status = \"patientVitalCheck\"\n                        if (vitalEntry) {\n                            vitalEntry = updateVital(vitalEntry, eventObj.timestamp)\n                            trackForStatus[vital] = vitalEntry\n                        }\n                        break\n                    default: eventObj.status = \"unexpectedPatientIntvCheck\"\n                }\n\n\n\n            }\n            if (eventObj.type === \"intervention\") {\n                let item = getItem(eventObj.id, itemByID, itemByLabel)  //sometimes item ids get edited during development\n                if (!!item) {\n                    eventObj.label = item.label\n                    eventObj.actionDescription = eventObj.label\n                    confirmedEvents.push(eventObj.id)\n                    interventionsConfirmed.push(eventObj.id)\n                }\n                else {\n                    eventObj.label = eventObj.id\n                    eventObj.actionDescription = \"No longer defined \" + eventObj.label\n                    confirmedEvents.push(eventObj.id)\n                    interventionsConfirmed.push(eventObj.id)\n                }\n\n                // iterate through all problem actions looking how to format the\n                // data structue for the current \"event\"\n                problems.forEach((prob, j) => {\n                    // We're going through intervention actions in the order required/needed and then other since\n                    // it is possible but unlikely to have multiples and we want the last one to win.\n                    // Also, we are assuming minimal is always a subset of goodIntv\n                    const PROBLEM_ACTION_FIELDS = [\"why\", \"probLabel\", \"protocolRelationship\", \"probLabel\"];\n\n                    // check for this action to be an intervention for a problem\n                    prob.allActions?.forEach((action, k) => {\n                        if (action.id === eventObj.id) {\n                            //set up status tracking for the eventObj\n                            trackForStatus = setupStatusChecking(eventObj, trackForStatus)\n\n                            // fill out problem related fields in the action event\n                            fillOutProblemFields(prob, PROBLEM_ACTION_FIELDS, eventObj, action)\n                        }\n                    });\n\n\n                    prob.allAlts?.forEach((alt, j) => {\n                        if (alt.id === eventObj.id) {\n                            if (!prob.altFound) {\n                                //set up status tracking for the eventObj\n                                trackForStatus = setupStatusChecking(eventObj, trackForStatus)\n                                fillOutProblemFields(prob, PROBLEM_ACTION_FIELDS, eventObj, alt)\n                                prob.altFound = eventObj.label\n                            }\n                            else {\n                                eventObj.status = \"redundant\"\n                                eventObj.redundantToFB = prob.altFound\n                            }\n                        }\n\n                    })\n\n\n                    // check for this action to be a contraindication for a problem solution\n                    prob.allContras?.forEach((contra, j) => {\n                        if (contra.id === eventObj.id) {\n                            eventObj.status = contra.protocolRelationship;\n                            PROBLEM_ACTION_FIELDS.forEach(fldName => {\n                                if (!!contra[fldName]) {\n                                    eventObj[fldName] = contra[fldName];\n                                }\n                            });\n                            if (!!prob.probLabel) { eventObj.probLabel = prob.probLabel; }\n                        }\n                    })\n                })\n                //Do the grading of the event and return an event with\n                //added fields with results\n                let variant\n\n                if (!!event.intvVariant && typeof (event.intvVariant) === 'string' && event.intvVariant !== \"{}\") {\n                    let origVariant = JSON.parse(event.intvVariant)  //intvVariant2JSON(event.intvVariant)}\n                    let key = Object.keys(origVariant)[0]\n                    let val = origVariant[key][0]\n                    //9/28/22 commenting out for trial 1 because no variants encoded in condition 2 feedback\n                    //eventObj.variantID = val\n                    variant = \"{\\\"\" + key + \"\\\":\\\"\" + val + \"\\\"}\"\n                }\n                else { variant = \"{}\" }   //intvVariant2JSON({})} \n                let prescribedAnswers = getPrescribedInvAnswers(event.interventionID, variant)\n                eventObj = processInterventionAnswers(event, eventObj, prescribedAnswers, \"incorrect-answers\")\n\n                //anything with leftover status of intervention means it wasn't part of the solution\n                if (eventObj.status === \"intervention\") { eventObj.status = \"irrelevant\" }\n\n            }\n\n            if (eventObj.type === \"decision-option\") {\n                let prescribedAnswers = scenario.checkListCorrectness\n                let parentItem = getItem(event.parentID, itemByID, itemByLabel)\n                if (parentItem) {\n                    event.parentLabel = parentItem.label\n                }\n                eventObj = processAssessmentAnswers(event, eventObj, prescribedAnswers, \"decision-option-incorrect\")\n                if (!eventObj.answerCorrect) {\n                    eventObj.incorrectAnswersFB = \"You should have responded \" + eventObj.incorrectAnswersFB;\n                }\n            }\n\n            if (eventObj.type === \"assessment-option\") {\n                let prescribedAnswers = scenario.checkListCorrectness\n                let parentItem = getItem(event.parentID, itemByID, itemByLabel)\n                if (parentItem) {\n                    event.parentLabel = parentItem.label\n                }\n                eventObj = processAssessmentAnswers(event, eventObj, prescribedAnswers, \"assessment-option-incorrect\")\n                if (!eventObj.answerCorrect) {\n                    eventObj.incorrectAnswersFB = \"You should have responded \" + eventObj.incorrectAnswersFB;\n                }\n            }\n\n            // add the formatted object to our list of formatted objects for the current phase and the id to our set of confirmed ids\n            if (eventObj.type === \"intervention\") {\n                let variant\n                if (!!eventObj.intvVariant) {\n                    variant = eventObj.intvVariant\n                }\n                else { variant = \"{}\" }\n                confirmedEvents.push(eventObj.id + \"+\" + variant)\n                interventionsConfirmed.push(eventObj.id)\n            }\n            else { confirmedEvents.push(eventObj.id) }\n            phaseObjects.push(eventObj)\n        }\n    });\n\n    // store the last phase processed\n    phases[phaseIndex] = phaseObjects;\n    if (phaseIndex !== parentIndex) {\n        phases[parentIndex] = (phases[parentIndex]).concat(phaseObjects)\n    };\n    return [phases, phaseNames, confirmedEvents, trackForStatus]\n}\n\n//start support functions for intervention handling\n\n\nconst setupStatusChecking = (eventObj, trackForStatus) => {\n    //see if this is an event whose status should be checked by the student\n    //and initialize its tracking.  Not yet limiting to event id when\n    //defining what needs to be tracked in the structure intvChecks\n    //so also checking event label\n    let statusChecking  //the entry retrieve from intvChecks\n    let intv = eventObj.id\n    statusChecking = intvChecks[eventObj.label]\n    if (!statusChecking) {\n        statusChecking = intvChecks[eventObj.id]\n    }\n\n    if (!!statusChecking) {\n        let initialEntry = { \"intervention\": intv, \"timestamp\": eventObj.timestamp, \"foundCk\": false }\n        //put the intervention on the list if there is a direct status check possible for it\n        if (statusChecking.intvStatusNeeded) {\n            trackForStatus[intv] = Object.assign({}, initialEntry)\n        }\n        //if any vitals are listed for this intervention as a way of checking its status then\n        //put those on the statusChecking list.  Anytime a vital is checked after the timestamp\n        //it will count towards checking the status of the intervention\n        statusChecking.vitalsNeeded.forEach(vital => {\n            if (!trackForStatus[vital]) { trackForStatus[vital] = [Object.assign({}, initialEntry)] }\n            else { trackForStatus[vital].push(Object.assign({}, initialEntry)) }\n        })\n    }\n    return trackForStatus\n\n}\n\nconst fillOutProblemFields = (prob, PROBLEM_ACTION_FIELDS, eventObj, action) => {\n    if (!!action.assessments) { eventObj.assessmentsNeeded = action.assessments }\n    if (!!action.phase) {\n        eventObj.when = action.phase\n        eventObj.suggestedPhase = action.phase\n    };\n    if (!!prob.protocols) { eventObj.protocol = prob.protocols }\n    if (eventObj.answerCorrect) {\n        eventObj.status = \"goodIntv\";\n    }\n    else { eventObj.status = \"incorrect-answers\"; }\n    //eventObj.probLabel = prob.probLabel;\n    PROBLEM_ACTION_FIELDS.forEach(fldName => {\n        if (!!action[fldName]) {\n            eventObj[fldName] = action[fldName];\n        }\n    });\n    if (!!action[\"id-label\"]) { eventObj[\"label\"] = action[\"id-label\"]; }  //dealing with name changes in incoming data so software stays the same\n\n}\n\n//end supoort functions for intervention handling\n\n\n\n\n//main function for dealing with missing assessment steps\n\nconst checkForMissingAssessments = (problems, events, confirmedEvents, phaseNames, phases) => {\n    let neededScenAssessments = collectScenAssessments(problems)\n    let indexCounter = events.length;\n    var checklistSteps = scenario._checkListMetaData.filter(md => [MDB_TYPES.ASSESS, MDB_TYPES.REQUIRED].includes(md.type));\n\n    // before evaluating assessment steps, deal with exceptional cases where one or more steps is not\n    // necessary for a given scenario.  Because GCS value is a string and not a formatted object\n    // we can't reliably parse out values and units to do more general checks so can only set what\n    // steps should not be assessed for a particular scenario.  Requires info on feedback to give as\n    // well.\n    // Get any exceptional steps associated with the current scenario\n    var exceptions = [];\n    for (let exceptionDef of exceptionDefs) {\n        if (exceptionDef.scenarioName === scenario.name) {\n            exceptions = exceptionDef.exceptions;\n            break;\n        }\n    }\n\n    exceptions.forEach((exception, j) => {\n        // remove the step from the checklist as it is not required\n        checklistSteps = checklistSteps.filter(entry => entry.id !== exception[0]);\n\n        // if the step was done during the observation then mark it as an issue\n        if (confirmedEvents.includes(exception[0])) {\n            // it could appear in any phase so check all phases and mark\n            // each instancs as unnecessary\n            phases.forEach((phaseObjects, j) => {\n                phaseObjects.forEach((action, i) => {\n                    if (action.id === exception[0]) {\n                        action.why = exception[1];\n                        action.status = \"notNecessary\";\n                    }\n                });\n            });\n        }\n\n    });\n\n    // iterate through all checklist steps for ones for which we don't have formated objects\n    checklistSteps.forEach((cls, i) => {\n        if (!confirmedEvents.includes(cls.id)) {\n            // add so we don't check for the missing checklist item again\n            confirmedEvents.push(cls.id);\n            let phaseObject = {\n                \"comment\": \"\",\n                \"numericalID\": indexCounter,\n                \"status\": \"missingRequiredAssessment\",\n                \"intvStatus\": [], //will be an array what patient status checks were and weren't done\n                \"expertPhase\": \"\",\n                \"workingPhase\": \"\",\n                \"contraindicatedWhy\": \"\",\n                \"minimalWhy\": \"\",\n                \"why\": \"\",\n                \"probLabel\": \"\",\n                \"protocol\": \"\",\n                \"actionDescription\": \"\",\n                \"assessmentFB\": \"\",\n                \"timestamp\": -1\n            };\n\n            //copy over the step fields that exist (type dependent)\n            //does prompt does exist in checlistSteps???  9/20/22\n            const STEP_FIELDS = [\"id\", \"label\", \"phase\", \"subPhase\", \"type\", \"prompt\"];\n            STEP_FIELDS.forEach(fldName => {\n                if (!!cls[fldName]) {\n                    phaseObject[fldName] = cls[fldName];\n                }\n            });\n            let assessments = scenario.assessmentFindings\n            phaseObject[\"finding\"] = assessments[cls.id]\n            let item\n            if (!!cls.subPhase) {\n                phaseObject.workingPhase = cls.subPhase;\n                item = getItem(cls.subPhase, itemByID, itemByLabel)\n                if (!!item) {\n                    phaseObject.phaseLabel = item.label\n                }\n            }\n            else {\n                if (!!cls.phase) {\n                    phaseObject.workingPhase = cls.phase;\n                    item = getItem(cls.phase, itemByID, itemByLabel)\n                    if (!!item) {\n                        phaseObject.phaseLabel = item.label\n                    }\n                }\n            }\n            phaseObject.when = phaseObject.workingPhase;\n            phaseObject.expertPhase = phaseObject.workingPhase;\n\n            if (!!phaseObject.label) { phaseObject.actionDescription = phaseObject.label; }\n\n            //let findings = scenario.assessmentFindings[cls['id']]\n            //if (!!findings & findings !== \"Unremarkable\" & findings !== \"Stable\"){\n\n            if (neededScenAssessments.includes(cls['id'])) {\n                phaseObject.assessmentFB = \"Thus you missed finding: \" + scenario.assessmentFindings[cls['id']]\n            }\n            if (phaseObject.type === \"required-action\") {\n                phaseObject.status = \"missingRequiredAssessment\"\n            }\n            //assign special status for items marked as \"not-graded\"\n\n            if (!cls.graded) {\n                phaseObject.status = \"not-graded\"\n            }\n            insertInPhaseRelativeToSuggestedOrder(phaseNames, phases, phaseObject, checklistSteps, i, confirmedEvents, checklistHierarchy, requiredPhaseNames, requiredSubphases, phaseRequiredAtEnd)\n            //insertInPhaseInOrder(phaseNames, phases, phaseObject, i);\n            indexCounter++;\n        }\n    });\n    return [confirmedEvents, phaseNames, phases, indexCounter]\n}\n\n\n\n//rearrange the problem data structure for use during analysis\n\nconst setupProblems = (defs, sols, actions) => {\n    let problems = [];\n    if (actions.length !== 0) {\n        for (let problemDef of defs) {\n            let problem = {};\n            let solutionIDs = problemDef.solutions;\n            let probSols = sols.filter(sol => sol.problemID === problemDef.id)\n            problem.probLabel = problemDef.label;\n            problem.id = problemDef.id\n            problem.lifeThreat = problemDef.lifeThreat\n            problem.vitals = problemDef.vitals\n            problem.allActions = []\n            problem.allContras = []\n            problem.allAlts = []\n            let assessments = problemDef.assessments\n            problem.assessments = assessments.map(obj => obj.assessmentID)\n            problem.solutions = []\n            for (let solID of solutionIDs) {\n                let sol = probSols.filter(sol => sol.id === solID)[0]\n                let solution = Object.assign({}, sol)\n                solution.actions = []\n                solution.otherActions = []\n                solution.altActions = []\n                let actEntries\n                let actIDs = sol.actions\n                actEntries = actions.filter(act => actIDs.includes(act.id))\n                solution.actionsInSuggestedOrder = actEntries.filter(act =>\n                    [\"alternative\", \"required\", \"minimal\", \"optional\"].includes(act.protocolRelationship))\n                for (let entry of actEntries) {\n                    let act = Object.assign({}, entry)\n                    act.id = act.interventionID\n                    let item = itemByID[act.id]\n                    act.probLabel = problem.probLabel\n                    act.altFound = undefined\n                    if (!!item) {\n                        act[\"id-label\"] = item[0].label\n                    }\n                    else { act[\"id-label\"] = act.id }\n                    switch (act.protocolRelationship) {\n                        case \"contraindicated\":\n                        case \"irrelevant\":\n                        case \"unnecessary\":\n                            solution.otherActions.push(act)\n                            pushNew(act, problem.allContras)  //need to be able to annotate an action without deciding yet on which solution under\n                            break\n                        case \"alternative\":\n                            solution.altActions.push(act)\n                            pushNew(act, problem.allAlts)\n                            break\n                        case \"required\":\n                        case \"minimal\":\n                        case \"optional\":\n                            solution.actions.push(act)\n                            pushNew(act, problem.allActions)  //need to be able to annotate an action without deciding yet on which solution under\n                            break\n                        default:\n                            break\n                    }\n                }\n                problem.solutions.push(solution)\n            }\n\n            problems.push(problem);\n\n        }\n    }\n    return (problems);\n};\n\n\n\n// create structure for tracking whether interventions are checked\nconst insertMissingIntvChecks = (events, statusTracking) => {\n    let toUpdate\n    for (const [key, entry] of Object.entries(statusTracking)) {\n        if (Array.isArray(entry)) {\n            for (let obj of entry) {\n                let newObj = { \"label\": key, \"foundCk\": obj[\"foundCk\"] }\n                toUpdate = getEventsByIdTime(events, obj[\"intervention\"], obj[\"timestamp\"])\n                for (let intv of toUpdate) {\n                    if (!intv[\"intvStatus\"].includes(newObj)) {\n                        intv[\"intvStatus\"].push(newObj)\n                    }\n                }\n            }\n        }\n        else {\n            let newObj = { \"label\": \"intervention status\", \"foundCk\": entry[\"foundCk\"] }\n            toUpdate = getEventsByIdTime(events, key, entry[\"timestamp\"])\n            toUpdate.forEach(intv => {\n                if (!intv[\"intvStatus\"].includes(newObj)) {\n                    intv[\"intvStatus\"].push(newObj)\n                }\n            })\n        }\n    }\n    return events\n}\n\nfunction findBestSolMatch(prob, confirmedEvents) {\n    prob.bestFittingSol = []\n    let bestIndex = -1\n    let finalIndex = -1\n    let bestVal = -1\n    let bestLen = -1\n    let foundOneAltAction = false\n    const solutions = prob.solutions\n    solutions.forEach((sol, j) => {\n        let solVal\n        sol.found = []\n        sol.notFound = []\n        //let variant   //commenting out until variant questions resolved 8/10/22\n        let variant = \"{}\"\n        sol.actions.forEach((action, f) => {\n            //commenting out until variant questions resolved 8/10/22\n            /* if (!!action.interventionVariant){  \n                variant = intvVariant2JSON(action.interventionVariant)}\n            else {variant = \"{}\"} */\n\n            if (confirmedEvents.includes(action.id + \"+\" + variant)) {\n                (sol.found).push(action.id)\n            }\n            else {\n                if (!action.protocolRelationship.includes(\"optional\")) {\n                    (sol.notFound).push(action)\n                }\n            }\n        })\n        let solLen = (sol.actions).length\n        let solLenFound = (sol.found).length\n        if (solLenFound === 0) {\n            solVal = 0\n        }\n        else { solVal = solLenFound / solLen }\n        if (solVal === 1 && solLenFound > bestLen) {  //prefer the longest solution match\n            bestLen = solLenFound\n            bestIndex = j\n            finalIndex = j\n        } //finalIndex represents a perfect match\n        else {\n            if (solVal >= bestVal && solLenFound > bestLen) {\n                bestLen = solLenFound\n                bestIndex = j\n                bestVal = solVal\n            }\n        }\n\n    })\n\n    //address alternative actions.  First see if found one of the\n    //alternative actions.  If not then push the first of the alternative\n    //set onto the actions not found.\n    if (finalIndex === -1) { finalIndex = bestIndex }\n    let fSol = solutions[finalIndex]\n    let altActsToRemove\n    //need to adjust actions in suggested order to eliminate alts not being used\n    fSol.ordering = [...fSol.actionsInSuggestedOrder]\n\n    if (fSol.altActions.length !== 0) {\n        //let variant  //commenting out until variant questions resolved 8/10/22\n        let variant = \"{}\"\n        for (let action of fSol.altActions) {\n            //commenting out until variant questions resolved 8/10/22\n            /* if (!!action.interventionVariant){\n                variant = intvVariant2JSON(action.interventionVariant)}\n            else {variant = \"{}\"} */\n            if (confirmedEvents.includes(action.id + \"+\" + variant)) {\n                foundOneAltAction = true\n                break\n            }\n        }\n        if (!foundOneAltAction) {\n            let action = fSol.altActions[0]\n            altActsToRemove = (fSol.altActions).filter(function (e) { return e.id != action.id }).map(e => e.id)\n            fSol.notFound.push(action)\n        }\n\n        if (!!altActsToRemove) {\n            fSol.ordering = (fSol.actionsInSuggestedOrder).filter(function (e) { return !altActsToRemove.includes(e.interventionID) })\n            //console.log(\"ordering\", fSol.ordering)\n        }\n    }\n\n\n    return fSol\n}\n\nconst insertMissingInterventions = (problems, confirmedEvents, indexCounter, phaseNames, phases) => {\n    problems.forEach(prob => {\n        //find the best fitting solution based on one with the max number of actions found\n        let sol = findBestSolMatch(prob, confirmedEvents)\n        prob.bestFittingSol = sol\n\n        // now we just have to insert actions not found\n        let actions = sol.notFound\n        let variant\n        actions.forEach((action, k) => {\n            //commenting out until variant questions resolved 8/10/22\n            variant = \"{}\"\n            /* if (!!action.interventionVariant){\n                variant = intvVariant2JSON(action.interventionVariant)}\n            else {variant = \"{}\"} */\n            confirmedEvents.push(action.id)\n            confirmedEvents.push(action.id + \"+\" + variant);\n            let phaseObject = {\n                \"comment\": \"\",\n                \"numericalID\": indexCounter,\n                \"status\": \"\",\n                \"intvStatus\": [], //will be an array what patient status checks were and weren't done\n                \"required\": true,\n                \"when\": \"\",\n                \"suggestedPhase\": \"\",\n                \"expertPhase\": \"\",\n                \"probLabel\": \"\",\n                \"minimalWhy\": \"\",\n                \"assessmentsNeeded\": \"\",\n                \"protocol\": \"\",\n                \"protocolRelationship\": \"\",\n                \"actionDescription\": \"\",\n                \"type\": \"intervention\",\n                \"timestamp\": -1\n            };\n\n            //copy over the step fields that exist (type dependent)\n            const ACTION_FIELDS = [\"id\", \"phase\", \"why\", \"protocolRelationship\"];\n            ACTION_FIELDS.forEach(fldName => {\n                if (!!action[fldName]) {\n                    phaseObject[fldName] = action[fldName];\n                }\n            });\n\n            if (phaseObject[\"protocolRelationship\"] === \"alternative\") {\n                phaseObject[\"protocolRelationship\"] = \"required\"\n            }\n\n            const SOLUTION_FIELDS = [\"minimalWhy\", \"protocols\", \"strictActionOrdering\"];\n            SOLUTION_FIELDS.forEach(fldName => {\n                if (!!sol[fldName]) {\n                    phaseObject[fldName] = sol[fldName];\n                }\n            });\n\n            //copy over the step fields that exist (type dependent)\n            const PROBLEM_FIELDS = [\"probLabel\"];\n            PROBLEM_FIELDS.forEach(fldName => {\n                if (!!prob[fldName]) {\n                    phaseObject[fldName] = prob[fldName];\n                }\n            });\n\n            //initialize some fields above that come from problem and action if they are defined\n            if (!!prob.assessments) { phaseObject.assessmentsNeeded = prob.assessments }\n            if (!!prob.protocols) { phaseObject.protocol = prob.protocols }\n            if (!!action[\"id-label\"]) { phaseObject.label = action[\"id-label\"]; }\n            if (!!action[\"id-label\"]) { phaseObject.actionDescription = action[\"id-label\"]; }\n            let phaseVal\n            if (!!action.subPhase) { phaseVal = action.subPhase }\n            if (!!action.phase && !phaseVal) { phaseVal = action.phase }\n            if (phaseVal) {\n                phaseObject.when = phaseVal;\n                phaseObject.expertPhase = phaseVal;\n                phaseObject.suggestedPhase = phaseVal;\n            }\n\n            phaseObject.status = \"missing\" + capitalizeFirstLetter(phaseObject.protocolRelationship)\n            //assume actions are in the suggested order to solve a problem\n            if (![\"optional\", \"unnecessary\", \"irrelevant\", \"redundant\"].includes(phaseObject.protocolRelationship)) {\n                let orderingIndex = (sol.ordering).findIndex(x => x.interventionID === phaseObject.id)\n                insertInPhaseRelativeToSuggestedOrder(phaseNames, phases, phaseObject, sol.ordering, orderingIndex, confirmedEvents, checklistHierarchy, requiredPhaseNames, requiredSubphases, phaseRequiredAtEnd);\n                indexCounter++;\n            }\n        })\n    });\n    return [indexCounter, phaseNames, phases]\n}\n\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n//the main function for analyzing the observation log\nfunction analyzeEvents(scen, log) {\n    let events = log.events;\n\n    // sts 1/23/22 moved the setting of the following into initGlobals()\n    // setScenario(scenario)\n    // setupSubphasePhaseLookup()\n    // findSubphases();\n    initGlobals(scen)\n\n    //preprocess some of data from problems/solutions\n    //and for now just flatten it some to set it up to\n    //look more like the original problem actions in scenario\n    // assumes there is just one solution per problem for now.\n    let problemDefs = scenario.problems;\n    let problemActions = scenario.actions;\n    let problemSolutions = scenario.solutions;\n    let problems \n    if (training){\n        problems = setupProblems(problemDefs, problemSolutions, problemActions)};\n    \n\n    //In the remainder, just dealing with the first solution for each problem\n    //so if we ever have more than one solution for a problem this code needs to\n    //be updated.  Would need to consider the additional solutions to decide which\n    //solution is the best fit for the observer student\n\n\n    let formattedActions = [];\n    if (training && problems.length !== 0) {\n        let expectedScenInterventions = collectScenInterventions(problems)\n        let annotatedResults = annotateInputEvents(events, problems)\n        //phaseNames and phases are two arrays synchronized be array indices\n        //phases contains just the steps under the phase (thus could be a phase or subphase in observer interface)\n        //phaseNames contains the label for each phase in phases.  Makes it a bit easier to search phaseNames to get the\n        //indice for last instance of a phase label and access its objects\n        let phases = annotatedResults[0];\n        let phaseNames = annotatedResults[1];\n        let confirmedEvents = annotatedResults[2]\n        let intvsTracking = annotatedResults[3]\n\n\n        /* //now create some similar structures for the parents of the above phases\n        //so have all the associated event objects in parents and parentNames\n        //for easy lookup\n        let parentResults = collectParentPh(phaseNames)\n        let parents = parentResults[0]  //events under this parent\n        let parentNames = parentResults[1] */\n\n        //update relative to constraints and comprises definitions\n        //for now it just compares two constraint args of the same type\n        //for what currently exists\n\n\n\n        filterConstraintsBySolutions(expectedScenInterventions)\n        let kbUpdates = checkAgainstKB(phases, phaseNames, requiredPhaseNames, requiredSubphases, checklistHierarchy, itemByID, itemByLabel, constraintsViolated, phaseFB)\n        phases = kbUpdates[0]\n        phaseNames = kbUpdates[1]\n\n        //add missing phase names to phaseNames\n        //as do insertions should consider the temporal ordering constraints\n\n        let updatedPhases = insertMissingSubphases(phases, phaseNames)\n        phases = updatedPhases[0]\n        phaseNames = updatedPhases[1]\n\n\n        // check for missing checklist steps\n        //as do insertions should consider the temporal ordering constraints\n        let postAssessmentReview = checkForMissingAssessments(problems, events, confirmedEvents, phaseNames, phases)\n        confirmedEvents = postAssessmentReview[0]\n        phaseNames = postAssessmentReview[1]\n        phases = postAssessmentReview[2]\n        let indexCounter = postAssessmentReview[3]\n\n\n\n        // this section could be moved into a separate function so that\n        // the parts of the main analysis are clearer\n\n        // start insert missing interventions\n\n        let postInterventionReview = insertMissingInterventions(problems, confirmedEvents, indexCounter, phaseNames, phases)\n        indexCounter = postInterventionReview[0]\n        phaseNames = postInterventionReview[1]\n        phases = postInterventionReview[2]\n        // search for missing interventions for each action\n        // Doing this separately from the earlier actions loop because\n        // we wanted to add in missing assessment steps first\n        // since interventions depend on appropriate assessments having\n        // been done\n\n\n\n        // end insert missing interventions\n\n\n        // put together the phases into a single array ordered as directed by phases\n\n        formattedActions = organizeLogDisplay(phaseNames, phases, requiredPhaseNames, problemStates, cautionStates, checklistHierarchy, subPhases, phaseFB, itemByID, itemByLabel);\n\n        // Now that it is all rejoined into a single list, do some updating with additional\n        // analysis results\n\n        formattedActions = insertMissingIntvChecks(formattedActions, intvsTracking)\n\n\n        let priorProb = \"N/A\";\n\n        let finalActions = [];\n\n        //insert intervention headers in condition 1 log if the switch is set to do so\n\n        formattedActions.forEach((eventObj, j) => {\n            let intvHeaderIndex = 1\n\n            if (insertInterventionHeader && eventObj.type === \"intervention\" && eventObj.probLabel && !(priorProb === eventObj.probLabel)) {\n                priorProb = eventObj.probLabel;\n                let headerObject = {\n                    \"id\": \"interventionHeader\",\n                    \"status\": \"good\",\n                    \"phaseOrderStatus\": \"good\",\n                    \"labelID\": eventObj.probLabel,\n                    \"type\": \"header\",\n                    \"numericalID\": intvHeaderIndex++ / 3000,\n                    \"displayColor\": \"green\",\n                    //    \"why\": \"\",\n                    \"probLabel\": eventObj.probLabel,\n                    \"protocol\": \"\"\n                };\n                finalActions.push(headerObject);\n            }\n            finalActions.push(eventObj);\n        });\n\n\n\n        // start overall analysis to determine if all actions to solve a problem are present\n        checkForMinimalCases(finalActions, formattedActions, problems)\n\n\n        // end of overall analysis\n\n\n        // Here only for development purposes\n        console.log(\"Constraint Violation Results\", constraintsViolated)\n\n        // verify that scenario specified vitals have been checked twice\n        let vitalsCounts = doVitalsCounts(finalActions, scen.name)\n        doVitalsFeedback(finalActions, vitalsCounts, scen.name)\n        console.log(\"vitalsCounts: \", vitalsCounts)\n\n        //remove analysis fields not needed by others before returning them\n        let trimmedActions = trimActions(finalActions, analysisFields)\n\n        const retVal = {\n            \"events\": trimmedActions,\n            // \"FBfields\": c2FB,\n            \"constraintsViolated\": constraintsViolated,\n            \"requiredPhaseNames\": requiredPhaseNames,\n            \"promptIDs\": promptIDs,\n            \"decisionPromptIDs\": scen.checkListCorrectness\n            // \"feedbackTemplates\": assessmentEntries,\n        }\n\n        //for debugging summarizeAnalysis\n        //Last bit is here for development purposes only since this call is made inside of condition 2\n       let ds = scenarios[scen.name]\n        if (ds && debugSummarize){\n            console.log(\"Condition2 input produced by analysis\", summarizeAnalysis (retVal, ds, itemByID))} \n     \n        console.log(\"Analysis completed for scenario: \", scen.name)\n        return retVal\n    }\n    else {\n        alert(\"This is a test scenario so an analysis cannot be done at this time but you can view the unanalyzed log.\");\n        return processRawLogForDisplay(events)\n    }\n\n}\n\n\nexport { analyzeEvents } //, requiredPhaseNames}","import { \n    getItem,\n    getConstraint,\n    pushNew,\n } from \"./debriefingUtils\"\n\nimport { hasSubPhases } from \"./actionInsertion\"\n\n//start support functions for constraint checking\n\nconst findNameNumID = (names, entries, item, occurrence) => {\n    let result = undefined\n    let index = undefined\n    for (let i = 0; i < names.length; i++) {\n        if (item.id === names[i]) {\n            result = entries[i]\n            if (occurrence === \"start\") {\n                break}}}\n    if (!!result) {\n        if (result.numericalID === -1) {\n            if (occurrence === \"start\") {\n                index = result.numericalIDStart}\n            else { index = result.numericalIDEnd }}\n        else { index = result.numericalID }}\n\n    return index\n}\n\n\n\n\n\nconst findObjByNumerialID = (numericalID,phases,phaseNames, checklistHierarchy) => {\n    for (let phaseIndex = 0; phaseIndex < phaseNames.length; phaseIndex++) {\n        let phaseObjects = phases[phaseIndex];\n        let phaseName = phaseNames[phaseIndex];\n        if (phaseObjects.length > 0 && !hasSubPhases(phaseName, checklistHierarchy)){\n            for (let entry of phaseObjects){\n                if (entry.numericalID === numericalID){\n                    return [entry, phaseName]}\n            }}}}\n\n\nconst storeMisOrderedArgs = (numericalID, lateArg, phases, phaseNames, checklistHierarchy,) => {\n    let result = findObjByNumerialID(numericalID, phases, phaseNames, checklistHierarchy)\n    let objToModify = result[0]\n    if (!objToModify) {console.log(\"no object found for numericalID = \", numericalID)}  //just for debugging\n    else {\n        if (!objToModify.lateRelativeTo){\n            objToModify.lateRelativeTo = [lateArg.id]}\n        else {objToModify.lateRelativeTo = objToModify.lateRelativeTo.concat([lateArg.id])}}\n}\n\n\nconst storeMisOrderedFB = (numericalID, lateArg, otherArg, FB, constraintType, phases, phaseNames, checklistHierarchy, phaseFB) => {\n    let result = findObjByNumerialID(numericalID, phases, phaseNames, checklistHierarchy,)\n    let objToModify = result[0]\n    if (constraintType === \"item\"){\n        if (!objToModify) {console.log(\"no object found for numericalID = \", numericalID)}  //just for debugging\n        else {\n            if (objToModify.orderingFB !== \"\") {\n                objToModify.orderingFB = objToModify.orderingFB + \".\\xa0\\xa0\" + FB}\n            else { objToModify.orderingFB = FB }\n        let status\n        let appendString = \"misOrdered-\"\n        if (!(objToModify.status.includes(appendString)))\n                {status = appendString + objToModify.status\n                objToModify.status = status}}}\n    else {\n        if (!!phaseFB[lateArg]){\n            phaseFB[lateArg].arg2 = phaseFB[lateArg].arg2.concat([otherArg])\n            phaseFB[lateArg].feedback = phaseFB[lateArg].feedback + \".  \" + FB}\n        else {\n            phaseFB[lateArg] = {}\n            phaseFB[lateArg].arg2 = [otherArg]\n            phaseFB[lateArg].feedback = FB}\n    }\n\n}\n\n\n//flattens out the phases and phaseNames data structures so that all phase and subphase\n//names have their own entry and each item under a phase or subphase has its own entry.\n//Collect and return unique names because phase and subphase names can appear multiple times in the\n//phases and phaseNames ds.  Having a unique list of names means that a constraint will only be checked once.\n\n\nconst collectEntriesToCheckConstraints = (phases, phaseNames,requiredPhaseNames,requiredSubphases,checklistHierarchy) => {\n    let listOfNames = []\n    let listOfEntries = []\n    let uniqueListOfNames = []\n    let counter = -1\n    for (let phaseIndex = 0; phaseIndex < phaseNames.length; phaseIndex++) {\n        let phaseObjects = phases[phaseIndex];\n        let phaseName = phaseNames[phaseIndex];\n        let startIndex = phaseObjects[0].numericalID\n        let endIndex = phaseObjects[phaseObjects.length-1].numericalID\n\n        //handle phases and subphases first\n\n        if (requiredPhaseNames.includes(phaseName) || requiredSubphases.includes(phaseName)) {\n            listOfEntries.push({ id: phaseName, numericalID: counter, numericalIDStart: startIndex, numericalIDEnd: endIndex })\n            listOfNames.push(phaseName)\n            if (!uniqueListOfNames.includes(phaseName)){uniqueListOfNames.push(phaseName)}}\n\n        //can't be an else to above because a phase can have entries but a subphase cannot\n\n        if (phaseObjects.length > 0 && !hasSubPhases(phaseName, checklistHierarchy)){\n            let phaseObjectNames = phaseObjects.map(obj => obj.id)\n            phaseObjectNames.forEach(entry => {\n                pushNew(entry,uniqueListOfNames)\n            })\n            listOfEntries = listOfEntries.concat(phaseObjects)\n            //uniqueListOfNames = uniqueListOfNames.concat(phaseObjectNames)\n            listOfNames = listOfNames.concat(phaseObjectNames)\n        }\n    }\nreturn [listOfNames, uniqueListOfNames, listOfEntries]\n\n}\n\nconst saveFailedConstraint = (lateArg, otherArg, constraintID, constraintsViolated) => {\n    let type\n    if ([\"phase\", \"sub-phase\"].includes(lateArg.type)){\n        type = \"phase\"}\n    else {type = \"item\"}\n    constraintsViolated.push({constraintID: constraintID, arg1: lateArg.id, op: \"before\", arg2: otherArg.id, type: type})\n    return type\n}\n\nconst addToListOfFeedback = (parPhFB, last, label, repeating) => {\n    //feedback for nonphase\n    if (repeating){\n        if (last) {\n            parPhFB = parPhFB + \" and \"\n        }\n        else {parPhFB = parPhFB +  \", \"}}\n    parPhFB = parPhFB + label.toLowerCase()\n    return parPhFB\n}\n\n\n\nconst checkAgainst2ndArgs = (arg1st,args2nd,op,direction,constraintID,entryNames,entries,phases,phaseNames,checklistHierarchy,itemByID,itemByLabel,constraintsViolated,phaseFB) => {\n    let endNum1st = findNameNumID(entryNames, entries, arg1st, \"end\")\n    let startNum1st = findNameNumID(entryNames, entries, arg1st, \"start\")\n    let label1st = arg1st.label\n    let phFB = \"\"\n    let par1PhFB = \"\"\n    let par2PhFB = \"\"\n    let repeating\n    let constraintType\n    let otherLabel\n    if (args2nd.length > 0) {\n        let counter = 0\n        let violations = 0\n        for (let arg of args2nd) {\n            let last = false\n            let arg2nd = getItem(arg,itemByID,itemByLabel)\n            if (!!arg2nd) {\n                counter++\n                if (counter === args2nd.length){\n                    last = true}\n                let label2nd = arg2nd[\"label\"]\n                let startNum2nd = findNameNumID(entryNames, entries, arg2nd, \"start\")\n                let endNum2nd = findNameNumID(entryNames, entries, arg2nd, \"end\")\n                switch (direction){\n                case \"before\":\n                    if (!!endNum1st && !!startNum2nd) {\n                        if (!(endNum1st < startNum2nd)) {  //if failed constraint i.e. arg1 is late\n                            //result = collectFB (constraintID, counter, arg1st, arg2nd, startNum1st, startNum2nd, endNum1st, endNum2nd, label1st, label2nd, last, constraintType, phases, phaseNames)\n                            //feedback for item\n                            violations++\n                            if (par1PhFB === \"\"){\n                                if (startNum1st === endNum1st) {\n                                    par1PhFB = \"You should have \"\n                                    par1PhFB = addToListOfFeedback(par1PhFB, last, label1st, false)}\n                                //feedback for phase\n                                else {\n                                    par1PhFB = \"You should have completed the \"\n                                    par1PhFB = addToListOfFeedback(par1PhFB, last, label1st, false)}}\n                            if (startNum2nd === endNum2nd) {\n                                if (par2PhFB === \"\"){\n                                        par2PhFB = par2PhFB + \" before you did \"}  //feedback for item\n                                    if (violations > 1){repeating = true}\n                                    else {repeating = false}\n                                    par2PhFB = addToListOfFeedback(par2PhFB, last, label2nd, repeating)}\n                            else {\n                                if (par2PhFB === \"\"){\n                                    par2PhFB = par2PhFB + \" before starting the \"}  //feedback for phase\n                                if (violations > 1){repeating = true}\n                                else {repeating = false}\n                                par2PhFB = addToListOfFeedback(par2PhFB, last, label2nd, repeating)}\n                            storeMisOrderedArgs(startNum1st, arg2nd, phases, phaseNames, checklistHierarchy)\n                            constraintType = saveFailedConstraint(arg1st, arg2nd, constraintID, constraintsViolated)\n                            otherLabel =  arg2nd.label\n                        }\n                        else {\n                            if (op === \"or\") {\n                                return}}}\n                    break\n                case \"after\":  //for after just reverse 1st and 2nd args\n                    if (!!startNum1st && !!endNum2nd) {\n                        if (!(startNum1st > endNum2nd)) { //if failed constraint  i.e. arg2 is late\n                            violations++\n                            if (startNum1st === endNum1st){\n                                //feedback for item\n                                if (par1PhFB === \"\") {par1PhFB = \"You should have \"}\n                                if (violations > 1){repeating = true}\n                                else {repeating = false}\n                                par1PhFB = addToListOfFeedback(par1PhFB, last, label2nd, repeating)}\n                            //feedback for phase\n                            else{\n                                if (par1PhFB === \"\"){par1PhFB = \"You should have completed \"}\n                                if (violations > 1){repeating = true}\n                                else {repeating = false}\n                                par1PhFB = addToListOfFeedback(par1PhFB, last, label2nd, repeating)}\n                            if (par2PhFB === \"\"){\n                                if (startNum2nd === endNum2nd){\n                                    par2PhFB = par2PhFB + \" before you did \"\n                                    par2PhFB = addToListOfFeedback(par2PhFB, last, label1st, false)}\n                                else {\n                                    par2PhFB = par2PhFB + \" before starting \" //feedback for nonphase\n                                    par2PhFB = addToListOfFeedback(par2PhFB, last, label1st, false)}}\n                            storeMisOrderedArgs(startNum2nd, arg1st, phases, phaseNames, checklistHierarchy,)   //feedback for phase\n                            constraintType = saveFailedConstraint(arg2nd, arg1st, constraintID)\n                            otherLabel = arg1st.label}\n                        else {\n                            if (op === \"or\") {\n                                return}}}\n                    break\n                default: break\n                }\n            }\n        }\n        phFB = par1PhFB + par2PhFB\n        if (phFB !== \"\") {\n            phFB = phFB + \".\"\n            storeMisOrderedFB(startNum1st, label1st, otherLabel, phFB, constraintType, phases, phaseNames, checklistHierarchy, phaseFB)}\n    }\n}\n\n\n\nconst checkConstraintsForArg = (arg1st, constraint, phases, phaseNames, entryNames, entries,checklistHierarchy,itemByID,itemByLabel,constraintsViolated,phaseFB) => {\n\n    let args2nd = constraint.before\n    let op = constraint.beforeOp\n    checkAgainst2ndArgs(arg1st,args2nd,op,\"before\",constraint.id,entryNames,entries,phases,phaseNames,checklistHierarchy,itemByID,itemByLabel,constraintsViolated,phaseFB)\n\n    args2nd = constraint.after\n    op = constraint.afterOp\n    checkAgainst2ndArgs(arg1st,args2nd,op,\"after\",constraint.id,entryNames,entries,phases,phaseNames,checklistHierarchy,itemByID,itemByLabel,constraintsViolated,phaseFB)}\n\n\n  //end support functions for constraint checking\n\n\n\n//To DO: filter constraints in/out based on findings available for this scenario\n\n//main function for constraint checking\nexport const checkAgainstKB = (phases, phaseNames,requiredPhaseNames,requiredSubphases,checklistHierarchy,itemByID,itemByLabel,constraintsViolated,phaseFB) => {\n\n    let result = collectEntriesToCheckConstraints(phases, phaseNames, requiredPhaseNames, requiredSubphases, checklistHierarchy)\n    let entryNames = result[0]\n    let uniqueEntryNames = result[1]\n    let entries = result[2]\n    uniqueEntryNames.forEach(firstArg => {\n        let firstArgItem = getItem(firstArg,itemByID,itemByLabel)\n        if (!!firstArgItem) {\n            processFirstArg(firstArgItem,phases,phaseNames,entryNames,entries,checklistHierarchy,itemByID,itemByLabel,constraintsViolated,phaseFB)}})\n\n    //only expect to change objects in phases\n    return [phases, phaseNames]\n}\n\nconst processFirstArg = (firstArgItem, phases, phaseNames, entryNames, entries,checklistHierarchy,itemByID,itemByLabel,constraintsViolated,phaseFB) => {\n    let constraint = getConstraint(firstArgItem)  //will find only one constraint per 1st arg\n    if (!!constraint) {\n        checkConstraintsForArg(firstArgItem, constraint, phases, phaseNames, entryNames, entries,checklistHierarchy,itemByID,itemByLabel,constraintsViolated,phaseFB)}\n}\n","import {\n  colorTypes,\n  iconTypes,\n  //assessmentEntries,\n  phaseStatusList,\n  scenarioConstraintIDs,\n  conditionalConstraints,\n  globalConstraints,\n  M2CA_PhaseIE,\n  SC8CP_PhaseIE,\n  B4CA_PhaseIE,\n  B5CA_PhaseIE,\n  C5CA_PhaseIE,\n  fbTemplatesDef,\n  vitalsCheckFeedbackLabel,\n  vitalsCheckFeedbackID\n} from \"@meddbriefer/feedback-data\";\n\n\n//import {  requiredPhaseNames } from \"./analyzeEvents\";\n// constraintsViolated,\n// import { c2FB } from \"./summarizeAnalysis\";\nimport { formatAsMinSecs } from \"./utils\";\n\nconst _ = require(\"lodash\");\n\n\n\n\nconst C2_FIELDS = [\"feedbackAbsent\", \"feedbackOutOfOrder\", \"feedbackErrors\"];\n\nexport //for debug only of summarizeAnalysis\nconst scenarios = {\n  M2CA: M2CA_PhaseIE,\n  SC8CP: SC8CP_PhaseIE,\n  B5CA: B5CA_PhaseIE,\n  B4CA: B4CA_PhaseIE,\n  C5CA: C5CA_PhaseIE,\n};\n\n\nexport const pushNew = (elt, array) => {\n  if (!array.includes(elt)) {\n    array.push(elt);\n  }\n};\n\nexport const intersects = (arr1, arr2) => {\n    let result = arr1.filter(x => arr2.indexOf(x) !== -1);\n    if (result.length > 0){\n      return true\n    }\n    else {return false}\n}\n\n\n// Not yet tested.  May not need these two\n/* export const intersection = (array1, array2) => {\n    return array1.filter(value => array2.includes(value))\n}\n\nexport const difference = (array1, array2) => {\n    return array1.filter(value => !array2.includes(value))\n}\n */\n\nexport function trimActions(actions,fields){\n  let newActions = []\n  actions.forEach (act => {\n      newActions.push(trimAction(act,fields))\n  })\n  return newActions}\n\n\nexport function trimAction(event, fields) {\n  \n  let newEvent = {}\n  //regularize some field names across headers and checklist events\n  if (!!event.labelID) {\n       newEvent.id = event.labelID}\n  else { newEvent.id = event.id }\n      \n  //now copy over these fields\n  fields.forEach(fld => {\n      if (!!event[fld]) {\n          newEvent[fld] = event[fld]}\n  })\n  return newEvent\n}\n\nexport const getPhaseStatus = (statuses) => {\n  //for collecting first unique item statuses and then\n  //unique phase statuses\n  let itemStatuses = [];\n  let phaseStatuses = [];\n  if (statuses.length === 0) {\n    return \"absent\";\n  }\n\n  //get a unique list of item status values\n  statuses.forEach((status) => {\n    if (status !== \"notFound\"){\n      pushNew(status, itemStatuses);\n    }\n    /* if (!itemStatuses.includes(status)){\n            itemStatuses.push(status)\n        } */\n  });\n\n  //turn the item status values into phase level status values\n  let res;\n  for (const [key, val] of Object.entries(phaseStatusList)) {\n    res = val.filter((value) => itemStatuses.includes(value));\n    //if there is an intersection, save the key (i.e. is unique)\n    if (res.length !== 0) pushNew(key, phaseStatuses);\n    /* if (!phaseStatuses.includes(key)){\n                phaseStatuses.push(key)} */\n  }\n\n  if (phaseStatuses.length === 1) {\n    if (phaseStatuses[0] === \"error\"){\n      return \"errors\"}\n    else {\n      return phaseStatuses[0];}\n  } // to be absent or good, all entries must be that value \n  else {\n    if (phaseStatuses.length === 2 && phaseStatuses.includes(\"good\") && intersects(phaseStatuses, [\"misordered\", \"misOrdered\"])){\n      return \"misordered\"\n    }   \n    else {\n      if (intersects(phaseStatuses, [\"misordered\", \"misorderedErrors\", \"misorderedError\"]) && intersects(phaseStatuses, [\"error\", \"errors\", \"absent\"])){\n        return \"misorderedErrors\"\n      }\n      else {\n        return \"errors\";}}\n  } //otherwise they are not all good to that translates to errors\n};\n\n// functions that extract info from above or create the feedback from the above\n\n//returns a list of all the state values associated with the input status (e.g. status is one of \"Problem\", \"Good\", \"Caution\")\nexport const getStatesForStatus = (status, fbTemplates) => {\n  let stateList = []\n  for (const [state, entry] of Object.entries(fbTemplates)) {\n    let stateStatus = entry[0]\n    if (stateStatus === status) {\n      stateList.push(state)\n    }\n  }\n  return (stateList)\n}\n\n\n//returns the entry under that state\nconst getAssessmentEntry = (currentEntry, aIndex, fbTemplates) => {\n  let assessmentEntry = \"\";\n  if (currentEntry.type === \"header\") {\n    assessmentEntry = fbTemplates[currentEntry.displayColor];\n    if (!assessmentEntry) {\n      assessmentEntry = fbTemplates[currentEntry.status];\n    }\n  } else {\n    if (!fbTemplates[currentEntry.status]) {\n      assessmentEntry = fbTemplates[\"default\"];\n    } else {\n      assessmentEntry = fbTemplates[currentEntry.status];\n    }\n  }\n  if (assessmentEntry) {\n    return assessmentEntry[aIndex];\n  }\n};\n\n//returns the html icon to use in condition 1 for the state\nexport const getAssessmentIcon = (currentEntry, fbTemplates) => {\n  let val = iconTypes[getAssessmentEntry(currentEntry, 0, fbTemplates)];\n  return val;\n};\n\n//returns the html color to use in condition 1 for the state\nexport const getColor = (currentEntry, fbTemplates) => {\n    let color = colorTypes[getAssessmentEntry(currentEntry, 0, fbTemplates)]\n    return color;}\n\n\n//add protected spaces after a . except for the very last .\n//Otherwise html reduces continguous regular spaces to a single space.\n//Need this for text strings that will appear in one array entry because\n//of substitution\nconst fixStrSp = (textString) => {\n  if (!!textString) {\n    let textArray = textString.split(\" \");\n    let lenTextArray = textArray.length;\n    textArray.forEach((item, i) => {\n      let newItem = item.trim()\n      if (newItem[item.length - 1] === \".\" && i < lenTextArray - 1) {\n        //add protected space to the string\n        newItem = newItem + \"\\xa0\\xa0\"\n      }\n      textArray[i] = newItem\n    })\n    let newString\n    for (let item of textArray) {\n      if (!!newString) {\n        newString = newString + \" \" + item;\n      }\n      else { newString = item }\n\n    }\n    return newString\n  }\n  else { return \"\" }\n}\n\nconst generateIntvStatusFB = (currentEntry) => {\n  let checked = [];\n  let notChecked = [];\n  let fb;\n  for (let entry of currentEntry.intvStatus) {\n    if (entry.foundCk) {\n      checked.push(entry.label);\n    } else {\n      notChecked.push(entry.label);\n    }\n  }\n  if (notChecked.length > 0) {\n    fb = \"Remember to check the effect of this action by asking for: \" + notChecked + \".\";\n    if (checked.length > 0) {\n      fb =fb + \" That is in addition to what you did ask for: \" + checked + \".\";\n    }\n  }\n  return fb\n}\n\nlet fbSource = \"json\"  //values are \"db\" or \"json\"\n\nfunction getFBField(currentEntry, field, c2FB) {\n  let result\n  let indexLabel\n  if (currentEntry.variantID){\n    indexLabel = currentEntry.id + \"-\" + currentEntry.variantID\n  }\n  else {indexLabel = currentEntry.id}\n  let fb = c2FB[indexLabel]\n  let status = currentEntry.status\n  switch (fbSource) {\n    case \"json\":  //removed case value \"db\" in code below\n      switch (field) {\n        case \"assessmentFB\":  //get from c2 ds field feedbackAbsent\n          if (fb && fb.feedbackAbsent && fb.feedbackAbsent[0] !== \"\") { result = fb.feedbackAbsent }\n          break\n        case \"why\":\n          if (fb && status.includes(\"contraindicated\", \"unnecessary\", \"irrelevant\") && fb.feedbackErrors && fb.feedbackErrors[0] !== \"\") {\n            result = fb.feedbackErrors\n          }\n          if (fb && !status.includes(\"contraindicated\", \"unnecessary\", \"irrelevant\") && fb.feedbackAbsent && fb.feedbackAbsent[0] !== \"\") {\n            result = fb.feedbackAbsent\n          }\n          break\n        case \"incorrectAnswersFB\":  //get from c2 ds field feedbackErrors\n          if (fb && fb.feedbackErrors && fb.feedbackErrors[0] !== \"\") { result = fb.feedbackErrors }\n          break\n        case \"orderingFB\":\n          if (fb && fb.feedbackOutOfOrder && fb.feedbackOutOfOrder[0] !== \"\") { \n            result = fb.feedbackOutOfOrder }\n          break\n        default:\n      }\n      break\n    default:\n  }\n  let combinedResult = \"\"\n  if (!!result && Array.isArray(result)){  \n    result.forEach (para => {\n      combinedResult = combinedResult + \"\\xa0\\xa0\" + para\n    })\n  }\n  //to deal with old analysis/feedback file from before c2FB feedback fields became an array of strings instead of a string\n  else {if (!!result){combinedResult = result}}\n  if (!combinedResult && !!currentEntry[field]) { combinedResult = fixStrSp(currentEntry[field]) }\n  return combinedResult\n}\n\n\nexport const getPhaseFeedback = (entry, phaseFBGiven, c2FB) => {\n\n    let result = \"\"\n    let fb\n    let indexLabel\n    if (!!entry.phFeedback) {\n      if (!phaseFBGiven[entry.labelID]) {\n        phaseFBGiven[entry.labelID] = true\n        if (entry.variantID){\n          indexLabel = entry.labelID + \"-\" + variantID\n        }\n        else {indexLabel = entry.labelID}\n        fb = c2FB[indexLabel]\n        if (fb && fb.feedbackOutOfOrder) { result = fb.feedbackOutOfOrder }\n      }\n      else {\n        result = entry.phFeedback\n      }\n    }\n    if (entry.label === vitalsCheckFeedbackLabel){\n      result = result + entry.vitalsFB\n    }\n\n    entry.phFeedback = result\n    return [result, phaseFBGiven]\n\n}\n\nexport const applyFBTemplate = (rep, c2FB, template) => {\n  let fb;\n  //Find any @ actions in the template and substitute with the indicated entry field\n  let feedbackArray = template.split(\" \");\n  //Process all @ substitutions first since +eos does one forward action\n  feedbackArray.forEach((item, i) => {\n    let firstChar = item.charAt(0);\n    let newString = item.substring(1);\n    //trim off excess blanks before and after each word\n    feedbackArray[i] = feedbackArray[i].trim();\n    switch (firstChar) {\n      case \"@\":\n        fb = getFBField(rep, newString, c2FB);\n        if (!!fb) {\n          feedbackArray[i] = fb;\n        } else {\n          feedbackArray[i] = \"[missing: \" + newString + \"]\";\n        }\n        break;\n      case \"?\":\n        fb = getFBField(rep, newString, c2FB);\n        if (!!fb) {\n          //replace eos spacing with protected spaces in the substitution string\n          feedbackArray[i] = fb;\n        } else {\n          feedbackArray[i] = \"\"\n          if (feedbackArray[i - 1] === \"+bos\") {\n            feedbackArray[i - 1] = \"\";\n            if (feedbackArray[i - 2][0] !== \"+\"){  //don't want to alter a command that has not been processed\n              if (feedbackArray[i - 2][feedbackArray[i - 2].length - 1] !== \".\") {\n                feedbackArray[i - 2] = feedbackArray[i - 2] + \".\\xa0\";\n              }}\n          }\n          if (feedbackArray[i + 1] === \"+eos\") {\n            feedbackArray[i + 1] = \"\";\n          }\n        }\n        break;\n      default:\n    }\n  });\n  //Now address the + actions in the template\n  feedbackArray.forEach((item, i) => {\n    let firstChar = item.charAt(0);\n    let previousString = \"\";\n    let nextString\n    switch (firstChar) {\n      case \"+\":\n        let afterPlusChar = item.substring(1);\n        switch (afterPlusChar) {\n          //marks error category.  Assumes it is the first part of the message\n          case \"bec\":\n            feedbackArray[i] = \"\"; //get rid of the command since was applied\n            //Captitalize the beginning of the sentence\n            nextString = feedbackArray[i + 1].trim();\n            feedbackArray[i + 1] =\n              \"\\<em\\>\" + nextString.charAt(0).toUpperCase() + nextString.slice(1);\n            break;\n          case \"eec\":\n            feedbackArray[i] = \"\"; //get rid of the command since was applied\n            previousString = feedbackArray[i - 1].trim();\n            feedbackArray[i - 1] = previousString + \"\\</em\\>.\\xa0\";\n            break;\n          case \"eos\":\n            //removes existing/redundant \".\" if present so can be certain putting in single \".\"\n            previousString = feedbackArray[i - 1].trim();\n            if (previousString[previousString.length - 1] === \".\") {\n              previousString = previousString.slice(0, -1);\n            }\n            //now add end of sentence and a protected space.  When stiched back into\n            //a single string a protected space will be added between each substring\n            feedbackArray[i - 1] = previousString + \".\\xa0\";\n            feedbackArray[i] = \"\"; //get rid of the command since was applied\n            break;\n          case \"bos\":\n            //removes existing/redundant \".\" if present so can put in single \".\"\n            previousString = feedbackArray[i - 1].trim();\n            if (previousString !== \"\"){\n              if (previousString[previousString.length - 1] === \".\") {\n                previousString = previousString.slice(0, -1);\n              }\n              //now add end of sentence .\n              feedbackArray[i - 1] = previousString + \".\\xa0\";\n            }\n            feedbackArray[i] = \"\"; //get rid of the command since was applied \n            //Captitalize the beginning of the sentence\n            nextString = feedbackArray[i + 1].trim();\n            feedbackArray[i + 1] =\n              nextString.charAt(0).toUpperCase() + nextString.slice(1);\n            break;\n          default:\n        }\n        break;\n      default:\n    }\n  });\n  //stitch back into a single string\n  let feedbackString = \"\";\n  for (let item of feedbackArray) {\n    if (!!feedbackString) {\n      if (item !== \"\") {\n        feedbackString = feedbackString + \"\\xa0\" + item;\n      }\n    } else {\n      if (item !== \"\") {\n        feedbackString = item;\n      }\n    }\n  }\n  return feedbackString \n}\n\nexport const getFeedback = (currentEntry, c2FB, fbTemplates) => {\n  let vitalsCheckFB = \"\"\n  if (currentEntry.id === vitalsCheckFeedbackID){\n    vitalsCheckFB = currentEntry.vitalsFB\n  }\n  if (currentEntry.type !== \"header\"){\n    if (!!currentEntry.intvStatus && currentEntry.intvStatus.length > 0) {\n      //add our generated feedback string to the currentEntry\n      currentEntry.intvStatusFB = generateIntvStatusFB(currentEntry);\n    }\n    let feedbackTemplate = fixStrSp(getAssessmentEntry(currentEntry, 1, fbTemplates)).trim();\n    let feedbackString = applyFBTemplate(currentEntry, c2FB, feedbackTemplate)\n    //console.log(feedbackString)\n    if (vitalsCheckFB !== \"\"){\n      feedbackString = vitalsCheckFB + feedbackString} \n    return feedbackString;}\n    else {return vitalsCheckFB}\n  };\n\nexport const filterConstraintsBySolutions = (expectedScenInterventions) => {\n  scenarioConstraints = Object.assign(initialConstraints);\n  for (const [key, val] of Object.entries(scenarioConstraints)) {\n    if (val.type === \"leafI\" && !expectedScenInterventions.includes(key)) {\n      delete scenarioConstraints[key];\n    }\n  }\n}\n\n//built by the function initializeConstraints\nvar initialConstraints = {};\nvar scenarioConstraints = {};\n\n// adds on scenario specific constraints where the constraint is only applicable if certain patient\n// conditions hold.  Since assessment callouts are text and have no associated representation, we\n// can yet implement true conditional constraints.\nexport const initializeConstraints = (scenarioName) => {\n  // look up applicable conditional constraints from const structure scenarioConstraintIDs\n  let constraintIDs = scenarioConstraintIDs[scenarioName];\n  initialConstraints = globalConstraints;\n  if (!!constraintIDs && constraintIDs.length !== 0) {\n    for (const [key, val] of Object.entries(conditionalConstraints)) {\n      if (constraintIDs.includes(val.id)) {\n        initialConstraints[key] = val;\n      }\n    }\n  }\n};\n\n//gets one constraint since each id/label would be a key\n//in the constraints definitions\nexport const getConstraint = (item) => {\n  let id = item.id;\n  let label = item.label;\n  let constraints = scenarioConstraints[id];\n  if (!constraints) {\n    constraints = scenarioConstraints[label];\n  }\n  return constraints;\n};\n\n// This section is for looking up items in the analysis log\n\nexport const getEvents = (events, field, val) => {\n  return events.filter((entry) => entry[field] === val);\n};\n\nexport const getEventsByIdTime = (events, id, timestamp) => {\n  return getEvents(getEvents(events, \"timestamp\", timestamp), \"id\", id);\n};\n\n// This ends the section for looking up items in the analysis log\n\n\n\n\n\n\nfunction storeLeafActions(actions, c2FB, requiredPhaseNames) {\n  let result;\n  let indexLabel;\n  actions.forEach((action) => {\n    result = requiredPhaseNames.includes(action.id);\n    if (action.subActions.length === 0 || result) {\n      let newAction = {};\n      C2_FIELDS.forEach((fldName) => {\n        if (!!action[fldName]) {\n          newAction[fldName] = action[fldName];\n        }\n      });\n      /* if (action.variant){\n        indexLabel = action.id + \"-\" + action.variant}\n      else {indexLabel = action.id} */\n      indexLabel = action.id\n      c2FB[indexLabel] = newAction;\n      if (result) {\n        storeLeafActions(action.subActions, c2FB, requiredPhaseNames);\n      }\n    } else {\n      storeLeafActions(action.subActions, c2FB, requiredPhaseNames);\n    }\n  });\n}\n\n\n\n//changes with each scenario what data structure should be parsed\nfunction buildC2FB(scenName, requiredPhaseNames) {\n  let c2FB = {};\n  // FIX ME: possible fix to call getScenarioFeedback(scenName) in feedback-data/mergeDataFiles.js\n  // but wait until Scott has finished first implementation of condition 2\n  let phaseIE = scenarios[scenName];\n  if (!!phaseIE) {\n    let top = phaseIE.Action;\n    storeLeafActions(top.subActions, c2FB, requiredPhaseNames);\n  }\n  return c2FB\n}\n\n\n//This starts section for saving/loading the debriefing log\n\n/* export const saveAnalysisLog = (db, log, actions, constraintsViolated) => {\n  saveLog(db, \"debriefing-feedback-logs\", log, actions, constraintsViolated, label, \"\");\n}; */\n\n\nexport const saveAnalysisLog = async (db, obsLog, analysisData, userName) => {\n  const {events: actions, requiredPhaseNames} = analysisData\n\n  let metaData = {\n    \"label\": obsLog.label,\n    \"analyzer\": userName,\n    \"observerLogID\": obsLog.id,\n    \"classCode\": obsLog.classCode || \"\",\n    \"condition\": obsLog.condition || \"\",\n    \"scenarioID\": obsLog.scenarioID,\n    \"scenarioName\": obsLog.scenarioName,\n    \"FBfields\": buildC2FB(obsLog.scenarioName, requiredPhaseNames),\n    /* \"constraintsViolated\": constraintsViolated,\n    \"requiredPhaseNames\": requiredPhaseNames,*/\n    \"feedbackTemplates\": fbTemplatesDef,\n    /* \"promptIDs\": promptIDs,\n    \"decisionPromptIDs\": decisionPromptIDs,  */\n    \"timestamp\": Date()\n    }\n  let data = {\n    ...metaData,\n    ...analysisData\n  }\n\n  //data[\"comments\"] = Array(actions.length).fill(\"\")  \n    if (!!actions) {\n      let newActionsList = [];\n      let newObj = {};\n      let filterUnknown = false;\n      //reporting included for debugging puposes only\n      actions.forEach(function (logObj, index) {\n        for (let [key, val] of Object.entries(logObj)) {\n          if (undefined === val) {\n            console.log(\"filtered out from events; index: \", index, \" key: \", key, \" value: \", val);\n            filterUnknown = true;\n          }\n        }\n      });\n      //do the filtering of unknowns\n      if (filterUnknown) {\n        actions.forEach(function (logObj, index) {\n          newObj = _.pickBy(logObj, function (value, key) {\n            return !(value === undefined);\n          });\n          newActionsList.push(newObj);\n        });\n        data[\"events\"] = newActionsList;\n      } \n      else {data[\"events\"] = actions;}\n    }\n  //console.log(\"about to save data\", data)\n  const dataWithID = await saveLog(db, \"analyzed-logs\", undefined, data)  \n  //window.alert(`analyzed-log/${data.label} created`); \n  return dataWithID\n\n}\n\nexport const saveCommentLog = async (db, priorLog, id, comments, userName) => {\n  let data =\n      {\n        label: priorLog.label || null,\n        reviewer: userName,\n        analysisLogID: priorLog.id,\n        scenarioID: priorLog.scenarioID,\n        scenarioName: priorLog.scenarioName,\n        classCode: priorLog.classCode || \"\",\n        condition: priorLog.condition || \"\",\n        comments: comments,\n        timestamp: Date(),\n      };\n    await saveLog(db, \"cond1-comments\", id, data);\n    //window.alert(`cond1-comments/${priorLog.label} saved`); \n    // return savedData\n};\n\n// export const saveAsCommentLog = (db, priorLog, comments, userName) => {\n//   let filename = window.prompt(\"Enter new filename\", priorLog.label);\n//   let data =\n//       {\n//         label: filename || null,\n//         commenter: userName,\n//         analysisLogID: analysisLogID || null,\n//         comments: comments || null,\n//         timestamp: Date(),\n//       };\n//     let savedData = saveLog(db, \"cond1-comments\", data);\n//     window.alert(`cond1-comments/${filename} saved`); \n//     return savedData;  \n// };\n\nexport async function saveLog (db, collection, id, data) {\n  //console.log(\"In saveLog\")\n  var docRef\n  if (!!id){\n    docRef = db.collection(collection).doc(id);}\n  else {\n    docRef = db.collection(collection).doc();\n    data.id = docRef.id;\n  }\n  await docRef.set(data);  \n  return data\n};\n\n//not in use\n\n/* export const retrieveDebriefing = (log) => {\n  //console.log(log.events)\n  return log.events;\n} */\n\n//This ends section for saving/loading the debriefing log\n\nexport const getTimestamp = (currentEntry) => {\n  if (!currentEntry.timestamp || currentEntry.type === \"header\") {\n    return \"\";\n  }\n  if (currentEntry.timestamp === -1) {\n    return \"\\xa0\\xa0\"; // formatAsMinSecs would convert this to 59:59\n  }\n  return formatAsMinSecs(currentEntry.timestamp);\n}\n\nlet unknownItem = {id: \"Unknown\", label: \"Unknown\"}\n\nconst getItems = (val,itemByID,itemByLabel) => {\n  if (val === \"Unknown\"){\n      return unknownItem}\n  let items = []\n  items = itemByID[val]\n  if (!items){\n      items = itemByLabel[val]}\n  return items\n}\n\nexport const getItem = (val,itemByID,itemByLabel) => {\n  let items = getItems(val,itemByID,itemByLabel)\n  if (items){return items[0]}\n}","export function checkForMinimalCases(actions, formattedActions, problems){\n // now we analyze all that we've found in the log to see whether\n    // all the actions were done for each problem and reset\n    // the status if not all are there but should be counted\n    // as minimal for the feedback.\n    let pActions = []; //here we will store the actual problem actions that student did\n    let pNames = []; //here we will store the problem names for the above with same order\n    let pIndex = 0;\n    let pActIndex = -1;\n\n    \n\n    actions.forEach((action, j) => {\n        if (action.type === \"intervention\") {\n            //good interventions can have these status values\n            if (!!action.status && action.status.includes(\"goodIntv\", \"incorrect-answers\", \"minimal\", \"misOrdered-goodIntv\",\n            \"misOrdered-incorrect-answers\", \"minimal\", \"misOrdered-minimal\",\n            \"misOrdered-minimal-incorrect-answers\",\n            \"misOrdered-phase-incorrect-answers\", \"misOrdered-phase-minimal-incorrect-answers\", \"misOrdered-phase-minimal\")) {\n                if (!pNames.includes(action.probLabel)) {\n                    pActIndex = pIndex;\n                    pNames[pActIndex] = action.probLabel;\n                    pIndex++;}\n                else { pActIndex = pNames.indexOf(action.probLabel); }\n                let actions = pActions[pActIndex];\n                if (!actions) { actions = []; }\n                actions.push(action);\n                pActions[pActIndex] = actions;\n            }\n        }\n    });\n\n    // If all the minimal were found but not all the action were, then we\n    // need to re-mark the action objects created for the minimal events\n    // to be minimal instead of goodIntv.  It isn't\n    // appropriate to give this feedback if all actions are present.\n    // Waited until now so that all the events are in one list instead of\n    // a list per phase,\n    let processedIds = formattedActions.map(event => event.id);\n    let pIds = problems.map(a => a.probLabel);\n    pNames.forEach((pEntry, j) => {\n        //get the action definition for this problem\n        let pIndex = pIds.indexOf(pEntry);\n        let prob = problems[pIndex];\n        let actionNeeded = prob.allActions.filter(obj => obj.protocolRelationship === \"required\").map(obj => obj.id);\n        //collect statuses for these actions\n\n        let minimalNeeded = prob.allActions.filter(obj => obj.protocolRelationship === \"minimal\").map(obj => obj.id);\n        if (minimalNeeded) { //no point in doing anything else if no minimals were defined\n            let foundActions = pActions[j];\n            let found = foundActions.map(a => a.id);\n            let allActionFound = true;\n            let allMinimalFound = true;\n            for (let item of actionNeeded) {\n                if (!found.includes(item)) {\n                    allActionFound = false;\n                    break;\n                }\n            }\n            for (let item of minimalNeeded) {\n                if (!found.includes(item)) {\n                    allMinimalFound = false;\n                    break;\n                }\n            }\n            let numericalIDsChanged = [];\n            if (!allActionFound && allMinimalFound) {\n                minimalNeeded.forEach((foundId, j) => {\n                    let pIndex = processedIds.indexOf(foundId);\n                    let object = formattedActions[pIndex];\n\n                    //find object to modify\n                    object.minimalWhy = prob.minimalWhy;\n                    switch (object.status){\n                        case \"incorrect-answers\":\n                            object.status = \"minimal-incorrect-answers\"\n                            break\n                        case \"goodIntv\":\n                            object.status = \"minimal\"\n                            break\n                        case \"misOrdered-goodIntv\":\n                            object.status = \"misOrdered-minimal\"\n                            break\n                        case \"misOrdered-incorrect-answers\":\n                            object.status = \"misOrdered-minimal-incorrect-answers\"\n                            break\n                        case \"misOrdered-phase-goodIntv\":\n                            object.status = \"misOrdered-phase-minimal\"\n                            break\n                        case \"misOrdered-phase-incorrect-answers\":\n                            object.status = \"misOrdered-phase-minimal-incorrect-answers\"\n                            break\n                        default:\n                            break}\n\n                    numericalIDsChanged.push(object.numericalID);\n                    formattedActions[pIndex] = object;\n                });\n                //redo color for header if needed\n                let header = {};\n                numericalIDsChanged.forEach((numericalID, z) => {\n                    header = findHeaderFor(numericalID, formattedActions);\n                    if (header && header.displayColor === \"green\") { header.displayColor = \"yellow\"; }\n                });\n\n            }\n        }\n        prob.actions = []  //clear out this working field from problems definitions\n\n    });\n      \n}\n","export {\n  getAssessmentIcon,\n  getColor,\n  getFeedback,\n  getPhaseFeedback,\n  getTimestamp,\n  saveCommentLog,\n  saveAnalysisLog,\n  saveLog,\n  applyFBTemplate\n} from \"./debriefingUtils\";\nexport { analyzeEvents } from \"./analyzeEvents\";\nexport { doVitalsCounts } from \"./vitalsChecking\";\n\nexport { summarizeAnalysis } from \"./summarizeAnalysis\";\n// setC2FB, ,  c2FB , setRequiredPhaseNames\n","\nimport {\n    getPhaseStatus,\n    getItem,\n    \n} from \"./debriefingUtils\";\n\nimport {\n    hasSubPhases,\n} from \"./actionInsertion\"\n\n\n//to display the log using the phase structures accumulated\n// i.e. puts the phases data together in the order in which\n// should be displayed in debriefing log\nexport const organizeLogDisplay = (phaseNames, phases, requiredPhaseNames, problemStates, cautionStates, checklistHierarchy, subPhases, phaseFB,itemByID,itemByLabel) => {\n    let displayObjects = [];\n    let entryIndex = 1;\n    let headerIndex = 1;\n    let problemHeaderColor = \"green\"\n    let subPhaseColor = \"green\"\n    let subPhaseStatuses = []\n    let phaseStatuses = []\n    let newPhaseObjects = []\n    let headerObj = {\n        \"id\": \"assessmentHeader\",\n        \"status\": \"\",\n        \"phaseOrderStatus\": \"good\",\n        \"feedback\": \"\",\n        \"type\": \"header\",\n        \"numericalID\": 1,\n        \"displayColor\": \"\",\n        \"why\": \"\",\n        \"label\": \"\",\n        \"labelID\": \"\",\n        \"protocol\": \"\"\n    };\n    let subHeaderObj = {\n        \"id\": \"assessmentSubHeader\",\n        \"status\": \"\",\n        \"phaseOrderStatus\": \"good\",\n        \"feedback\": \"\",\n        \"type\": \"header\",\n        \"numericalID\": 1,\n        \"displayColor\": \"\",\n        \"why\": \"\",\n        \"label\": \"\",\n        \"labelID\": \"\",\n        \"phaseID\": \"\",\n        \"protocol\": \"\"\n    };\n\n    let priorHLPhaseItem = \"\"\n    let endEntry = false\n    for (let phaseIndex = 0; phaseIndex < phaseNames.length; phaseIndex++) {\n        let iPhaseObjects = phases[phaseIndex];\n        let phaseName = phaseNames[phaseIndex];\n        let process = true\n\n        if (requiredPhaseNames.includes(phaseName) && hasSubPhases(phaseName, checklistHierarchy)) {\n            process = false}\n\n        if (iPhaseObjects.length > 0 && process) {\n                //for this set of objects, find the worst scoring item\n            let phaseObjects = phases[phaseIndex];\n            subPhaseColor = \"green\"\n            for (let phaseObject of phaseObjects) {\n                if (phaseObject.type !== \"intervention\"){\n                    subPhaseStatuses.push(phaseObject.status)}\n                //else {hierProblemResults.push(phaseObject)}\n                if (problemStates.includes(phaseObject.status)) {\n                    subPhaseColor = \"red\";\n                }\n                // Red has a higher priority than yellow so will allow to override it\n                if (cautionStates.includes(phaseObject.status) && subPhaseColor !== \"red\") {\n                    subPhaseColor = \"yellow\";\n                }\n                phaseObject.numericalID = entryIndex++;\n                //entryIndex++;\n            };\n\n            let subheader = Object.assign({}, subHeaderObj)\n            let localPhaseName = phaseNames[phaseIndex]\n            let localPhaseItem = getItem(localPhaseName,itemByID,itemByLabel)\n            subheader.label = localPhaseItem.label\n            subheader.labelID = localPhaseItem.id\n            subheader.status = getPhaseStatus(subPhaseStatuses)\n            subheader.displayColor = subPhaseColor\n            if (!!phaseFB[subheader.label]){\n                subheader.phaseOrderStatus = \"misOrdered\"\n                subheader.phFeedback = phaseFB[subheader.label].feedback\n                subheader.lateRelativeTo = phaseFB[subheader.label].arg2\n            }\n            let highLevelPhase = subPhases[localPhaseName]\n            let highLevelPhaseItem = getItem(highLevelPhase,itemByID,itemByLabel)\n            subheader.phaseID = highLevelPhaseItem.id\n\n            //Note that the inserted headers will have their own numerical id and\n            //am dividing by 1000 for headers so their numerical id will be unique\n            //to headers.  Am assuming we would never have more than 1000 events\n            //observed.  Will use the numerical ids for testing before and after\n            //constraints.\n\n            if (priorHLPhaseItem === \"\") {\n                priorHLPhaseItem = highLevelPhaseItem\n                problemHeaderColor = determineHLcolor(subPhaseColor, problemHeaderColor)\n            }\n\n            if (phaseIndex === phaseNames.length - 1) {\n                //this closes out the prior phase and the new subphase\n                let header = Object.assign({}, headerObj)\n                if (highLevelPhase !== priorHLPhaseItem.label){    //ending with start of a new phase\n                    header.label = priorHLPhaseItem.label\n                    header.labelID = priorHLPhaseItem.id\n                    header.status = getPhaseStatus(phaseStatuses)\n                    header.displayColor = problemHeaderColor;\n                    header.numericalID = headerIndex++ / 1000\n                    if (!!phaseFB[header.label]){\n                        header.phaseOrderStatus = \"misOrdered\"\n                        header.phFeedback = phaseFB[header.label].feedback\n                        header.lateRelativeTo = phaseFB[header.label].arg2\n                    }\n                    displayObjects.push(header)\n                    displayObjects.push(...newPhaseObjects)\n                    newPhaseObjects = []}\n\n                header = Object.assign({}, subheader)\n                header.label = highLevelPhaseItem.label\n                header.labelID = highLevelPhaseItem.id\n                header.id = \"assessmentHeader\"\n                header.numericalID = headerIndex++ / 1000\n                displayObjects.push(header)\n\n                if (highLevelPhase === subheader.label) {\n                    displayObjects.push(...newPhaseObjects)\n                    displayObjects.push(...phaseObjects)}\n                else {\n                    subheader.numericalID = headerIndex++ / 1000\n                    displayObjects.push(...newPhaseObjects)\n                    displayObjects.push(subheader)\n                    displayObjects.push(...phaseObjects)}\n                endEntry = true;\n            }\n\n            //save the accumulated high-level phase if the phase changes\n            if (!endEntry) {\n                if (highLevelPhase !== priorHLPhaseItem.label) {\n                    let header = Object.assign({}, headerObj)\n                    header.label = priorHLPhaseItem.label\n                    header.labelID = priorHLPhaseItem.id\n                    header.status = getPhaseStatus(phaseStatuses)\n                    if (!!phaseFB[header.label]){\n                        header.phaseOrderStatus = \"misOrdered\"\n                        header.phFeedback = phaseFB[header.label].feedback\n                        header.lateRelativeTo = phaseFB[header.label].arg2\n                    }\n                    phaseStatuses = []\n                    header.displayColor = problemHeaderColor;\n                    header.numericalID = headerIndex++ / 1000\n                    displayObjects.push(header)\n                    displayObjects.push(...newPhaseObjects)\n                    //reinitialize for the new phase\n                    phaseStatuses.push(...subPhaseStatuses)\n                    subPhaseStatuses = []\n                    if (highLevelPhase === subheader.label) {\n                        newPhaseObjects = [...phaseObjects]\n                    }\n                    else {\n                        subheader.numericalID = headerIndex++ / 1000\n                        newPhaseObjects = [subheader]\n                        newPhaseObjects.push(...phaseObjects)\n                    }\n                    priorHLPhaseItem = highLevelPhaseItem\n                    problemHeaderColor = determineHLcolor(subPhaseColor, \"green\")\n                }\n                else {\n                    problemHeaderColor = determineHLcolor(subPhaseColor, problemHeaderColor)\n                    phaseStatuses.push(...subPhaseStatuses)\n                    subPhaseStatuses = []\n                    if (highLevelPhase === subheader.label) {\n                        newPhaseObjects.push(...phaseObjects)\n                    }\n                    else {\n                        subheader.numericalID = headerIndex++ / 1000\n                        newPhaseObjects.push(subheader)\n                        newPhaseObjects.push(...phaseObjects)\n                    }\n                }\n            }\n\n        }\n    }\n    return displayObjects;\n}\n\nconst determineHLcolor = (lowerColor, higherColor) => {\n    let newColor = higherColor\n    if (lowerColor === \"red\") {\n        newColor = \"red\"\n    }\n    if (lowerColor === \"yellow\" && newColor !== \"red\") {\n        newColor = \"yellow\"\n    }\n    return newColor\n}","import { MDB_TYPES, CHECKLIST_STEP_TYPES, OPTION_TYPES } from \"@meddbriefer/scenario-data\";\n\n// input: list of objects and a fieldName\n// returns: an object who's attributes are the distinct values for that fieldName mapped to the subset\n// of list items which share that field value\nexport const groupByKey = (listOfObjs, fldName) => listOfObjs.reduce(\n    (hash, obj) => ({ ...hash, [obj[fldName]]: (hash[obj[fldName]] || []).concat(obj) }),\n    {}\n)\n\nexport const getChecklistItemsByType = (scenario, itemType) => {\n    return scenario._checkListMetaData.filter(e => e.type === itemType)\n}\n\nexport const getChecklistItems = (scenario) => {\n  return scenario._checkListMetaData.filter(e => CHECKLIST_STEP_TYPES.includes(MDB_TYPES.PHASE, MDB_TYPES.SUB_PHASE))  \n}\n\nexport const getChecklistHierarchy = (scenario) => {\n    const phases = getChecklistItemsByType(scenario, MDB_TYPES.PHASE)\n    const subPhases = getChecklistItemsByType(scenario, MDB_TYPES.SUB_PHASE)\n    // filters out items which are display only\n    const clSteps = scenario._checkListMetaData.filter(e => CHECKLIST_STEP_TYPES.includes(e.type))\n    // get the options which are associated with some certain types of steps (decisions, assess w/options)\n    const options = scenario._checkListMetaData.filter(e => OPTION_TYPES.includes(e.type))\n    // map the options to their stepId\n    const stepOptions = groupByKey(options, \"parentID\")\n    // if a step has options, add them to that step\n    clSteps.forEach(step => {\n        if (step.id in stepOptions) {\n            step.options = stepOptions[step.id]\n        }\n    })\n    // figure out which checklist items belong to phases or subphases and group them by\n    // the their corresponding phase/subphase ids\n    const phChecklistSteps = groupByKey(clSteps.filter(e => undefined === e.subPhase), \"phase\")\n    const spChecklistSteps = groupByKey(clSteps.filter(e => !!e.subPhase), \"subPhase\")\n    // assign subphase steps to the appropriate subphase\n    subPhases.forEach(sp => {\n        sp.items = spChecklistSteps[sp.id]\n    })\n    // map subphases to their phase\n    const phSubphases = groupByKey(subPhases, \"phase\")\n    // phases have either items or subphases -not both. assign the appropriate stuff\n    // to each phase\n    phases.forEach(ph => {\n        if (ph.id in phChecklistSteps) {\n            ph.items = phChecklistSteps[ph.id]\n        } else {\n            ph.subPhases = phSubphases[ph.id]\n        }\n    })\n    return phases\n}","import { getEvents, getPhaseStatus, trimAction } from \"./debriefingUtils\";\n// import { requiredPhaseNames } from \"./analyzeEvents\";\nimport {\n  leafStatusList,\n} from \"@meddbriefer/feedback-data\";\n\n// constants\nconst summaryFields = [\n  \"label\",\n  \"status\",\n  \"phaseOrderStatus\",\n  \"lateRelativeTo\",\n  \"phase\",\n  \"subPhase\",\n  \"labelID\",\n  \"phaseID\",\n  \"probLabel\",\n  \"answerCorrect\",\n  \"answerDetails\",\n  \"timestamp\",\n  \"type\",\n];\n\n// globals\nlet analysis;\n\n// helper functions\n\n\n\n//regularize status values, by examining status values grouped into categories\n//of good, error, etc\nfunction regularizeStatus(event) {\n  if (leafStatusList[\"good\"].includes(event.status)) {\n    event.status = \"good\";\n  }\n  if (leafStatusList[\"error\"].includes(event.status)) {\n    event.status = \"error\";\n  }\n  if (leafStatusList[\"misorderedError\"].includes(event.status)) {\n    event.status = \"misorderedError\";\n  }\n  if (leafStatusList[\"misordered\"].includes(event.status)) {\n    event.status = \"misordered\";\n  }\n  if (leafStatusList[\"absent\"].includes(event.status)) {\n    event.status = \"absent\";\n  }\n  return event;\n}\n\nfunction determineStatusOfNotFound(id, promptIDarray) {\n  if (!!itemsByID && !itemsByID[id]){\n    idsNotFound.push(id)\n  }\n  if ((typeof id === 'string' && id.startsWith(\"request-\")) || promptIDarray[id]){\n    idsNotFound.pop()\n    return \"absent\"\n  }\n  else {return \"notFound\"}  //notFound is an unidentified id (could be a typo in some\n  //of the hand coded data or forgot an id in contraindicated or unnecessary for)\n\n}\n\nfunction examineDups(events) {\n  let newEvent\n  let misordered = false\n  let noError = false\n  let interimEvent\n\n  // will eventually need to separate any with variants from under the same eventID as not being\n  //duplicatea.  But for now we have no feedback for variants so can ignore variants for now.\n\n  //regularize status of each instance of event \n  //if any of the dups of event is without an error then can say there\n  //are no errors.\n  //However, if any of the dups are misordered then can report it as\n  //misOrdered in the summary\n  let lastEvent = events[events.length-1]\n  newEvent = trimAction(lastEvent, summaryFields);\n  \n  if (events.length > 1) {\n    for (const event of events) {\n      interimEvent = regularizeStatus(event)\n      if (![\"error\", \"misorderedError\"].includes(interimEvent.status)) {  //absent can't happen because if dups then wouldn't insert it was absent\n        noError = true\n      }\n      if ([\"misordered\", \"misorderedError\"].includes(interimEvent.status)) {\n        misordered = true\n      }\n      if (misordered && noError) {\n        break\n      }\n    }\n    newEvent = regularizeStatus(newEvent)\n    if (!misordered){\n      if (!noError){\n        newEvent.status = \"error\"}\n      else {newEvent.status = \"good\"}\n    }\n    \n    else {\n      if (noError){\n        newEvent.status = \"misordered\"}\n      else {newEvent.status = \"misorderedError\"}\n    } \n  }\n  else {newEvent = regularizeStatus(newEvent)}\n  \n  return newEvent\n}\n\nfunction processNextLevel(summary, top, decisionPromptIDs) {\n  let results;\n  let children = [];\n  let childIDs = [];\n  let statuses = [];\n  let events;\n  let newEvent;\n  let dummyEvent = {\n    id: top.id,\n    status: \"\",\n  };\n\n  if (top.subActions.length === 0) {   //at a leaf node\n    events = getEvents(analysis, \"id\", top.id);\n    if (events.length !== 0) {   \n      //examine potential duplicates to determine overall status for newEvent\n      //need to do more than ... to get a deep copy of an array of objects\n      const copyEvents = events.map(a => ({...a}));\n      newEvent = examineDups(copyEvents)  \n      statuses = [newEvent.status];\n      childIDs.push(newEvent.id);\n      children.push(newEvent);\n    } else {  //didn't find the event; that means it isn't a recognized event or is specified as contraindicated/unnecessary but is not present\n      //all contraindicated, unnecessary are specified in problem solutions now.  So their\n      //presence will be marked as contraindicated then as an error in the summary\n      let status = determineStatusOfNotFound(top.id, decisionPromptIDs)  \n      statuses = [status];\n      dummyEvent.status = status;\n      childIDs.push(top.id);\n      children.push(dummyEvent);\n    }\n    return [children, childIDs, statuses];\n  } else {\n    let header = {\n      id: top.id,\n      childIDs: [],\n      children: [],\n      status: \"\",\n      phaseOrderStatus: \"good\",\n      type: \"header\",\n    };\n    let event = getEvents(analysis, \"labelID\", top.id)[0];\n    let headerStatus = \"\"\n    if (!!event && !!event.phaseOrderStatus){\n      headerStatus = event.phaseOrderStatus\n      header.phaseOrderStatus = headerStatus\n      if (!!event.lateRelativeTo && event.lateRelativeTo.length >= 1){\n        header.lateRelativeTo = event.lateRelativeTo}\n    }\n    top.subActions.forEach((action) => {\n      results = processNextLevel(summary, action, decisionPromptIDs);\n      header.children = header.children.concat(results[0]);\n      header.childIDs = header.childIDs.concat(results[1]);\n      statuses = statuses.concat(results[2]);\n    });\n    \n    \n    if (headerStatus !== \"\" && headerStatus !== \"good\"){\n      statuses = statuses.concat(headerStatus)}\n    header.status = getPhaseStatus(statuses);\n    summary[top.id] = [header].concat(header.children);\n    delete header.children;\n    return [[header], [header.id], [header.status]];\n  }\n}\n\nlet idsNotFound\nlet itemsByID = undefined\n\n// main entry point (should be the only thing which needs to be exported)\nexport function summarizeAnalysis(analysisData, scenIEFeedback, itemByIDArray = undefined) {\n  //if optional arg itemByIDArray is passed then will report leaf ids that were not found that are\n  //used in the condition 2 data structure\n  idsNotFound = []\n  if (!!itemByIDArray) {\n    itemsByID = itemByIDArray\n  }\n  const { events: finalActions, decisionPromptIDs } = analysisData\n  let summary = {}; //holds results for condition 2\n  analysis = finalActions;\n  //work through the condition 2 DS and create entries for it and summarize status of children for the current level\n  // if (scenarios[scen.name]) {\n  let ds = scenIEFeedback.Action\n  //scenarios[scen.name].Action;\n  processNextLevel(summary, ds, decisionPromptIDs);\n\n  \n  if (idsNotFound.length !== 0) {\n    console.log(\"idsNotFound: \", idsNotFound)\n  }\n  return summary;\n}\n","export const formatAsMinSecs = (seconds) => {\n    return new Date(seconds * 1000).toISOString().substr(14, 5)\n}","import { vitalsCheckFeedbackLabel, \n    vitalsCheckFeedbackID, vitalsTakenDueToAssessmentSteps, globalReassessmentKn, globalReassessmentFeedback } from \"@meddbriefer/feedback-data/analysisData\"\nimport { getEvents, applyFBTemplate } from \"./debriefingUtils\"\n\nexport function doVitalsFeedback (actions, vitalsCount, scen){\n    let FBitems \n    let entry = {...globalReassessmentKn[scen]}\n    let fbTemplates = globalReassessmentFeedback \n    // only one of vitalsCheckFeedbackID and vitalsCheckFeedbackLabel\n    // should be defined.  But will default to using label if both are.\n    // Need to use label to find where to insert for phase level FB and\n    // id for inserting FB at leaf level\n    if (!!vitalsCheckFeedbackID){\n        FBitems = getEvents(actions, \"id\", vitalsCheckFeedbackID)}\n    if (!!vitalsCheckFeedbackLabel){\n        FBitems = getEvents(actions, \"label\", vitalsCheckFeedbackLabel)  \n    }\n    //multiple entries for the above label or id may be found but just need one.  \n    //Assuming the first found is fine for inserting the fb for condition 1\n    let FBitem = FBitems[0]\n    let finalFB\n    let done \n    let notDone \n    let template\n\n    //collect which required vitals were checked twice and which\n    //were not according to the vitalsCount\n    for (const [vital, count] of Object.entries(vitalsCount)){\n        if (count < 2){\n            if (!!notDone){\n                notDone = notDone + \", \" + vital}\n            else {notDone = vital}}\n        else {\n            if (!!done){\n                done = done + \", \" + vital}\n            else {done = vital}\n        }\n    }\n    \n    //save the list of what was and wasn't done two or more times\n    entry.notDone = notDone\n    entry.done = done\n\n    //select the apppropriate feedback template\n    if (!done && !!notDone){\n        template = fbTemplates[\"absent\"]\n    }\n    if (!!done && !notDone){\n        template = fbTemplates[\"good\"] \n    }\n    if (!!done && !!notDone){\n        template = fbTemplates[\"errors\"] \n    }\n\n    //Fill in the template using the field values in object entry.\n    //For now am not passing in c2FB because we haven't defined\n    //where the global vitals check feedback should be located (i.e.\n    //a separate id or the id where appears in condition 1 but with\n    //a different field specified?  I would think the former but\n    //need to confirm with Patty/Scott)\n    finalFB = applyFBTemplate(entry,{}, template)\n\n    //save the vitals found/not found in the action/event object where\n    //the fb string is stored.  Probably don't need it saved since the\n    //fb string has already been generated\n    if (!!done){\n        FBitem.vitalsDoneTwice = done}\n    if (!!notDone){\n        FBitem.vitalsNotDoneTwice = notDone}\n        \n    //save the feedback string in the action/event object if one was \n    //generated\n    if (!!finalFB){\n        FBitem.vitalsFB = finalFB}\n    }\n\n\n\n\nexport function doVitalsCounts (actions,scen){\n    let vitalsCount = []\n    let numVitalFound\n    let vitalsToCheck = globalReassessmentKn[scen][\"vitalLabels\"]\n    let actionIDs = actions.map(e => e.id)\n    let numFound \n    let minFound\n    for (const [vital, idEntries] of Object.entries(vitalsTakenDueToAssessmentSteps)){\n        if (vitalsToCheck.includes(vital)){\n            numVitalFound = 0\n            vitalsCount[vital] = 0\n            for (let entry of idEntries){\n                minFound = 999\n                //going through the \"and\" entries or assessment ids and assuming all must be present in \n                //same numbers to count as a complete request for the vital (e.g. asks for each \"sub\"\n                //measure separately for some assessments)\n                for (let id of entry){\n                    if (actionIDs.includes(id)){\n                        numFound = (actions.filter(action => action.id === id && action.timestamp !== -1)).length\n                        if (numFound < minFound){\n                            minFound = numFound\n                        }\n                        if (minFound === 0){\n                            break\n                        }\n                    }\n                    else {\n                        minFound = 0\n                        break\n                    }    \n                }    \n                numVitalFound = numVitalFound + minFound  \n            } \n        \n            vitalsCount[vital] = vitalsCount[vital] + numVitalFound}\n        \n    }\n    return vitalsCount\n}\n","import React from \"react\"\nimport classNames from \"classnames\";\n\nimport styles from \"./Cond2Debriefing.module.css\"\n\nexport default function Card({title, desc=null, children}) {\n    return (\n        <div className={classNames(\"card\", styles.card)}>\n            <div className={classNames(\"card-body\", styles['card-body'])}>\n                <h3 className=\"card-title\">\n                    <b>{title}</b>\n                </h3>\n                {desc && \n                <p className=\"card-text\">\n                    {desc}\n                </p>\n                }\n                <div>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n} \n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { Button } from \"reactstrap\";\n\n// import { AuthContext } from \"@meddbriefer/mdb-auth\";\nimport { MDBNavBar  } from \"@meddbriefer/mdb-ui\";\n\nimport { useDebriefing } from \"./DebriefingContext\";\n\nimport StepTabs from \"./header/StepTabs\";\n\nimport Define from \"./d/Define\";\nimport Explain from \"./e/Explain\";\nimport Benchmarks from \"./b/Benchmarks\";\nimport Review from \"./r/Review\";\nimport InvestigateExamine from \"./ie/InvestigateExamine\"\nimport Formalize from \"./f/Formalize\";\n\nimport styles from \"./Cond2Debriefing.module.css\"\n\nfunction SaveButton({label}) {\n  const {allSlidesCompleted, setDone} = useDebriefing()\n\n  const clickHandler = (event) => {\n    console.log(\"save button clicked\")\n    setDone(true)\n    event.target.blur()\n  }\n\n  return (\n    <Button\n      color=\"primary\"\n      size=\"sm\"\n      disabled={!allSlidesCompleted}\n      onClick={clickHandler}\n    >\n      {label}\n    </Button>\n  );\n}\n\nexport default function Cond2Debriefing({ debriefingID, computeTitle, saveButtonLabel, saveModal: SaveModal }) {\n  const { allSlidesCompleted, done, setDone, obsLog, scenario } = useDebriefing();\n\n  return (\n    <div className={styles['cond2-wrapper']}>\n      <MDBNavBar \n        title={computeTitle(obsLog, scenario)} \n        leftNav={<SaveButton label={saveButtonLabel}/>}\n      />\n      <StepTabs />\n      <Switch>\n        <Route\n          path=\"/debriefing2/:debriefingID/D/:stepPath\"\n          component={Define}\n        />\n        <Route\n          path=\"/debriefing2/:debriefingID/E/:stepPath\"\n          component={Explain}\n        />\n        <Route\n          path=\"/debriefing2/:debriefingID/B/:stepPath\"\n          component={Benchmarks}\n        />\n        <Route\n          path=\"/debriefing2/:debriefingID/R/:stepPath\"\n          component={Review}\n        />\n        <Route\n          path=\"/debriefing2/:debriefingID/IE/:stepPath\"\n          component={InvestigateExamine}\n        />\n        <Route\n          path=\"/debriefing2/:debriefingID/F/:stepPath\"\n          component={Formalize}\n        />\n        <Route>\n          <Redirect to={`/debriefing2/${debriefingID}/D/1`} />\n        </Route>\n      </Switch>\n      <SaveModal show={done} dismiss={() => setDone(false)} />\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\n\nexport const DebriefingContext = React.createContext({\n  debriefingID: undefined,\n  debLog: undefined,\n  obsLog: undefined,\n  scenario: undefined,\n  getSlideData: undefined,\n  getPathData: undefined,\n  updatePathData: undefined,\n  getIdData: undefined,\n  updateIdData: undefined,\n  stepStepPathToPath: undefined,\n  haveNextSlide: undefined,\n  havePrevSlide: undefined,\n  prevSlide: undefined,\n  nextSlide: undefined,\n  enableNextSlide: undefined,\n  enableStepPath: undefined,\n  stepIsEnabled: undefined,\n  stepStepPathIsEnabled: undefined,\n  goStepStepPath: undefined,\n  getUserRating: undefined,\n  setUserRating: undefined,\n  ieSummary: undefined,\n  bOutline: undefined,\n  ieOutline: undefined,\n  computeExpandedSlides: undefined,\n  stepPathIsExpanded: undefined,\n  allSlidesCompleted: undefined,\n  setAllSlidesCompleted: undefined,\n  done: undefined,\n  setDone: undefined,\n  saveDebriefing: undefined,\n  nextURL: undefined,\n  startTime: undefined\n});\n\nexport const useDebriefing = () => useContext(DebriefingContext);\n","import React, { useEffect, useState } from \"react\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport { useDebriefing } from \"../DebriefingContext\";\n\nimport TwoDivLayout from \"../layouts/TwoDivLayout\";\nimport FlatLeftNav from \"../outline/FlatLeftNav\";\n\nexport default function Benchmarks() {\n  const { stepPath } = useParams();\n  const { getSlideData, computeExpandedSlides, bOutline, enableNextSlide } =\n    useDebriefing();\n  const [sp, setSP] = useState(null)\n  const [myData, setMyData] = useState(null)\n\n  useEffect(\n    () => {\n      if (stepPath && !sp || sp !== stepPath) {\n        setSP(stepPath)\n        computeExpandedSlides(stepPath)\n        setMyData(getSlideData(\"B\", stepPath));\n        enableNextSlide(\"B\", stepPath);\n      }\n    }, \n    [stepPath, sp, myData, getSlideData, computeExpandedSlides, enableNextSlide]\n  );\n\n  if (!myData) {\n    return <div>loading...</div>\n  }\n\n  return (\n    <TwoDivLayout \n        currStep=\"B\" \n        currStepPath={stepPath} \n        outline={\n          <FlatLeftNav currStep=\"B\" currStepPath={stepPath} outline={bOutline} />\n        }\n      >\n      <ol\n        style={{\n          lineHeight: \"1.15\",\n          paddingLeft: \"24px\",\n        }}\n      >\n        {myData.benchmarks?.map((bm, bmIdx) => (\n          <li key={bmIdx} style={{ paddingTop: \"10px\" }}>\n            <span>{bm.benchmarkText}</span>\n            {bm.subBenchmarks.length > 0 && (\n              <ol\n                style={{\n                  lineHeight: \"1.15\",\n                  paddingLeft: \"24px\",\n                }}\n              >\n                {bm.subBenchmarks.map((sbm, sbmIdx) => (\n                    <li \n                        key={sbmIdx}\n                        style={{paddingTop: \"10px\"}}\n                    >\n                        {sbm}\n                    </li>\n                ))}\n              </ol>\n            )}\n          </li>\n        ))}\n      </ol>\n    </TwoDivLayout>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport { useParams } from \"react-router-dom\";\nimport { useDebriefing } from \"../DebriefingContext\";\n\nimport SingleColumnLayout from \"../layouts/SingleColumnLayout\";\nimport Card from \"../Card\";\n\nexport default function Define() {\n  const { stepPath } = useParams();\n  const { getSlideData, enableNextSlide } = useDebriefing();\n  const [myData, setMyData] = useState(null);\n\n  useEffect(() => {\n    if (!myData) {\n      setMyData(getSlideData(\"D\", stepPath));\n      enableNextSlide(\"D\", stepPath);\n    }\n  }, [stepPath, getSlideData, myData, enableNextSlide]);\n\n  if (!myData) {\n    return <div>loading...</div>;\n  }\n  return (\n    <SingleColumnLayout\n      currStep=\"D\"\n      currStepPath={stepPath}\n    >\n      <Card title=\"DEBRIEF OVERVIEW\">\n\n        <p>\n          The purpose of this debriefing is to guide you in reflecting on the scenario you have just completed, in order to improve your skills as a paramedic. It does not assess your overall ability as a paramedic.\n        </p>\n        <p>\n          This debriefing consists of the following components:\n        </p>\n        <ul>\n          <li>\n            Learning Objectives: View the clinical skills this scenario was designed to exercise.\n          </li>\n          <li>\n            Expected Actions: View the actions you should have performed, to thoroughly assess and treat this patient.\n          </li>\n          <li>\n            Sample Good Scenario: Step through an example of effective performance.\n          </li>\n          <li>\n            What Happened & Why: Critique and reflect on your actions.\n          </li>\n          <li>\n            Take Home Points: Summarize what you learned from this debriefing.\n          </li>\n        </ul>\n       </Card>\n    </SingleColumnLayout>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { useDebriefing } from \"../DebriefingContext\";\n\nimport SingleColumnLayout from \"../layouts/SingleColumnLayout\";\nimport Card from \"../Card\";\n\nexport default function Explain() {\n    const { stepPath } = useParams();\n    const { getSlideData, enableNextSlide } = useDebriefing();\n    const [myData, setMyData] = useState(null)\n    \n    useEffect(\n        () => {\n            if (!myData) {\n                setMyData(getSlideData(\"E\", stepPath));\n                enableNextSlide(\"E\", stepPath);\n            }\n        }, \n        [stepPath, myData, getSlideData, enableNextSlide]\n    );\n\n    if (!myData) {\n        return <div>loading..</div>\n    }\n\n    return (\n      <SingleColumnLayout currStep=\"E\" currStepPath={stepPath}>\n        <Card desc={myData.description}>\n          <ul>\n            {myData.text?.map((item, idx) => (\n              <li key={idx}>{item}</li>\n            ))}\n          </ul>\n        </Card>\n      </SingleColumnLayout>\n    );\n}\n","import React, {useContext} from \"react\"\nimport { Button } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { AuthContext } from \"@meddbriefer/mdb-auth\";\nimport { MDBModal } from \"@meddbriefer/mdb-ui\";\n\nimport { useDebriefing } from \"../DebriefingContext\";\n\nexport default function SaveDebriefingModal({ show, dismiss }) {\n  const {saveUserData, getUserData} = useContext(AuthContext)\n  let history = useHistory()\n  const {nextURL, saveDebriefing, scenario, startTime} = useDebriefing()\n  \n  const submitHandler = async (event) => {\n    event.preventDefault();\n    await saveDebriefing()\n    const userData = await getUserData()\n    const timeOnTask = userData.timeOnTask\n      ? [...userData.timeOnTask]\n      : [];\n    timeOnTask.push({\n      scenario: scenario.name,\n      task: \"debriefing\",\n      startTime: startTime,\n      endTime: Date.now()\n    })\n    console.table(\"timeOnTask\", timeOnTask);\n    await saveUserData(\"timeOnTask\", timeOnTask)\n    history.push(nextURL)\n  };\n\n  return (\n    <MDBModal\n      title=\"Are you finished with this debriefing?\"\n      show={show}\n      dismiss={dismiss}\n    >\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <p>\n              <span className=\"text-danger\">WARNING: </span>\n              <span>\n                Clicking \"I'm Done\" will not allow you to view the debriefing\n                any longer. Do not click on it unless you are truly done with\n                this debriefing.\n              </span>\n            </p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <Button color=\"danger\" size=\"lg\" onClick={submitHandler}>\n              I'm Done\n            </Button>\n            <Button color=\"primary\" size=\"lg\" onClick={dismiss}>\n              Cancel\n            </Button>\n          </div>\n        </div>\n      </div>\n    </MDBModal>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Button } from \"reactstrap\";\nimport { useParams } from \"react-router-dom\";\n\nimport { useDebriefing } from \"../DebriefingContext\";\n\nimport SingleColumnLayout from \"../layouts/SingleColumnLayout\";\nimport Card from \"../Card\";\n\nexport default function Formalize() {\n  const { stepPath } = useParams();\n  const { allSlidesCompleted, getSlideData, getIdData, setAllSlidesCompleted, updateIdData } = useDebriefing();\n  const [myData, setMyData] = useState(null);\n\n  const submitHandler = (event) => {\n    event.preventDefault()\n    const {response} = event.target.elements\n    console.log(response.value)\n    updateIdData('formalize', {response: response.value})\n    setAllSlidesCompleted(true)\n  }\n\n  useEffect(() => {\n    if (!myData) {\n      setMyData(getSlideData(\"F\", stepPath));\n    }\n  }, [stepPath, getSlideData, myData]);\n\n  if (!myData) {\n    return <div>loading...</div>;\n  }\n\n  return (\n    <SingleColumnLayout currStep=\"F\" currStepPath={stepPath}>\n      <Card title={myData.heading}>\n        <h4>{myData.questions}</h4>\n        {allSlidesCompleted ? (\n          <>\n            <h5>You said:</h5>\n            <p>{getIdData(\"formalize\").response}</p>\n          </>\n        ) : (\n          <form onSubmit={submitHandler}>\n            <textarea\n              id=\"response\"\n              cols={80}\n              rows={4}\n              defaultValue={getIdData(\"formalize\").response}\n              required\n            />\n\n            <br />\n            <Button type=\"submit\" color=\"primary\">\n              Submit\n            </Button>\n          </form>\n        )}\n      </Card>\n    </SingleColumnLayout>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport classNames from \"classnames\";\n\nimport { useDebriefing } from \"../DebriefingContext\";\n\nimport styles from \"../Cond2Debriefing.module.css\";\n\nexport default function NavButtons({currStep, currStepPath}) {\n    const {haveNextSlide, havePrevSlide, nextSlide, prevSlide} = useDebriefing()\n    return (\n      <>\n        <Button\n          disabled={!havePrevSlide(currStep, currStepPath)}\n          color=\"primary\"\n          size=\"sm\"\n          className={classNames(styles.prev, styles['nav-btn'])}\n          onClick={() => prevSlide(currStep, currStepPath)}\n        >\n          Back\n        </Button>\n        <Button\n          disabled={!haveNextSlide(currStep, currStepPath)}\n          color=\"primary\"\n          size=\"sm\"\n          className={classNames(styles.next, styles['nav-btn'])}\n          onClick={() => nextSlide(currStep, currStepPath)}\n        >\n          Next\n        </Button>\n      </>\n    );\n}","import React, { useEffect, useState } from \"react\"\nimport { Nav } from \"reactstrap\"\nimport { useLocation } from \"react-router-dom\";\n\nimport TopButton from \"./TopButton\";\n\nimport styles from \"../Cond2Debriefing.module.css\";\n\nexport default function StepTabs() {\n  let location = useLocation()\n  const [currStep, setCurrStep] = useState(null)\n\n    useEffect(\n        () => {\n          setCurrStep(location.pathname.split(\"/\")[3])\n        }, [location]\n    )\n\n    if (!currStep) {\n      return <span></span>\n    }\n\n    return (\n      <header className={styles[\"main-nav\"]}>\n          <Nav tabs>\n            <TopButton\n              step=\"E\"\n              currStep={currStep}\n              label=\"Learning Objectives\"\n            />\n            <TopButton step=\"B\" currStep={currStep} label=\"Expected Actions\" />\n            <TopButton step=\"R\" currStep={currStep} label=\"Sample Good Scenario\" />\n            <TopButton step=\"IE\" currStep={currStep} label=\"What Happened & Why\" />\n            <TopButton step=\"F\" currStep={currStep} label=\"Take Home Points\" />\n          </Nav>\n      </header>\n    );\n}\n\n","import React from \"react\"\nimport { NavItem, NavLink } from \"reactstrap\";\nimport classNames from \"classnames\";\n\nimport { useDebriefing } from '../DebriefingContext';\n\n\nexport default function TopButton({ step, currStep, label }) {\n    const { goStepStepPath, stepIsEnabled } = useDebriefing();\n    \n    const clickHandler = () => goStepStepPath(step, \"1\")\n    \n    return (\n      <NavItem>\n        <NavLink\n          className={classNames({active: step === currStep})}\n          onClick={clickHandler}\n          disabled={!stepIsEnabled(step)}\n          // style={{\n          //   fontSize: \"2.25em\",\n          //   padding: \"0 20px\"\n          // }}\n        >\n          {label}\n        </NavLink>\n      </NavItem> \n    )\n } \n","import React from \"react\";\nimport { Table, Button } from \"reactstrap\";\n\nimport { useDebriefing } from \"../DebriefingContext\";\n\nimport AnalysisMessages from \"./AnalysisMessages\";\nimport FeedbackIcon from \"./FeedbackIcon\";\n\nimport styles from \"../Cond2Debriefing.module.css\";\n\nimport { getRequiredSubActions, isGood, isAbsent, hasError, isOutOfOrder } from \"../../utils\";\n\nexport default function Analysis({ slide, stepPath, analyzedHandler }) {\n  const { getPathData, getUserRating, ieSummary } = useDebriefing();\n\n  const nonRequiredActions = () => {\n    return slide.subActions.filter( (e) =>\n      e.type?.toLowerCase() !== \"required\" &&\n      e.log_status &&\n      e.log_status !== \"notFound\"\n    )\n  }\n\n  return (\n    <>\n      <h4>\n        Feedback based on your recorded actions:\n        <i> {slide.label}</i>\n      </h4>\n      <div\n        className={styles[\"feedback-list\"]}\n        style={{\n          maxHeight: \"460px\",\n          overflowY: \"auto\",\n        }}\n      >\n        <Table size=\"sm\" striped={true} bordered={true}>\n          <thead\n            style={{\n              height: \"28px\",\n              backgroundColor: \"white\",\n              position: \"sticky\",\n              top: 0,\n            }}\n          >\n            <tr>\n              <th>Action</th>\n              <th>Your Rating</th>\n              <th>System Rating</th>\n              <th>Feedback</th>\n            </tr>\n          </thead>\n          <tbody>\n            {getRequiredSubActions(slide).map((sa, idx) => (\n              <tr key={idx}>\n                <td>{sa.label}</td>\n                <td>\n                  {getUserRating(sa.id) && <i className=\"bi-check-lg\"></i>}{\" \"}\n                </td>\n                <td>\n                  <FeedbackIcon isGood={isGood(ieSummary, sa.id)} />\n                </td>\n                <td>\n                  {/* \n                  FIXME: STILL TRUE? at most one of these should occur as they are mutually exclusive\n                  */}\n                  {hasError(ieSummary, sa.id) && (\n                    <AnalysisMessages messages={sa.feedbackErrors} />\n                  )}\n                  {isAbsent(ieSummary, sa.id) && (\n                    <AnalysisMessages messages={sa.feedbackAbsent} />\n                  )}\n                  {isOutOfOrder(ieSummary, sa.id) && (\n                    <AnalysisMessages messages={sa.feedbackOutOfOrder} />\n                  )}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n      {nonRequiredActions().length > 0 &&\n        <div>\n          <h5>The following steps were not indicated</h5>\n          {nonRequiredActions().map(nra => \n          <p>\n            {nra.feedbackErrors}\n          </p>  \n          )}\n        </div>\n      }\n      <Button\n        size=\"sm\"\n        color=\"primary\"\n        onClick={analyzedHandler}\n        disabled={getPathData(\"IE\", stepPath).analyzed}\n      >\n        Ok\n      </Button>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport { Button } from \"reactstrap\";\n\nconst PLACEHOLDER =\n  \"There are errors at this step. We will discuss them shortly.\";\n\nexport default function AnalysisMessages({ messages }) {\n  const [msgs, setMsgs] = useState(null);\n  const [showLess, setShowLess] = useState(false);\n\n  useEffect(() => {\n    const tmp = messages.filter((msg) => msg !== \"\");\n    const tmp2 = tmp.length > 0 ? [...tmp] : [PLACEHOLDER];\n    setMsgs(tmp2);\n    setShowLess(tmp2.length > 1);\n  }, [messages]);\n\n  if (!msgs) {\n    return <div>calculating</div>;\n  }\n  if (msgs.length === 0) {\n    return <span></span>;\n  }\n  return (\n    <div>\n      {showLess ? (\n        <>\n          <div>{msgs[0]}</div>\n          <Button\n            color=\"link\"\n            size=\"sm\"\n            onClick={() => setShowLess(false)}\n            style={{\n              border: 0,\n              padding: 0,\n            }}\n          >\n            show more\n          </Button>\n        </>\n      ) : (\n        <>\n          {msgs.map((msg, i) => (\n            <p \n              key={i}\n              style={{\n                marginBottom: \"8px\"\n              }}\n            >\n              {msg}\n            </p>\n          ))}\n          {msgs.length > 1 && (\n            <Button\n              color=\"link\"\n              size=\"sm\"\n              onClick={() => setShowLess(true)}\n              style={{\n                border: 0,\n                padding: 0,\n              }}\n            >\n              show less\n            </Button>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport classNames from \"classnames\";\n\nimport { useDebriefing } from \"../DebriefingContext\";\n\nimport styles from \"../Cond2Debriefing.module.css\"\n\nexport default function ExamineForm({ slide, stepPath, prompts, submitHandler }) {\n  const { getIdData, getPathData } = useDebriefing();\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const {examine} = event.target.elements\n    submitHandler(examine.value)\n  };\n\n  return (\n    <div\n      className={classNames(styles[\"feedback-form\"], styles[\"feedback-block\"])}\n    >\n      <p>\n        <b>\n          Let's reflect on: <i>{slide.label}</i>\n        </b>\n      </p>\n\n      {slide.type?.toLowerCase() === \"required\" ? (\n        <p>What did you do instead? What do you think led to this error?</p>\n      ) : (\n        <p>Why did you perform this action?</p>\n      )}\n\n      {prompts && (\n        <>\n          <p>\n            <b>For example:</b>\n          </p>\n          <ul>\n            {prompts.split(\";\").map((prompt, i) => (\n              <li key={i}>{prompt}</li>\n            ))}\n          </ul>\n        </>\n      )}\n\n      <form onSubmit={handleSubmit}>\n        <textarea\n          id=\"examine\"\n          cols={80}\n          placeholder=\"Enter your response here...\"\n          defaultValue={getIdData(slide.id).examine}\n          disabled={getPathData(\"IE\", stepPath).examined}\n        />\n        <br />\n        <Button\n          type=\"submit\"\n          size=\"sm\"\n          color=\"primary\"\n          disabled={getPathData(\"IE\", stepPath).examined}\n        >\n          Submit\n        </Button>\n      </form>\n    </div>\n  );\n}\n","export default function FeedbackIcon({isGood}) {\n    return (\n        <span \n            className=\"material-icons-outlined\"\n            style={{\n                color: isGood ? \"green\" : \"red\", \n            }}\n        >\n            {isGood ? \"sentiment_satisfied\" : \"highlight_off\"}\n        </span>\n    )\n} ","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { useDebriefing } from \"../DebriefingContext\";\n\nimport TwoDivLayout from \"../layouts/TwoDivLayout\";\nimport HierarchicalLeftNav from \"../outline/HierarchicalLeftNav\";\n\nimport SequentialIEView from \"./SequentialIEView\";\nimport TabbedIEView from \"./TabbedIEView\";\n\n\nexport default function InvestigateExamine() {\n  const { stepPath } = useParams();\n  const { getPathData,getSlideData, ieOutline, computeExpandedSlides } = useDebriefing();\n\n  const [sp, setSP] = useState(null)\n  const [expandedSlides, setExpandedSlides] = useState(null)\n  const [myData, setMyData] = useState(null);\n  const [completed, setCompleted] = useState(null);\n  const [examined, setExamined] = useState(null)\n\n  useEffect(\n    () => { \n      if(!sp || sp !== stepPath) {\n        setSP(stepPath)\n        // console.log(\"stepPath set\")\n        setExpandedSlides(computeExpandedSlides(stepPath));\n        const slide = getSlideData(\"IE\", stepPath);\n        // console.log(slide)\n        setMyData(slide);\n        const {completed: _completed, examined: _examined} = getPathData(\"IE\", stepPath)\n        setExamined(_examined)\n        setCompleted(_completed);\n      }\n    }, \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [stepPath]\n  )\n\n\n  if (!myData) {\n    return <div>loading...</div>\n  }\n\n  return (\n    <TwoDivLayout\n      currStep=\"IE\"\n      currStepPath={stepPath}\n      outline={\n        <HierarchicalLeftNav\n          currStep=\"IE\"\n          currStepPath={stepPath}\n          outline={ieOutline}\n          expandedSlides={expandedSlides}\n        />\n      }\n    >\n      {completed \n       ? (\n        <TabbedIEView myData={myData} stepPath={stepPath} examined={examined} />\n      ) : (\n        <SequentialIEView myData={myData} stepPath={stepPath} setCompleted={setCompleted} />\n      )}\n    </TwoDivLayout>\n  );\n}\n","import React, {useEffect, useState} from \"react\";\n\nimport { useDebriefing } from \"../DebriefingContext\";\n\nimport UserRating from \"./UserRating\";\nimport Analysis from \"./Analysis\";\nimport ExamineForm from \"./ExamineForm\";\n\nimport { isAbsent, hasError } from \"../../utils\";\n\nimport styles from \"../Cond2Debriefing.module.css\";\n\n\n\nexport default function SequentialIEView({myData, stepPath, setCompleted, initialMode=\"rate\"}) {\n    const {enableNextSlide, getPathData, ieSummary, updateIdData, updatePathData} = useDebriefing()\n    const [needToExamine, setNeedToExamine] = useState(null);\n    const [rated, setRated] = useState(null);\n    const [analyzed, setAnalyzed] = useState(null);\n    const [examined, setExamined] = useState(null);\n    const [mode, setMode] = useState(null);\n    const [computeMode, setComputeMode] = useState(false);\n\n    const getMode = () => mode;\n\n      const onRatingComplete = () => {\n        setRated(true);\n        updatePathData(\"IE\", stepPath, { rated: true });\n        setComputeMode(true);\n      };\n\n      const onAnalysisComplete = (event) => {\n        event.preventDefault();\n        setAnalyzed(true);\n        updatePathData(\"IE\", stepPath, { analyzed: true });\n        setComputeMode(true);\n      };\n\n      const onExamineComplete = (examineResponse) => {\n        setExamined(true);\n        updateIdData(myData.id, { examine: examineResponse });\n        updatePathData(\"IE\", stepPath, { examined: true });\n        setComputeMode(true);\n      };\n\n    useEffect(\n      () => {\n        const pd = getPathData(\"IE\", stepPath)\n        // console.log(pd)\n        const {\n          rated: _rated,\n          analyzed: _analyzed,\n          examined: _examined,\n        } = pd;\n\n        const need2props = {\n          examIfAbs: myData.examineIfAbsent,\n          absent: isAbsent(ieSummary, myData.id),\n          examIfErrs: myData.examineIfErrors,\n          errors: hasError(ieSummary, myData.id),\n        };\n\n        const need2 =\n          (need2props.examIfAbs && need2props.absent) ||\n          (need2props.examIfErrs && need2props.errors);\n        console.log(\"need2Examine\", need2props, need2);\n        setNeedToExamine(need2);\n\n        setExamined(_examined);\n        setAnalyzed(_analyzed);\n        setRated(_rated);\n        setMode(initialMode);\n        setComputeMode(true);\n      }, [myData, stepPath, initialMode, ieSummary, getPathData]\n    )\n      useEffect(() => {\n        if (\n          !computeMode ||\n          rated === null ||\n          analyzed === null ||\n          examined === null\n        ) {\n          // console.log(`skipping computation of mode: computeMode: ${computeMode} rated: ${rated} analyzed: ${analyzed} examined: ${examined}`)\n        } else {\n          let newMode;\n          if (examined) {\n            newMode = \"examine\";\n            enableNextSlide(\"IE\", stepPath);\n          } else if (analyzed) {\n            if (needToExamine) {\n              newMode = \"examine\";\n            } else {\n              newMode = \"analysis\";\n              enableNextSlide(\"IE\", stepPath);\n            }\n          } else if (rated) {\n            newMode = \"analysis\";\n          } else {\n            newMode = \"rate\";\n          }\n\n          if (newMode !== getMode()) {\n            setMode(newMode);\n          }\n          setComputeMode(false);\n        }\n      }, [\n        computeMode,\n        stepPath,\n        rated,\n        analyzed,\n        examined,\n        needToExamine,\n        getMode,\n        enableNextSlide,\n        setCompleted\n      ]);\n\n\n    return (\n      <div className={styles[\"feedback-block\"]}>\n        {myData.subActions.length > 0 && (\n          <>\n            {\"rate\" === mode && (\n              <UserRating slide={myData} ratedHandler={onRatingComplete} />\n            )}\n            {\"analysis\" === mode && (\n              <Analysis\n                slide={myData}\n                stepPath={stepPath}\n                analyzedHandler={onAnalysisComplete}\n              />\n            )}\n            {\"examine\" === mode && (\n              <ExamineForm\n                slide={myData}\n                stepPath={stepPath}\n                prompts={isAbsent(ieSummary, myData.id) ? myData.promptsIfAbsent : myData.promptsIfErrors}\n                submitHandler={onExamineComplete}\n              />\n            )}\n          </>\n        )}\n      </div>\n    );\n}","import React, {useState} from \"react\";\nimport {TabContent, TabPane, Nav, NavItem, NavLink} from \"reactstrap\"\nimport classNames from \"classnames\";\n\nimport { useDebriefing } from \"../DebriefingContext\";\nimport Analysis from \"./Analysis\";\nimport ExamineForm from \"./ExamineForm\";\n\nimport { isAbsent } from \"../../utils\";\n\nimport styles from \"../Cond2Debriefing.module.css\"\n\nexport default function TabbedIEView({myData, stepPath, examined}) {\n    const {ieSummary} = useDebriefing()\n    const [activeTab, setActiveTab] = useState(\"feedback\")\n\n    const setTab = (tabID) => setActiveTab(tabID)\n\n    return (\n        <div className={styles['feedback-block']}>\n            <Nav tabs>\n                <NavItem>\n                    <NavLink\n                        className={classNames({active: activeTab === \"feedback\"})}\n                        onClick={() => setTab(\"feedback\")}\n                    >\n                        Feedback\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink\n                        className={classNames({active: activeTab === \"examine\"})}\n                        onClick={() => setTab(\"examine\")}\n                        disabled={!examined}\n                    >\n                        Your Reflection\n                    </NavLink>\n                </NavItem>\n            </Nav>\n            <TabContent activeTab={activeTab}>\n                <TabPane tabId=\"feedback\">\n                    <Analysis\n                        slide={myData}\n                        stepPath={stepPath}\n                    />\n                </TabPane>\n                <TabPane tabId=\"examine\">\n                    <ExamineForm\n                        slide={myData}\n                        stepPath={stepPath}\n                        prompts={isAbsent(ieSummary, myData.id) ? myData.promptsIfAbsent : myData.promptsIfErrors}\n                    />\n                </TabPane>\n            </TabContent>\n        </div>\n    )\n}","import React from \"react\";\nimport {Button} from \"reactstrap\"\n\nimport { useDebriefing } from \"../DebriefingContext\";\n\nimport { capitalizeFirstLetter, lowerCaseFirstLetter, getRequiredSubActions } from \"../../utils\";\n\n\nexport default function UserRating({slide, ratedHandler}) {\n  const { getUserRating, setUserRating } = useDebriefing();\n\n  const handleRatingChange = (event) => {\n    const { id, checked } = event.target;\n    setUserRating(id, checked);\n  };\n\n  return (\n    <>\n      <p>\n        <b>\n          Did you <i>{lowerCaseFirstLetter(slide.label)}</i>, including:\n        </b>\n      </p>\n      <p style={{ fontSize: \"0.85rem\" }}>\n        Check what you think you completed successfully.\n      </p>\n\n      <div>\n        {getRequiredSubActions(slide).map((subAction, idx) => (\n          <div key={subAction.id}>\n            <input\n              type=\"checkbox\"\n              id={subAction.id}\n              checked={getUserRating(subAction.id) === true}\n              onChange={handleRatingChange}\n            />\n            <label\n              htmlFor={subAction.id}\n              style={{\n                display: \"inline\",\n                paddingLeft: \"4px\",\n              }}\n            >\n              {capitalizeFirstLetter(subAction.label)}\n            </label>\n          </div>\n        ))}\n        <br />\n        <Button size=\"sm\" color=\"primary\" onClick={ratedHandler}>\n          Show Feedback\n        </Button>\n      </div>\n    </>\n  );\n}\n","// export {default as AnalyzeDebriefing} from \"./AnalyzeDebriefing\"\n// export {default as Card} from \"./Card\"\n// export {default as CardText} from \"./CardText\"\n// export {default as ExamineForm} from \"./ExamineForm\"\n// export {default as MainOutline} from \"./MainOutline\"\n// export {default as MDBNavBar} from \"./MDBNavBar\"\n// export {default as Slide} from \"./Slide\"\n// export {default as SlideShow} from \"./SlideShow\"\n// export {default as Tables} from \"./Tables\"\n// export {default as Tooltip} from \"./Tooltip\"\n// export {default as TwoDivOutline} from \"./TwoDivOutline\"\n// export {default as UnauthedLayout} from \"./UnauthedLayout\"\nexport {default as SaveReviewModal} from \"./review/SaveReviewModal\"\nexport {default as SaveDebriefingModal} from \"./experiment/SaveDebriefingModal\"\nexport * from \"./layouts\"","import React from \"react\"\n\nimport NavButtons from \"../footer/NavButtons\"\n\nimport styles from \"../Cond2Debriefing.module.css\";\n\nexport default function SingleColumnLayout({currStep, currStepPath, children}) {\n\n    return (\n      <>\n        <main>{children}</main>\n        <footer className={styles['controller-nav']}>\n          <NavButtons currStep={currStep} currStepPath={currStepPath} />\n        </footer>\n      </>\n    );\n\n}","import React from \"react\";\nimport classNames from \"classnames\";\n\nimport NavButtons from \"../footer/NavButtons\";\n\nimport styles from \"../Cond2Debriefing.module.css\";\n\nexport default function TwoDivLayout({currStep, currStepPath, outline, children}) {\n    // console.log(outline)\n    return (\n      <>\n        <main className={styles['two-div-outline-container']}>\n          <div className={classNames(styles['outline-box'],  styles.outline)}>\n            {outline}\n          </div>\n\n          <div className={classNames(styles['outline-box'], styles['outline-rhs'])}>\n            {children}\n          </div>\n        </main>\n        <footer className={styles['controller-nav']}>\n          <NavButtons \n            currStep={currStep} \n            currStepPath={currStepPath} \n          />\n        </footer>\n      </>\n    );\n}","import React from \"react\"\n\nimport { MDBNavBar } from \"@meddbriefer/mdb-ui\"\n\nconst UnauthedLayout = (props) => {\n\n    return (\n        <>\n            <MDBNavBar\n                title=\"MedDBriefer Authentication\"\n            />\n            { props.children }\n        </>\n    )\n}\n\nexport default UnauthedLayout","export { default as UnauthedLayout } from \"./UnauthedLayout\"","import React from \"react\"\n\nimport OutlineButton from \"./OutlineButton\"\nimport OutlineLabel from \"./OutlineLabel\"\n\n\nexport default function FlatLeftNav({currStep, currStepPath, outline}) {\n    return (\n        <>\n        <h4>{outline.heading}</h4>\n        <ul\n            style={{\n                paddingLeft: \"4px\",\n                marginBottom: \"4px\"\n            }}\n        >\n            {outline.children.map((child, idx) =>\n             <li \n                key={idx}\n                style={{\n                    marginBottom: \"0.5rem\"\n                }}\n             >\n                {currStepPath === child.stepPath\n                    ?<OutlineLabel node={child} />\n                    : <OutlineButton node={child} currStep={currStep} currStepPath={currStepPath}/>\n                }\n             </li>\n            )}\n        </ul>\n    </>\n    )\n}","import React from \"react\"\n\nimport { useDebriefing } from \"../DebriefingContext\"\n\nimport OutlineButton from \"./OutlineButton\"\nimport OutlineLabel from \"./OutlineLabel\"\nimport OutlineChildren from \"./OutlineChildren\"\n\nexport default function HierarchicalLeftNav({currStep, currStepPath, outline, expandedSlides}) {\n  const {getPathData} = useDebriefing()\n\n  return (\n    <>\n      {currStepPath === outline.stepPath ? (\n        <OutlineLabel node={outline} depth={0} />\n      ) : (\n        <OutlineButton\n          node={outline}\n          currStep={currStep}\n          currStepPath={currStepPath}\n          depth={0}\n        />\n      )}\n      {getPathData(outline.step, outline.stepPath).rated && \n        <OutlineChildren\n          currStep={currStep}\n          currStepPath={currStepPath}\n          node={outline}\n          expandedSlides={expandedSlides}\n          depth={0}\n        />\n      }\n    </>\n  );\n}","import React from \"react\";\nimport classNames from \"classnames\";\n\nimport { useDebriefing } from \"../DebriefingContext\";\n\nimport { capitalizeFirstLetter } from \"../../utils\";\n\nimport styles from \"../Cond2Debriefing.module.css\"\n\n\nexport default function OutlineButton({ node, currStep, currStepPath, depth=0 }) {\n  const { goStepStepPath, stepStepPathIsEnabled } = useDebriefing();\n\n  return (\n    <button\n      type=\"button\"\n      className={classNames(\"btn\", \"btn-link\", styles[\"btn-link\"])}\n      disabled={!stepStepPathIsEnabled(node.step, node.stepPath)}\n      style={{\n        textAlign: \"left\",\n        paddingLeft: 0,\n        paddingRight: 0,\n        paddingTop: \"2px\",\n        paddingBottom: \"2px\",\n        border: 0\n      }}\n      onClick={() => goStepStepPath(node.step, node.stepPath)}\n    >\n      {capitalizeFirstLetter(node.label)}\n    </button>\n  );\n}\n","import React  from \"react\";\n\nimport { useDebriefing } from \"../DebriefingContext\";\n\nimport OutlineButton from \"./OutlineButton\";\nimport OutlineLabel from \"./OutlineLabel\";\n\nexport default function OutlineChildren({ currStep, currStepPath, node, expandedSlides, depth=0 }) {\n  const { getPathData, stepPathIsExpanded} = useDebriefing();\n\n  const expandChildren = (node) => {\n    const shouldExpand =\n      node.children.length > 0 &&\n      stepPathIsExpanded(node.stepPath, expandedSlides) &&\n      getPathData(node.step, node.stepPath).rated;\n    return shouldExpand\n  } \n\n\n  return (\n    <ul\n      style={{\n        paddingLeft: \"12px\",\n        paddingRight: \"4px\",\n        listStyle: \"none\",\n      }}\n    >\n      {node.children.map((child) => (\n        <li\n          key={child.id}\n          style={{\n              marginBottom: \"2px\",\n              lineHeight: \"0.95em\"\n          }}\n        >\n          {currStepPath === child.stepPath \n          ? <OutlineLabel node={child} depth={depth} />\n          : <OutlineButton node={child} currStep={currStep} currStepPath={currStepPath} depth={depth} />\n          }\n\n          {expandChildren(child) && \n            <OutlineChildren\n              currStep={currStep} \n              currStepPath={currStepPath}\n              node={child}\n              expandedSlides={expandedSlides}\n              depth={depth+1}\n            />\n          }\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import React from \"react\";\n\nimport { capitalizeFirstLetter } from \"../../utils\";\n\n\nexport default function OutlineLabel({ node, depth=0 }) {\n  return (\n    <b \n      style={{\n        display: \"inline-block\",\n        fontSize: \"1.2em\",\n        lineHeight: \"1.2em\",\n        border: \"1px solid black\",\n        borderRadius: \"5px\",\n        padding: \"4px\"\n      }}>\n      {capitalizeFirstLetter(node.label)}\n    </b>\n  )\n}\n","import React, { useEffect, useState } from \"react\";\nimport classNames from \"classnames\";\nimport { useParams } from \"react-router-dom\";\n\nimport { useDebriefing } from \"../DebriefingContext\";\n\nimport SingleColumnLayout from \"../layouts/SingleColumnLayout\";\nimport Tooltip from \"./Tooltip\";\n\nimport styles from \"../Cond2Debriefing.module.css\";\n\n\nexport default function Review() {\n  const { getSlideData, enableNextSlide } = useDebriefing();\n  const { stepPath } = useParams();\n  const [sp, setSP] = useState(null);\n\n  const [toolTipText, setToolTipText] = useState(null)\n  const [myData, setMyData] = useState(null)\n\n  const toggleToolTipText = (text) => {\n    return toolTipText ? setToolTipText(null) : setToolTipText(text)\n  }\n\n  useEffect(() => {\n    // if (!myData) {\n      if(!sp || sp !== stepPath) {\n        setSP(stepPath)\n\n        setMyData(getSlideData(\"R\", stepPath))\n        enableNextSlide(\"R\", stepPath);\n    }\n  }, [stepPath, sp, myData, getSlideData, enableNextSlide]);\n\n  if (!myData) {\n    return <div>loading...</div>\n  }\n\n  return (\n    <SingleColumnLayout currStep=\"R\" currStepPath={stepPath}>\n      <div className={classNames(styles.slideshow, styles.card)}>\n        <div className={styles['card-body']}>\n          <p className={styles['hint-text']}>\n            {myData.of[0]} of {myData.of[1]}\n          </p>\n          {myData.paragraphs?.map((chunks, i) => (\n            <p key={i}>\n              {chunks.map((chunk, j) => (\n                <span key={j}>\n                  {chunk.hoverText ? (\n                    <Tooltip\n                      text={chunk.text}\n                      hoverText={chunk.hoverText}\n                      toggleToolTip={toggleToolTipText}\n                      setToolTip={setToolTipText}\n                    />\n                  ) : (\n                    <span>{chunk.text}</span>\n                  )}\n                </span>\n              ))}\n            </p>\n          ))}\n          {toolTipText && (\n            <p\n              style={{\n                backgroundColor: \"black\",\n                color: \"white\",\n              }}\n            >\n              {toolTipText}\n            </p>\n          )}\n        </div>\n      </div>\n    </SingleColumnLayout>\n  );\n}\n","export default function Tooltip({\n  text,\n  hoverText,\n  toggleToolTip,\n  setToolTip,\n}) {\n  return (\n    <span\n        onClick={() => toggleToolTip(hoverText)}\n        onMouseEnter={() => setToolTip(hoverText)}\n        onMouseLeave={() => setToolTip(null)}\n    >\n      <span\n        style={{\n          paddingLeft: \"0.25em\",\n          textDecoration: \"underline dotted green\",\n        }}\n      >\n        {text}\n      </span>\n      <span\n        className=\"material-icons-outlined\"\n        style={{\n          paddingRight: \"0.25em\",\n          fontSize: \"small\",\n          verticalAlign: \"top\"\n        }}\n      >\n        info\n      </span>\n    </span>\n  );\n}\n","import React from \"react\"\nimport { Button } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { MDBModal } from \"@meddbriefer/mdb-ui\";\n\nexport default function SaveModal({ show, dismiss }) {\n  let history = useHistory()\n  const submitHandler = (event) => {\n    event.preventDefault();\n    console.log(\"I'm done clicked\");\n    history.push(\"/\")\n  };\n\n  return (\n    <MDBModal\n      title=\"Are you finished with this debriefing?\"\n      show={show}\n      dismiss={dismiss}\n    >\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <p>\n              <span className=\"text-danger\">WARNING: </span>\n              <span>\n                Clicking \"I'm Done\" will not allow you to view the debriefing\n                any longer. Don't click on it unless you are truly done with\n                this debriefing.\n              </span>\n            </p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <Button color=\"danger\" size=\"lg\" onClick={submitHandler}>\n              I'm Done\n            </Button>\n            <Button color=\"primary\" size=\"lg\" onClick={dismiss}>\n              Cancel\n            </Button>\n          </div>\n        </div>\n      </div>\n    </MDBModal>\n  );\n}\n","import { summarizeAnalysis } from \"@meddbriefer/analysis\";\n\nimport { groupByKey } from \"@meddbriefer/scenario-data/utils\"\n\nfunction path2str(path) {\n  return path.map((ind) => String(ind + 1)).join(\".\");\n}\n\nfunction isLeafNode(node) {\n  return (\n    !node.subActions || !node.subActionsList || node.subActions.length === 0\n  );\n}\n\nfunction hasErrors(node, summaryObj) {\n  const nodeSummary = summaryObj[node.id];\n  return nodeSummary.status !== \"good\";\n}\n\nfunction createIESlides(feedback, summaryObj) {\n  const slides = [];\n  const top = feedback.IE.Action;\n\n  function traverseDepthFirst(currNode, currPath, currDepth) {\n    if (isLeafNode(currNode) || !hasErrors(currNode, summaryObj)) {\n      return;\n    }\n    slides.push({\n      id: currNode.id,\n      step: \"IE\",\n      label: currNode.label,\n      stepPath: path2str(currPath),\n      childIDs: currNode.subActions.map((sa) => sa.id),\n      depth: currDepth,\n    });\n    currNode.subActions.forEach((subAction, index) => {\n      const newPath = [...currPath, index];\n      traverseDepthFirst(subAction, newPath, currDepth + 1);\n    });\n  }\n\n  traverseDepthFirst(top, [0], 0);\n  return slides;\n}\n\nfunction getIENodeData(node, expandChildren) {\n  const {\n    id,\n    label = \"\",\n    type = \"UNKNOWN\",\n    // examine = false,\n    examineIfAbsent = false,\n    examineIfErrors = false,\n    // prompts = \"\",\n    promptsIfAbsent = \"\",\n    promptsIfErrors = \"\",\n    subActionsList,\n    ...rest\n  } = node;\n  const other = {\n    feedbackAbsent: (rest.feedbackAbsent || []).filter((e) => e !== \"\"),\n    feedbackErrors: (rest.feedbackErrors || []).filter((e) => e !== \"\"),\n    feedbackOutOfOrder: (rest.feedbackOutOfOrder || []).filter((e) => e !== \"\"),\n  };\n  let subActions\n  if (!expandChildren) {\n    subActions = []\n  }  else {\n    subActions = [\n      ...rest.subActions.map(sa => getIENodeData(sa, false))\n    ]\n  }\n  const nodeData = {\n    id,\n    label,\n    type,\n    // examine,\n    examineIfAbsent,\n    examineIfErrors,\n    // prompts,\n    promptsIfAbsent,\n    promptsIfErrors,\n    subActionsList,\n    subActions,\n    ...other\n  }\n  // console.log(\"BEFORE\", node) \n  // console.log(\"AFTER\", nodeData);\n  return nodeData\n}\n\nfunction createIESlidesData(feedback, summaryObj) {\n  const slideData = {};\n  const top = feedback.IE.Action;\n\n  function traverseDepthFirst(currNode, currPath, currDepth) {\n    if (isLeafNode(currNode) || !hasErrors(currNode, summaryObj)) {\n      return;\n    }\n    slideData[currNode.id] = getIENodeData(currNode, true);\n    currNode.subActions.forEach((subAction, index) => {\n      const newPath = [...currPath, index];\n      traverseDepthFirst(subAction, newPath, currDepth + 1);\n    });\n  }\n\n  traverseDepthFirst(top, [0], 0);\n  return slideData;\n}\n\nfunction buildBOutline(feedback, slides, slideData) {\n  const outline = {\n    heading: \"Expected completed actions:\",\n    children: [],\n  };\n  feedback.B.expectations.forEach((node, idx) => {\n    const item = {\n      ...slides.find(\n        (rec) => rec.step === \"B\" && rec.stepPath === `${idx + 1}`\n      ),\n    };\n    delete item.enabled;\n    delete item.childIDs;\n    item.children = [];\n    item.label = node.expectationText;\n    // console.log(item)\n    outline.children.push(item);\n  });\n  return outline;\n}\n\nfunction buildIEOutline(node, slides, slideData) {\n  const { id, step, stepPath, label, childIDs } = node;\n  const nodeData = { id, step, stepPath, label };\n  nodeData.children = childIDs\n    .filter((childID) => slides.find((rec) => rec.id === childID))\n    .map((childID) =>\n      buildIEOutline(\n        slides.find((rec) => rec.id === childID),\n        slides,\n        slideData\n      )\n    );\n  return nodeData;\n}\n\nfunction computeSlides(feedback, summaryObj) {\n  const obj = {\n    D: [{ id: \"define\", step: \"D\", stepPath: \"1\", childIDs: [] }],\n    E: [{ id: \"explain\", step: \"E\", stepPath: \"1\", childIDs: [] }],\n    B: feedback.B.expectations.map((e, idx) => ({\n      id: `B${idx + 1}`,\n      step: \"B\",\n      stepPath: `${idx + 1}`,\n      childIDs: [],\n    })),\n    IE: createIESlides(feedback, summaryObj),\n    R: feedback.R.slides.map((slide, idx) => ({\n      id: `R${idx + 1}`,\n      step: \"R\",\n      stepPath: `${idx + 1}`,\n      childIDs: [],\n    })),\n    F: [{ id: \"formalize\", step: \"F\", stepPath: \"1\", childIDs: [] }],\n  };\n  return [...obj.D, ...obj.E, ...obj.B, ...obj.R, ...obj.IE, ...obj.F];\n}\n\nfunction computeSlideData(feedback, summaryObj) {\n  const obj = {\n    //D\n    define: { ...feedback.D },\n    // E\n    explain: { ...feedback.E },\n    //F\n    formalize: { ...feedback.F },\n  };\n  let rSlidesData = {};\n  feedback.R.slides.forEach((slide, idx) => {\n    rSlidesData[`R${idx + 1}`] = {\n      ...slide,\n      of: [idx + 1, feedback.R.slides.length],\n    };\n  });\n  let bSlidesData = {};\n  feedback.B.expectations.forEach((exp, idx) => {\n    const id = `B${idx + 1}`;\n    bSlidesData[id] = { ...exp };\n  });\n  const ieSlideData = createIESlidesData(feedback, summaryObj);\n  return Object.assign({}, obj, rSlidesData, bSlidesData, ieSlideData);\n}\n\n\nexport function computeDataStructures(scenData, obsLogData, analysisData, debLogData, scenFeedBack) {\n  console.log(\"scenario\", scenData);\n  console.log(\"obsLog\", obsLogData);\n  console.log(\"analysis\", analysisData);\n  console.log(\"debLog\", debLogData);\n  console.log(\"feedback\", scenFeedBack);\n  const summary = summarizeAnalysis(analysisData, scenFeedBack.IE);\n  console.log(\"summary (raw)\", summary);\n\n\n  const flattenedSummary = Object.values(summary).flat();\n  const summaryObj = {};\n  flattenedSummary.forEach((rec) => {\n    summaryObj[rec.id] = { ...rec };\n  });\n  // console.log(\"flattenedSummary\", flattenedSummary);\n  console.log(\"summary (flattened)\", summaryObj);\n  // const fullStatus = Object.values(summaryObj).filter(rec => undefined === rec.type || rec.type !== \"header\")\n  // const status = groupByKey(fullStatus, \"status\")\n  // console.log(\"summary grouped by status\", status)\n  // const phaseOrderStatus = groupByKey(fullStatus, \"phaseOrderStatus\")\n  // console.log(\"summary grouped by phaseOrderStatus\", phaseOrderStatus)\n  \n  // const flattenedFeedback = flattenIEFeedback(scenFeedBack.IE.Action).flat().flat().flat().flat().flat().flat()\n  // console.log(\"flattenedFeedback\", flattenedFeedback);\n  const stepSlides = computeSlides(scenFeedBack, summaryObj);\n\n  let usrRatings = {}\n  if (debLogData.userRatings) {\n    usrRatings = {...debLogData.userRatings}\n  }\n\n  let pthData = {};\n  if (debLogData.pathData) {\n    pthData = { ...debLogData.pathData };\n  } else {\n    stepSlides.forEach((rec) => {\n      const metaData = {\n          id: rec.id,\n          enabled: false,\n          completed: false,\n          step: rec.step,\n          stepPath: rec.stepPath\n      }\n      let ieData = {}\n      if (rec.step === \"IE\") {\n        ieData = {\n          analyzed: false,\n          examined: false,\n          rated: false\n        }\n      }\n      pthData[`${rec.step}/${rec.stepPath}`] = {\n        ...metaData,\n        ...ieData\n      }\n    })\n  }\n  console.log(\"slides\", stepSlides);\n  // auto-enable first slide\n  pthData[\"D/1\"].enabled = true;\n  console.log(\"pathData\", pthData);\n\n  const sData = computeSlideData(scenFeedBack, summaryObj);\n  console.log(\"slideData\", sData);\n  // console.log(\"numSlides\",stepSlides.length,\"numKeys\",Object.keys(sData).length);\n  let idDat\n  if (debLogData.idData) {\n    idDat = {...debLogData.idData}\n  } else {\n    idDat = {}\n    stepSlides.filter(s => s.step === \"IE\").forEach(s => {\n      idDat[s.id] = { examine: \"\"}\n    })\n    idDat['formalize'] = {response: \"\"}\n  }\n  console.log(\"idData\", idDat)\n  const bOL = buildBOutline(scenFeedBack, stepSlides, sData);\n  console.log(\"bOutline\", bOL);\n  const ieOL = buildIEOutline(\n    stepSlides.find((rec) => rec.id === \"top\"),\n    stepSlides,\n    sData\n  );\n  ieOL.heading = stepSlides.find((rec) => rec.id === \"top\").label;\n  console.log(\"ieOutline\", ieOL);\n\n  return { stepSlides, sData, usrRatings, pthData, idDat, summaryObj, bOL, ieOL };\n}\n","export * from \"./components\"\n// {AnalyzeDebriefing, Card, CardText, ExamineForm,  Slide, SlideShow, Tables, Tooltip, TwoDivOutline, UnauthedLayout}\n// MainOutline, MDBNavBar,\nexport * from \"./routes\"\nexport {computeDebriefingTitle, computeReviewTitle} from \"./utils\"","import { useEffect, useState } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport { useFirebase } from \"@meddbriefer/mdb-firebase\"\nimport {\n  getCond2DebriefingLog,\n  getAnalysisLog,\n  getLog,\n  getPublishedScenarioObjectByID,\n  saveDocument\n} from \"@meddbriefer/scenario-data/index\";\nimport { getScenarioFeedback } from \"@meddbriefer/feedback-data\";\n\nimport { computeDataStructures } from '../dataStructureUtils'\nimport { DebriefingContext } from '../components/DebriefingContext'\n\nimport Cond2Debriefing from '../components/Cond2Debriefing'\n\n// some functions passed down through context which don't make use of state\nfunction computeExpandedSlides(stepPath) {\n  const expanded = stepPath\n    .split(\".\")\n    .map((item, index, arr) => arr.slice(0, index + 1).join(\".\"));\n  return expanded;\n}\n\nfunction stepPathIsExpanded (stepPath, expandedSlides) {\n  return expandedSlides.includes(stepPath)\n}\n\n\nexport default function DebLog({computeTitle, saveButtonLabel, saveModal, next=\"/\"}) {\n  const {db} = useFirebase()\n  const history = useHistory()\n  const { debriefingID } = useParams()\n  const [debID, setDebID] = useState(null)\n  const [ debLog, setDebLog ] = useState(null)\n  const [obsLog, setObsLog] = useState(null)\n  const [ scenario, setScenario] = useState(null)\n  const [slides, setSlides] = useState(null)\n  const [slideData, setSlideData] = useState(null)\n  const [pathData, setPathData] = useState(null)\n  const [idData, setIdData] = useState(null)\n  const [userRatings, setUserRatings] = useState(null)\n  const [ieSummary, setIESummary] = useState(null)\n  const [bOutline, setBOutline] = useState(null)\n  const [ieOutline, setIEOutline] = useState(null)\n  const [loaded, setLoaded] = useState(false)\n  const [allSlidesCompleted, setAllSlidesCompleted] = useState(false)\n  const [done, setDone] = useState(false)\n  const [nextURL, setNextURL] = useState(null)\n  const [startTime, setStartTime] = useState(null)\n\n  const saveDebriefing = () => {\n    const newData = Object.assign({}, debLog, {\n      userRatings: userRatings,\n      idData: idData,\n      pathData: pathData,\n    });\n    console.log(\"newData\", newData);\n    return saveDocument(db, \"cond2-debriefings\", newData);\n  }\n\n  const getIdData = (id) => idData[id]\n\n  const updateIdData = (id, newValue) => {\n    const newData = {...idData[id], ...newValue}\n    setIdData(prevState => ({\n      ...prevState,\n      [id]: newData\n    }))\n  }\n\n  // some useful accessor methods\n  const getSlideFromStepStepPath = (step, stepPath) => {\n    return slides.find(e => e.step === step && e.stepPath === stepPath)\n  }\n  const getSlideIndexForStepStepPath = (step, stepPath) => {\n    return slides.findIndex((e) => e.step === step && e.stepPath === stepPath);\n  }\n\n  const getSlideData = (step, stepPath) => {\n    const slide = getSlideFromStepStepPath(step, stepPath)\n    return slideData[slide.id]\n  }\n\n  const getUserRating = (id) => userRatings[id]\n  \n  const setUserRating = (id, value) => {\n    setUserRatings(prevValue => ({\n      ...prevValue,\n      [id]: value\n    }))\n  }\n\n  const stepStepPathToPath = (step, stepPath) => `${step}/${stepPath}`\n\n  const getPathData = (step, stepPath) => {\n    const path = stepStepPathToPath(step, stepPath)\n    const data = {...pathData[path]}\n    // console.log(`data for ${path}`, data)\n    return data\n  }\n\n  const updatePathData = (step, stepPath, newData) => {\n    const path = stepStepPathToPath(step, stepPath)\n    const updatedPathData = {...getPathData(step, stepPath), ...newData}\n    setPathData(prevState => ({\n      ...prevState,\n      [path]: updatedPathData\n    }))\n  }\n\n  const enableStepPath = (step, stepPath) => updatePathData(step, stepPath, { enabled: true })\n    \n  const enableNextSlide = (currStep, currStepPath) => {\n    console.log(`enableNextSlide${currStep}, ${currStepPath}`)\n    // probably should a separate markAsCompleted(currStep, currStepPath), but I\n    // don't feel like doing this everywhere and I believe these would always be called\n    // together\n    if (!getPathData(currStep, currStepPath).completed) {\n      updatePathData(currStep, currStepPath, { completed: true });\n    }\n    const currSlideIdx = getSlideIndexForStepStepPath(currStep, currStepPath)\n    if (currSlideIdx+1 === slides.length) {\n      console.log(\"no next slide to enable. skipping enableNextSlide()\")\n    } else {\n      const nextSlide = slides[currSlideIdx+1]\n      if (!stepStepPathIsEnabled(nextSlide.step, nextSlide.stepPath)) {\n          enableStepPath(nextSlide.step, nextSlide.stepPath);\n      }\n    }\n  }\n  \n  const havePrevSlide = (currStep, currStepPath) => {\n    return getSlideIndexForStepStepPath(currStep, currStepPath) !== 0\n  }\n\n  const prevSlide = (currStep, currStepPath) => {\n    const idx = getSlideIndexForStepStepPath(currStep, currStepPath);\n    const prev = slides[idx -1];\n    goStepStepPath(prev.step, prev.stepPath);\n  }\n  \n  const haveNextSlide = (currStep, currStepPath) => {\n    let haveNext\n    const currSlideIdx = getSlideIndexForStepStepPath(currStep, currStepPath);\n    \n    if (currSlideIdx + 1 === slides.length) {\n      haveNext = false;\n    } else {\n      const nextSlide = slides[currSlideIdx+1]\n      haveNext = stepStepPathIsEnabled(nextSlide.step, nextSlide.stepPath)\n    }\n    return haveNext\n  };\n\n  const nextSlide = (currStep, currStepPath) => {\n    const idx = getSlideIndexForStepStepPath(currStep, currStepPath)\n    const next = slides[idx+1]\n    goStepStepPath(next.step, next.stepPath)\n  }\n  const goStepStepPath = (step, stepPath) => { \n    const newURL = `/debriefing2/${debriefingID}/${step}/${stepPath}`\n    console.log(\"redirecting to\", newURL)\n    history.push(newURL)\n  }\n\n  const stepIsEnabled = (step) => {\n    const enabledStepPaths = Object.values(pathData).filter(e => e.step === step && e.enabled)\n    const someEnabled = enabledStepPaths.length > 0\n    return someEnabled\n  }\n\n  const stepStepPathIsEnabled = (step, stepPath) => {\n    const path = stepStepPathToPath(step, stepPath)\n    return pathData[path].enabled\n  };\n\n\n  const fetchData = async () => {\n    const debLogData = await getCond2DebriefingLog(db, debriefingID);\n    const analysisData = await getAnalysisLog(\n      db,\n      debLogData.analysisLogID\n    );\n    const obsLogData = await getLog(db, analysisData.observerLogID);\n    const scenData = await getPublishedScenarioObjectByID(\n      db,\n      obsLogData.scenarioID\n    );\n    const scenFeedBack = getScenarioFeedback(scenData.name);\n    const { stepSlides, sData, usrRatings, pthData, idDat, summaryObj, bOL, ieOL } =\n      computeDataStructures(\n        scenData,\n        obsLogData,\n        analysisData,\n        debLogData,\n        scenFeedBack\n      );\n    setScenario(scenData);\n    setDebLog(debLogData);\n    setObsLog(obsLogData)\n    // state computed from logs. hopefully this will all be in the deblog in the\n    // future and computeDataStructures() will be called when creating the\n    // initial debLog, and these can merely be deconstructed from it\n    setSlides(stepSlides);\n    setSlideData(sData);\n    setUserRatings(usrRatings)\n    setPathData(pthData);\n    setIdData(idDat);\n    setIESummary(summaryObj);\n    setBOutline(bOL);\n    setIEOutline(ieOL);\n    setLoaded(true);\n    setAllSlidesCompleted(idDat.formalize.response !== \"\")\n    setDone(false)\n    setNextURL(next)\n    setStartTime(Date.now())\n  };\n\n  useEffect(\n    () => {\n\n      if (!debID || debID !== debriefingID) {\n        setDebID(debriefingID)\n        if (!loaded) {\n        fetchData()\n          .then(() => console.log(\"data fetched\"))\n          .catch(error => console.error(error))\n        }\n      }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []\n  )\n  \n  if (!loaded) {\n    return (<h3>Loading</h3>)\n  }\n\n  return (\n    <DebriefingContext.Provider\n      value={{\n        debriefingID,\n        debLog,\n        obsLog,\n        scenario,\n        getSlideData,\n        getPathData,\n        updatePathData,\n        getIdData,\n        updateIdData,\n        stepStepPathToPath,\n        havePrevSlide,\n        haveNextSlide,\n        prevSlide,\n        nextSlide,\n        enableNextSlide,\n        enableStepPath,\n        stepIsEnabled,\n        stepStepPathIsEnabled,\n        goStepStepPath,\n        getUserRating,\n        setUserRating,\n        ieSummary,\n        bOutline,\n        ieOutline,\n        computeExpandedSlides,\n        stepPathIsExpanded,\n        allSlidesCompleted,\n        setAllSlidesCompleted,\n        done,\n        setDone,\n        saveDebriefing,\n        nextURL,\n        startTime\n      }}\n    >\n      <Cond2Debriefing \n        debriefingID={debriefingID}\n        computeTitle={computeTitle}\n        saveButtonLabel={saveButtonLabel} \n        saveModal={saveModal} \n      />\n    </DebriefingContext.Provider>\n  );\n\n}\n","export {default as DebLog} from \"./DebLog\"","// import { useEffect } from \"react\"\n\n// unicode char for ellipsis (can't embed html entity directly in JSX)\n// const ELLIPSIS = \"\\u2026\"\n\nexport const formatAsMinSecs = (seconds) => {\n    return new Date(seconds * 1000).toISOString().substr(14, 5)\n}\n\nexport function capitalizeFirstLetter(str) {\n    return `${str[0].toUpperCase()}${str.slice(1)}`\n}\nexport function lowerCaseFirstLetter(str) {\n  return `${str[0].toLowerCase()}${str.slice(1)}`;\n}\n\n// export function ellipsis(text, maxLength) {\n//   // if (text.length < maxLength) {\n//     return text;\n//   // } else {\n//     // return `${text.slice(0, (maxLength-3))} ${ELLIPSIS}`;\n//   // }\n// }\n\nexport const getStatus = (ieSummary, id) => {\n    const sts = ieSummary[id].status;\n    // console.log(`status for ${id}: ${sts}`)\n    return sts;\n  };\n  \nexport const isGood = (ieSummary, id) => \"good\" === getStatus(ieSummary, id);\nexport const isAbsent = (ieSummary, id) => \"absent\" === getStatus(ieSummary, id);\nexport const hasError = (ieSummary, id) =>\n    [\"error\", \"errors\", \"misorderedError\"].includes(getStatus(ieSummary, id));\nexport const isOutOfOrder = (ieSummary, id) =>\n    [\"misordered\", \"misorderedError\"].includes(getStatus(ieSummary, id));\n\n\nexport const getRequiredSubActions = (slide) =>\n    slide.subActions.filter((a) =>\n      [\"header\", \"required\"].includes(a.type.toLowerCase())\n    );\n\nexport const computeReviewTitle = (obsLog, scenario) => {\n  return `${scenario.name} / ${obsLog.userName} / ${obsLog.label}`\n}\n\nexport const computeDebriefingTitle = (obsLog, scenario) => {\n  return `${scenario.name}`;\n};\n","import React from \"react\"\nimport { Table, Button } from \"reactstrap\";\n\n\nimport AnalysesTableHeader from \"./AnalysisTableHeader\";\n\nimport { stdDateTimeFormatToCustom } from \"../utils\";\n\nexport default function AnalysesTable({ analyses, onViewAnalysis, onAnalyze }) {\n  return (\n    <>\n      {/* <div style={{ overflowY: \"auto\", maxHeight: \"500px\" }}> */}\n        <Table>\n          <AnalysesTableHeader />\n          <tbody className=\"scroll\">\n            {analyses.length === 0 ? (\n              <tr>\n                <td colSpan={5}>There aren't any existing analyses</td>\n              </tr>\n            ) : (\n              analyses.map((analysis) => (\n                <tr key={analysis.id}>\n                  <td>{analysis.id}</td>\n                  <td>{analysis.analyzer}</td>\n                  <td>{stdDateTimeFormatToCustom(analysis.timestamp)}</td>\n                  <td>\n                    <Button\n                      size=\"sm\"\n                      color=\"primary\"\n                      onClick={() => onViewAnalysis(analysis.id)}\n                    >\n                      View\n                    </Button>\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </Table>\n      {/* </div> */}\n      <Button size=\"sm\" color=\"primary\" onClick={() => onAnalyze()}>\n        Create New Analysis\n      </Button>\n    </>\n  );\n}\n","import { Breadcrumb, BreadcrumbItem, Button, Table} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nimport { MDBNavBar } from \"@meddbriefer/mdb-ui\";\n\nimport ObserverLogTableHeader from \"./ObserverLogTableHeader\";\nimport AnalysesTableHeader from \"./AnalysisTableHeader\";\nimport DebriefingsTable from \"./DebriefingsTable\";\n\nimport { stdDateTimeFormatToCustom } from \"../utils\";\n\nexport default function AnalysisDetails({\n  scenario,\n  log,\n  analysis,\n  cond1Comments,\n  cond2Debriefings,\n  onCond1StartReview,\n  onCond1ContinueReview,\n  onCond2StartReview,\n  onCond2ContinueReview,\n}) {\n\n  return (\n    <>\n      <MDBNavBar\n        leftNav={\n          <div>\n            <Breadcrumb>\n              <BreadcrumbItem>\n                <Link to=\"/\">Observer Logs</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem>\n                <Link to={`/logs/${analysis.observerLogID}`}>Details</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem active>Analysis</BreadcrumbItem>\n            </Breadcrumb>\n          </div>\n        }\n      />\n\n      <br />\n\n      <h3>Observer Log</h3>\n      <Table borderless size=\"sm\">\n        <ObserverLogTableHeader />\n        <tbody>\n          <tr>\n            <td>{log.scenarioName}</td>\n            <td>{scenario.version}</td>\n            <td>{log.userName}</td>\n            <td>{log.label}</td>\n            <td>{stdDateTimeFormatToCustom(log.timestamp)}</td>\n            <td>\n              <Button size=\"sm\" color=\"danger\">\n                Delete\n              </Button>\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n\n      <br/>\n\n      <h3>Analysis</h3>\n      <Table striped={true} borderless size=\"sm\">\n        <AnalysesTableHeader />\n        <tbody>\n          <tr>\n            <td>{analysis.id}</td>\n            <td>{analysis.analyzer}</td>\n            <td>{stdDateTimeFormatToCustom(analysis.timestamp)}</td>\n            <td>\n              <Button size=\"sm\" color=\"danger\">\n                Delete\n              </Button>\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n\n      \n      <br />\n\n      <DebriefingsTable\n        analysis={analysis}\n        heading=\"Condition 1 Debriefings/Comments\"\n        debriefings={cond1Comments}\n        onStartReview={onCond1StartReview}\n        onContinueReview={onCond1ContinueReview}\n      />\n\n      <br />\n      <br />\n      <br />\n\n      <DebriefingsTable\n        analysis={analysis}\n        heading=\"Condition 2 Debriefings/Comments\"\n        debriefings={cond2Debriefings}\n        onStartReview={onCond2StartReview}\n        onContinueReview={onCond2ContinueReview}\n      />\n    </>\n  );\n}\n","export default function AnalysesTableHeader() {\n    return (\n      <>\n        <colgroup>\n            <col style={{width: \"20%\"}}/>\n            <col style={{width: \"10%\"}}/>\n            <col style={{width: \"20%\"}}/>\n            <col style={{width: \"50%\"}}/>\n        </colgroup>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Analyzer</th>\n            <th>Timestamp</th>\n            <th></th>\n          </tr>\n        </thead>\n      </>\n    );\n}","import React from \"react\";\nimport { Table, Button } from \"reactstrap\";\n\nimport { stdDateTimeFormatToCustom } from \"../utils\";\n\nexport default function DebriefingsTable({\n  analysis,\n  heading,\n  debriefings,\n  onStartReview,\n  onContinueReview,\n}) {\n  return (\n    <>\n      <h3>{heading}</h3>\n      <div style={{ overflowY: \"auto\", maxHeight: \"200px\" }}>\n        <Table striped={true} borderless size=\"sm\" hover>\n          <colgroup>\n            <col style={{ width: \"20%\" }} />\n            <col style={{ width: \"10%\" }} />\n            <col style={{ width: \"20%\" }} />\n            <col style={{ width: \"50%\" }} />\n          </colgroup>\n          <thead>\n            <tr>\n              <th>Debriefing ID</th>\n              <th>Reviewer</th>\n              <th>Timestamp</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody className=\"scroll\">\n            {debriefings.length === 0 ? (\n              <tr>\n                <td colSpan=\"4\">\n                  Currently, there aren't any {heading.toLowerCase()}\n                </td>\n              </tr>\n            ) : (\n              <>\n                {debriefings.map((debrief) => (\n                  <tr key={debrief.id}>\n                    <td>{debrief.id}</td>\n                    <td>{debrief.reviewer}</td>\n                    <td>{stdDateTimeFormatToCustom(debrief.timestamp)}</td>\n                    <td>\n                      <Button\n                        size=\"sm\"\n                        color=\"primary\"\n                        disabled={!onContinueReview}\n                        onClick={() => onContinueReview(debrief.id)}\n                      >\n                        Continue Review\n                      </Button>\n                      <Button size=\"sm\" color=\"danger\">\n                        Delete\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n              </>\n            )}\n          </tbody>\n        </Table>\n      </div>\n      <Button\n        size=\"sm\"\n        color=\"primary\"\n        disabled={!onContinueReview}\n        onClick={() => onStartReview(analysis)}\n      >\n        Create New Review\n      </Button>\n    </>\n  );\n}\n","import React from \"react\"\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem, Button, Table } from \"reactstrap\";\n\nimport { MDBNavBar } from \"@meddbriefer/mdb-ui\";\n\nimport ObserverLogTableHeader from \"./ObserverLogTableHeader\";\nimport AnalysesTable from \"./AnalysesTable\";\n\nimport { stdDateTimeFormatToCustom } from \"../utils\";\n\n\nexport default function ObserverLogDetails({\n  log,\n  scenario,\n  analyses,\n  onViewAnalysis,\n  onAnalyze,\n}) {\n  return (\n    <>\n      <MDBNavBar\n        leftNav={\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/\">Observer Logs</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Details</BreadcrumbItem>\n          </Breadcrumb>\n        }\n      />\n\n      <h3>Observer Log</h3>\n      <Table borderless size=\"sm\">\n        <ObserverLogTableHeader />\n        <tbody>\n          <tr>\n            <td>{log.scenarioName}</td>\n            <td>{scenario.version}</td>\n            <td>{log.userName}</td>\n            <td>{log.label}</td>\n            <td>{stdDateTimeFormatToCustom(log.timestamp)}</td>\n            <td>\n              <Button size=\"sm\" color=\"danger\">\n                Delete\n              </Button>\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n\n      <br />\n\n      <h3>Analyses</h3>\n      <AnalysesTable\n        analyses={analyses}\n        onViewAnalysis={onViewAnalysis}\n        onAnalyze={onAnalyze}\n      />\n    </>\n  );\n}\n","import React from \"react\";\n// import { Link, use } from \"react-router-dom\"\nimport {  Breadcrumb, BreadcrumbItem, Button } from \"reactstrap\";\n// Table,\n// import ObserverLogTableHeader from \"./ObserverLogTableHeader\";\n// import strftime from \"strftime\";\n\nimport { HotTable, HotColumn } from \"@handsontable/react\";\nimport { registerAllModules } from \"handsontable/registry\";\nimport \"handsontable/dist/handsontable.full.min.css\";\n\nimport { MDBNavBar} from \"@meddbriefer/mdb-ui\"\n\nimport {stdDateTimeFormatToCustom} from \"../utils\"\n\n\nregisterAllModules()\n\n\n// function CustomDateRenderer({value}) {\n//   return strftime(\"%m/%d/%Y %I:%M:%S %p\", new Date(value))\n// }\n\nfunction EmailFieldRenderer({value}) {\n  return value.includes('@') ? value.split('@')[0] : value\n}\n\nfunction ObsLogLinkRenderer({ value, clickHandler }) {\n  return (\n    <Button size=\"sm\" color=\"primary\" onClick={() => clickHandler(value)}>\n      View\n    </Button>\n  );\n}\nexport default function ObserverLogTable({ logs, viewButtonHandler }) {\n\n  // const data = logs.map(rec => ({\n  //   ...rec,\n  //   ...{timestamp: Date.parse(rec.timestamp)}\n  // }))\n  const data = logs.map((rec) => ({\n    ...rec,\n    ...{timestamp: stdDateTimeFormatToCustom(rec.timestamp)}\n  }));\n\n  console.log(data)\n  return (\n    <>\n      <MDBNavBar\n        leftNav={\n          <Breadcrumb>\n            <BreadcrumbItem active>\n              Observer Logs\n            </BreadcrumbItem>\n          </Breadcrumb>\n        }\n      />\n      <HotTable\n        data={data}\n        rowHeaders={false}\n        height=\"calc(100% - 60px)\"\n        width=\"100%\"\n        autoRowSize={false}\n        autoColumnSize={false}\n        hiddenColumns={[6]}\n        filters={true}\n        dropdownMenu={true}\n        manualColumnResize={true}\n        columnSorting={{\n          sortEmptyCells: true,\n          indicator: true,\n          headerAction: true,\n        }}\n        licenseKey=\"non-commercial-and-evaluation\"\n      >\n        <HotColumn\n          data=\"scenario\"\n          title=\"Scenario\"\n          readOnly={true}\n          width={120}\n        />\n        <HotColumn\n          data=\"publishedVersion\"\n          title=\"Version\"\n          readOnly={true}\n          width={170}\n        />\n        <HotColumn data=\"userName\" title=\"User\" readOnly={true} width={100}>\n          <EmailFieldRenderer hot-renderer />\n        </HotColumn>\n        <HotColumn\n          data=\"label\"\n          title=\"Observer/Label\"\n          readOnly={true}\n          width={310}\n        >\n          <EmailFieldRenderer hot-renderer />\n        </HotColumn>\n        <HotColumn\n          data=\"classCode\"\n          title=\"Class Code\"\n          readOnly={true}\n          width={120}\n        />\n        <HotColumn\n          data=\"condition\"\n          title=\"Condition\"\n          readOnly={true}\n          width={120}\n        />\n\n        <HotColumn\n          data=\"timestamp\"\n          title=\"Timestamp\"\n          readOnly={true}\n          width={180}\n          columnSorting={{\n            compareFunctionFactory: (sortOrder, columnMeta) => {\n              return function comparator(value, nextValue) {\n                return Date.parse(value) - Date.parse(nextValue);\n              };\n            },\n          }}\n        />\n        <HotColumn\n          data=\"id\"\n          title=\"\"\n          readOnly={true}\n          width={60}\n          dropdownMenu={false}\n          filters={false}\n          columnSorting={{\n            indicator: true,\n            headerAction: true,\n            // compareFunctionFactory: (sortOrder, columnMeta) => {\n            //   return function comparator(value, nextValue) {\n            //     return 0;\n            //   };\n            // },\n          }}\n        >\n          <ObsLogLinkRenderer hot-renderer clickHandler={viewButtonHandler} />\n        </HotColumn>\n      </HotTable>\n    </>\n  );\n  // return (\n  //   <div style={{ overflowY: \"auto\", maxHeight: \"700px\" }}>\n  //   <Table striped={true} borderless size=\"sm\" hover>\n  //     <ObserverLogTableHeader />\n  //     <tbody className=\"scroll\">\n  //       {logs.map((log) => (\n  //         <tr key={log.id}>\n  //           <td>{log.scenario}</td>\n  //           <td>{log.publishedVersion}</td>\n  //           <td>{log.label}</td>\n  //           <td>{log.userName}</td>\n  //           <td>{log.timestamp}</td>\n  //           <td>\n  //             <Button\n  //               size=\"sm\"\n  //               color=\"success\"\n  //               onClick={() => viewButtonHandler(log.id)}\n  //             >\n  //               View\n  //             </Button>\n  //           </td>\n  //         </tr>\n  //       ))}\n  //     </tbody>\n  //   </Table></div>\n  // );\n}\n","export default function ObserverLogTableHeader() {\n    return (\n      <thead>\n        <tr>\n          <th>Scenario</th>\n          <th>Published Version</th>\n          <th>Username</th>\n          <th>Observer/Label</th>\n          <th>Timestamp</th>\n        </tr>\n      </thead>\n    );\n}","export {default as ObserverLogDetails} from \"./ObserverLogDetails\"\nexport {default as ObserverLogTable} from \"./ObserverLogTable\"\nexport {default as ObserverLogTableHeader} from \"./ObserverLogTableHeader\"","import \"bootstrap/dist/css/bootstrap.min.css\"\n\nexport {ObserverLogDetails, ObserverLogTable, ObserverLogTableHeader} from \"./components\"\nexport {LogChooser, ObserverLog, ObserverLogList} from \"./routes\"\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { useFirebase } from \"@meddbriefer/mdb-firebase\";\n\nimport {\n  getAnalysisLog,\n  getAnalysisCond1Comments,\n  getAnalysisCond2Debriefings,\n  getObserverLog,\n  getPublishedScenarioObjectByID\n} from \"@meddbriefer/scenario-data\";\n\nimport AnalysisDetails from \"../components/AnalysisDetails\";\n\nexport default function Analysis({\n  onCond1StartReview = null,\n  onCond1ContinueReview = null,\n  onCond2StartReview = null,\n  onCond2ContinueReview = null,\n}) {\n  const { db } = useFirebase();\n  const { logID, analysisID } = useParams();\n  const [log, setLog] = useState(null)\n  const [analysis, setAnalysis] = useState(null);\n  const [cond1DebLogs, setCond1DebLogs] = useState(null);\n  const [cond2DebLogs, setCond2DebLogs] = useState(null);\n  const [scenario, setScenario] = useState(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const aData = await getAnalysisLog(db, analysisID)\n      setAnalysis(aData)\n      const obsData = await getObserverLog(db, logID)\n      setLog(obsData)\n      const comments = await getAnalysisCond1Comments(db, analysisID)\n      setCond1DebLogs(comments)\n      const debriefings = await getAnalysisCond2Debriefings(db, analysisID)\n      setCond2DebLogs(debriefings)\n      const scenData = await getPublishedScenarioObjectByID(db, obsData.scenarioID)\n      setScenario(scenData)\n      return true\n      // .then((aData) => setAnalysis(aData))\n        // .then(() => getObserverLog(db, logID))\n        // .then((obsData) => setLog(obsData))\n        // .then(() => getAnalysisCond1Comments(db, analysisID))\n        // .then((comments) => setCond1DebLogs(comments))\n        // .then(() => getAnalysisCond2Debriefings(db, analysisID))\n        // .then((debriefings) => setCond2DebLogs(debriefings))\n    }\n    if (db && !analysis) {\n      fetchData()\n        .then(() => true)\n        .catch((error) => console.error(error));\n    }\n  }, [db, logID, analysisID, analysis]);\n\n  if (!(cond1DebLogs && cond2DebLogs && scenario)) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <AnalysisDetails\n      scenario={scenario}\n      log={log}\n      analysis={analysis}\n      cond1Comments={cond1DebLogs}\n      cond2Debriefings={cond2DebLogs}\n      onCond1StartReview={onCond1StartReview}\n      onCond1ContinueReview={onCond1ContinueReview}\n      onCond2StartReview={onCond2StartReview}\n      onCond2ContinueReview={onCond2ContinueReview}\n    />\n  );\n}\n","import { useContext } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport {\n  // PrivateRoute,\n  AuthContext,\n} from \"@meddbriefer/mdb-auth\";\n\nimport { useFirebase } from \"@meddbriefer/mdb-firebase\";\nimport { createCond1Comments, createCond2Debriefing } from \"@meddbriefer/scenario-data\";\n\nimport ObserverLogList from \"./ObserverLogList\";\nimport ObserverLog from \"./ObserverLog\";\nimport Analysis from \"./Analysis\";\n\nexport default function LogChooser({ redirectToCond1Debriefing, redirectToCond2Debriefing }) {\n  const { db } = useFirebase();\n  const { userName } = useContext(AuthContext);\n\n  const continueCond1ReviewHandler = (debriefingID) => redirectToCond1Debriefing(debriefingID);\n  \n  const startCond1ReviewHandler = async (analysis) => {\n      console.log(\"I will create a new review doc and redirect to it\", analysis);\n      const debriefID = await createCond1Comments(db, analysis, userName);\n      redirectToCond1Debriefing(debriefID);\n  };\n\n  const continueCond2ReviewHandler = (debriefID) => redirectToCond2Debriefing(debriefID)\n\n  const startCond2ReviewHandler = async (analysis) => {\n    console.log(\"I will create a new review doc and redirect to it\", analysis);\n    const debriefID = await createCond2Debriefing(db, analysis, userName);\n    redirectToCond2Debriefing(debriefID)\n  }\n\n  return (\n    <Switch>\n      <Route path=\"/logs/:logID/analysis/:analysisID\">\n        <Analysis\n          onCond1StartReview={!redirectToCond1Debriefing ? null : startCond1ReviewHandler}\n          onCond1ContinueReview={!redirectToCond1Debriefing ? null : continueCond1ReviewHandler}\n          onCond2StartReview={!redirectToCond2Debriefing ? null : startCond2ReviewHandler}\n          onCond2ContinueReview={!redirectToCond2Debriefing ? null : continueCond2ReviewHandler}\n        />\n      </Route>\n      <Route path=\"/logs/:logID\" component={ObserverLog} />\n      <Route exact path=\"/\" component={ObserverLogList} />\n    </Switch>\n  );\n}\n","import { useContext, useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport { useFirebase } from \"@meddbriefer/mdb-firebase\";\nimport { AuthContext } from \"@meddbriefer/mdb-auth\";\nimport {\n  getLog,\n  getPublishedScenarioObjectByID,\n  getObserverLogAnalyses,\n} from \"@meddbriefer/scenario-data\";\nimport {\n  analyzeEvents,\n  saveAnalysisLog,\n} from \"@meddbriefer/analysis\";\n\nimport ObserverLogDetails from \"../components/ObserverLogDetails\";\n\nexport default function ObserverLog() {\n  const { db } = useFirebase();\n  const history = useHistory();\n  const { logID } = useParams();\n  const { userName } = useContext(AuthContext);\n  const [obsLog, setObsLog] = useState(null);\n  const [scenario, setScenario] = useState(null);\n  const [analysisLogs, setAnalysisLogs] = useState(null);\n  // const [debriefings, setDebriefings] = useState(null)\n  // const [doneLoading, setDoneLoading] = useState(false)\n  const [updateAnalysisLogs, setUpdateAnalysisLogs] = useState(true);\n\n  const analyzeLogHandler = async () => {\n    // console.log(\"I will analyze now\")\n    const analysis = analyzeEvents(scenario, obsLog);\n    // console.log(userName, analysis)\n    await saveAnalysisLog(db, obsLog, analysis, userName);\n    setUpdateAnalysisLogs(true);\n  };\n\n  const viewAnalysisHandler = (analysisID) => {\n    history.push(`/logs/${logID}/analysis/${analysisID}`);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const obsLogData = await getLog(db, logID)\n      if (obsLogData) {\n        setObsLog(obsLogData);\n        //console.log(\"obsLog\", obsLogData)\n        const scenData = await getPublishedScenarioObjectByID(db, obsLogData.scenarioID)\n        if (scenData) {\n          setScenario(scenData)\n        }\n      }\n    }\n    if (db && logID && !obsLog) {\n      fetchData()\n    }\n  }, [db, logID, obsLog]);\n\n  useEffect(() => {\n    if (obsLog && scenario && updateAnalysisLogs) {\n      setUpdateAnalysisLogs(false);\n      getObserverLogAnalyses(db, logID)\n        .then((records) => setAnalysisLogs(records))\n        .catch((error) => console.error(error));\n    }\n  }, [db, logID, obsLog, scenario, updateAnalysisLogs]);\n\n  if (!analysisLogs) {\n    return <div>Loading..</div>;\n  }\n  return (\n    <ObserverLogDetails\n      log={obsLog}\n      scenario={scenario}\n      analyses={analysisLogs}\n      onAnalyze={analyzeLogHandler}\n      onViewAnalysis={viewAnalysisHandler}\n    />\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useFirebase } from \"@meddbriefer/mdb-firebase\";\nimport { getObserverLogList } from \"@meddbriefer/scenario-data\";\n\nimport ObserverLogTable from \"../components/ObserverLogTable\";\n\nexport default function ObserverLogList() {\n  const { db } = useFirebase();\n  const history = useHistory();\n  const [obsLogs, setObsLogs] = useState(null);\n\n  const viewObsLogHandler = (obsLogID) => {\n    history.push(`/logs/${obsLogID}`);\n  };\n\n  useEffect(() => {\n    getObserverLogList(db)\n      .then((logs) => setObsLogs(logs))\n      .catch((error) => console.error(error));\n  }, [db]);\n\n  if (!obsLogs) {\n    return <div>Loading Logs</div>;\n  }\n  return (\n      <ObserverLogTable logs={obsLogs} viewButtonHandler={viewObsLogHandler} />\n  );\n}\n","export {default as LogChooser} from \"./LogChooser\"\nexport {default as ObserverLog} from \"./ObserverLog\"\nexport {default as ObserverLogList} from \"./ObserverLogList\"\nexport {default as Analysis} from \"./Analysis\"\n","import strftime from \"strftime\"\n\nexport function stdDateTimeFormatToCustom(stdValue) {\n    return strftime(\"%m/%d/%Y %I:%M:%S %p\", new Date(Date.parse(stdValue)));\n}","// type Phase_D = {\n//     step:  string;\n//     title: string;\n//     text:  string[];\n// };\n\n// type Phase_E = {\n//     step:        string;\n//     title:       string;\n//     description: string;\n//     text:        string[];\n// };\n\n// type Phase_B = {\n//     step: string;\n//     expectations:\n//         {\n//             id:      string;\n//             heading: string;\n//             benchmarks:\n//                 {\n//                     id:   string;\n//                     text: string;\n//                     subBenchmarks: \n//                         {\n//                             id:              string;\n//                             phase:           object;\n//                             checklistItems:  string[];\n//                             feedback:        string;\n//                             type:            string;\n//                         }[];\n//                 }[];\n//         }[];\n// };\n\n// type Phase_R = {\n//     step:    string;\n//     slides:  string[] | { text: { __html: string; linkHoverText: object; }}[];\n// };\n\n// type Phase_F = {\n//     step:      string;\n//     title:     string;\n//     heading:   string;\n//     questions: string;\n// };\n\n// type Step_Data = [Phase_D, Phase_E, Phase_B, Phase_R, Phase_F];\n\n// export const STEP_DATA: Step_Data = [\n\n    import {link, para, text} from \"./utils\"\n\n    export const B4CA_PhaseDEBRF = [\n        {\n            step: \"D\",\n            title: \"Define Rules:\",\n            text: [\"The purpose of this debriefing is to reflect on the scenario you have just completed in order to help you improve your skills as a paramedic.  It is not meant to assess your overall abilities as a paramedic.\", \"This debriefing will summarize the learning objectives of this scenario and the performance benchmarks (standards) for achieving each objective.  The system will then prompt you to examine differences between the treatment actions that you performed and those indicated by the clinical findings revealed during the scenario, or that would have been revealed by a more thorough assessment and reassessment of this patient.  Finally, it will prompt you to state some 'take home points' to improve your performance.\"]\n        },\n        {\n            step: \"E\",\n            title: \"Explain the learning objectives:\",\n            description: \"This scenario was designed to give you practice with:\",\n            text: [\n                \"Conducting a thorough trauma patient assessment\",\n                \"Managing severe external bleeding\",\n                \"Managing inadequate breathing\",\n                \"Managing hemorrhagic shock\",\n                \"Making appropriate transport decisions\",\n                \"Performing ongoing patient management and assessment\",\n            ]\n        },\n        {\n            step: \"B\",\n            expectations: [\n                {\n                    expectationText: \"Conduct a thorough trauma assessment\",\n                    benchmarks: [\n                        {\n                            benchmarkText: \"Before approaching patient, apply PPE, check that the scene is safe, determine the number of patients, and request additional help if necessary\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"On initial patient contact, form a general impression of the patient's condition, assess patient's level of consciousness, and identify apparent life threats\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"During the Primary Survey:\",\n                            subBenchmarks: \n                            [\n                                \"Check that airway is open, clear of fluids and foreign bodies, and has intact physical structures\", \n                                \"Listen for abnormal breath sounds and check breathing rate, rhythm, and quality\", \n                                \"Check circulation: pulse rate/rhythm/quality; skin color/temperature/condition; perform gross blood sweep\",\n                                \"Determine the need for rapid transport\",\n                                \"Trauma expose patient\"\n                            ]\n                        },\n                        {\n                            benchmarkText: \"Take baseline vitals and, if possible, obtain SAMPLE history and OPQRST\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Perform a rapid head-to-toe assessment (Secondary Survey), looking/listening/feeling for DCAP-BTLS and abnormal conditions at each body part (e.g., check neck for tracheal deviation and JVD).\",\n                            subBenchmarks: []\n                        },\n                    ]\n                },\n                {\n                    expectationText: \"Manage a potential head or spinal injury\",\n                    benchmarks: [\n                        {\n                            benchmarkText: \"Identify the potential for head or spinal injury during your initial assessment\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Direct manual stabilization of the cervical spine before checking airway, breathing and circulation\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Apply an appropriately sized cervical collar\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \" Immobilize the patient prior to transport by log-rolling the patient onto a backboard and attaching at least three straps, the CID pad, both head blocks, and CID straps\",\n                            subBenchmarks: []\n                        },\n                    ]\n                },\n                {\n                    expectationText: \"Manage inadequate breathing due to a simple pneumothorax\",\n                    benchmarks: [\n                        {\n                            benchmarkText: \"Diagnose a simple pneumothorax during the primary survey\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Provide concentrated O2 via a non-rebreather mask or, if not tolerated, a nasal cannula\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Titrate oxygen to SpO2 of 95-99%\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Do NOT attempt needle decompression\",\n                            subBenchmarks: []\n                        },\n                    ]\n                },\n                {\n                    expectationText: \"Make appropriate transport decisions\",\n                    benchmarks: [\n                        {\n                            benchmarkText: \"Rapid transport to a Level 1 trauma facility by ground ambulance, using lights and sirens\",\n                            subBenchmarks: []\n                        },\n                    ]\n                },\n                {\n                    expectationText: \"Perform ongoing patient management and assessment\",\n                    benchmarks: [\n                        {\n                            benchmarkText: \"Splint the patient's wrist and apply a sling to his injured shoulder before transferring him to an immobilization device and then to the ambulance.\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Reassess vitals every 5 minutes; repeat primary and secondary survey\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Establish at least one large bore IV en route\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Administer pain medication en route if time allows\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Keep the patient warm by covering the patient with blankets, turning the heat up in the ambulance, applying heat packs, etc.\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Contact receiving facility.  Provide complete report on patient's condition and ETA\",\n                            subBenchmarks: []\n                        },\n                    ]\n                }\n            ]\n        },\n        {\n            step: \"R\",\n            slides: [\n                {\n                    paragraphs: [\n                        para(\n                            text(\"In an idealized scenario, you arrive on scene and find a man dressed in motocross gear lying on the ground. Your initial assessment reveals a helmeted patient who is awake and alert with shallow breaths.\")\n                        ),\n                        para(\n                            text(\"You immediately direct your partner to provide\"),\n                            link(\"manual c-spine stabilization\", \"Spinal precautions should be taken with any patient involved in a motor-vehicle accident or any instance where a patient was thrown.\"),\n                            text(\"while removing the helmet and apply a cervical collar. You note the patient has an open airway and that his breathing is rapid and shallow, so you place him on either a\"),\n                            link(\"non-rebreather mask or nasal cannula.\", \"While this patient is in mild respiratory distress and has hypoxia, his mental status and respiratory effort are appropriate, so he does not need assistance with ventilation.\"),\n                            text(\"His extremity pulses are strong.\")\n                        )\n                    ]\n                },\n                {\n                    paragraphs: [\n                        para(\n                            text(\"You instruct another responder to obtain a set of baseline vitals and obtain a SAMPLE and OPQRST history from the race official while you perform a rapid head-to-toe assessment. You note that the patient has diminished breath sounds on the left but\"),\n                            link(\"no signs of decreased cardiac output.\", \"This patient has a pneumothorax, as evidenced by his hypoxia and unequal breath sounds, but without evidence of decreased cardiac output (ex. JVD, hypotension), he does not have a tension pneumothorax and does not require needle decompression at this time.\"),\n                            text(\"After checking the patient’s anterior, you and your partner log roll the patient, check his posterior, and secure him onto a long back board.\")\n                        ),\n                        para(\n                            text(\"Once the CID is in place, you and your partners then place the patient on a stretcher, cover him with a blanket, and transfer him to the ambulance. You notify the Level I trauma center you are on the way. En route, you establish two large bore IVs, reassess the patient\"),\n                            link(\"every five minutes,\", \"Critically ill patients should be reassessed every 5 minutes.\"),\n                            text(\"and confirm that all interventions are working properly, modifying any as necessary.\")\n                        )\n                    ]\n                }\n                        \n            ]\n        },\n        {\n            step: \"F\",\n            title: \"Formalize learning\",\n            heading: \"Please take a few minutes to think and reply to these questions\",\n            questions: \"What are your key take-home points from this case? What is something you want to continue working on or do differently in the future?\"\n        }\n    ];","/* Data for phase scenario B4CA for phase IE \nThis data structure holds all the information to create the slides to present during the IE phase.\nIt mirrors the tree structure that is presented in the Excel file. All nodes in the tree are called actions whether \nthey are assessments or interventions. Subactions are the children of the actions in the tree.\nFields:\nid: identifies the action-node in the tree. It is a string since it is unique.\nlabel: text for the action as it will appear on the slide\ntype: indicates whether the action is Required, Contraindicated, Unnecessary, Irrelevant, Optional, Alternative.\n    Required, it will be listed in the left side of the slide so that students are asked if they performed it.\n    Contraindicated: it will be listed on the right side under a list of contraindicated actions that the student performed\n    accompanied by the feedback on the feedbackErrors field.\n    Unnecessary: it will be listed on the right side under a list of unnecessary actions that the student performed\n    accompanied by the feedback on the feedbackErrors field.\n    Irrelevent: it will be listed on the right side under a list of irrelevant actions that the student performed\n    accompanied by the feedback on the feedbackErrors field.\n    Optional: it will be accepted as correct if performed. We are considering it the same as Unnecessary.\n    Alternative: will be used for those interventions that can be performed as alternative to required ones.\nAlternativeToIntv: indicates the intervention for which the current one is an alternative. It will only have a value if\nthe type is Alternative.\nfeedbackAbsent: feedback given if the action was no performed\nfeedbackOutOfOrder: feedback given if the action was done late (e.g., if the action is Scene size-up and it was done \n    after Primary Survey)\nfeedbackErrors: feedback if the action was performed incorrectly (e.g., wrong ventilation rate)\nexamineIfAbsent: boolean to indicate if this Action needs to be examined when it is Absent (phase E)\nexamineIfErrors: boolean to indicate if this Action needs to be examined when there are performance errors (phase E)\npromptsIfAbsent: prompts to be included in question headers in phase E, to hint on how to reflect when Action was Absent\npromptsIfErrors: prompts to be included in question headers in phase E, to hint on how to reflect when Action was performed incorrectly\nsubActionsList: boolean that indicates whether the subActions need to be listed as bullet points on the slide. If they\n    don't need to be listed it is usually because they have been grouped however, the subActions still need to be \n    included in the subActions field because they are used by the analysis to give a summary of their status.\nsubActions: array with the corresponding subactions (to form the tree)\n*/\nimport { ACTION_TYPES, WAIT_TIFF, WAIT_SANDY, SUM_NODE_NO_FEEDBACK, NO_FEEDBACK, SUM_NODE_FBCK_CHILDREN } from \"./constants\";\n\n\nexport const B4CA_PhaseIE = {\n  Action: {\n    id: \"top\",\n    label:\n      \"fully assess and manage the patient in this scenario\" /* the way it will appear on the slide */,\n    type: ACTION_TYPES.REQ /*indicates whether the action was Required, Contraindicated, Unnecessary, or Irrelevant\" */,\n    feedbackAbsent: [\n      \"Your log indicates you didn't complete any of these assessment or managment goal. Please restart the scenario and try again\",\n    ] /*feedback if the action was not performed*/,\n    feedbackOutOfOrder: [\n      \"\",\n    ] /*feedback if the action was done late (e.g., if the action is Scene Size-up \n      and it was done after Primary Survey)*/,\n    feedbackErrors: [\n      \"\",\n    ] /*feedback if the action was performed incorrectly (e.g. wrong Ventilation rate)*/,\n    examineIfAbsent: false /* boolean to indicate if this Action needs to be examined (phase E) */,\n    examineIfErrors: false,\n    promptsIfAbsent:\n      \"\" /* prompts to the included in question in phase E to hint on how to reflect */,\n    promptsIfErrors: \"\",\n    subActionsList: true /* boolean that indicates if subActions need to be listed as bullet points on slide */,\n    subActions: [\n      /*array with the corresponding subactions (to form the tree)*/\n      {\n        id: \"scene-size-up\",\n        label:\n          \"Put on BSI and do a complete Scene Size-up before entering the scene\",\n        type: ACTION_TYPES.REQ,\n        feedbackAbsent: [\n          \"Your first steps should have been to don your protective wear, including eye protection, and to ensure the scene is safe. You cannot assist a patient if you are not safe yourself.\", \n          \"Your scene size up gives you a big-picture view of what is going on before you even begin examining the patient and includes determining the mechanism of injury and number of patients, requesting additional help if necessary, and considering stabilization of the spine.\",\n          \"In this case, you would have learned that this is a motorbike crash, which should have prompted you to think about a possible spinal cord injury and the need to secure the patient's spine immediately.\",\n        ],\n        feedbackOutOfOrder: [\n          \"Your first steps should have been to don your protective wear, including eye protection, and to ensure the scene is safe. You cannot assist a patient if you are not safe yourself.\", \n          \"Your scene size up also gives you a big-picture view of what is going on before you even begin examining the patient. This includes determining the mechanism of injury and number of patients, requesting additional help if necessary, and considering stabilization of spine.\",\n        ],\n        feedbackErrors: [\"\"],\n        examineIfAbsent: false,\n        examineIfErrors: false,\n        promptsIfAbsent: \"\",\n        promptsIfErrors: \"\",\n        subActionsList: true,\n        subActions: [\n          {\n            id: \"required-action-BSI\",\n            label: \"Apply BSI\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\n              \"Your first steps should have been to don your protective wear, including eye protection, and to ensure the scene is safe. You cannot assist a patient if you are not safe yourself.\",\n            ],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: false,\n            subActions: [],\n          },\n          {\n            id: \"assess-scene-safety\",\n            label: \"Determine the scene/situation is safe\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\n              \"Your first steps should have been to don your protective wear, including eye protection, and to ensure the scene is safe. You cannot assist a patient if you are not safe yourself.\",\n            ],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: false,\n            subActions: [],\n          },\n          {\n            id: \"assess-injury-mechanism\",\n            label:\n              \"Determine the mechanism of injury (MOI) or nature of illness (NOI)\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\n              \"Knowing what caused the patient's injury or illness can allow you to start developing a plan of action before you even assess your patient.\",\n              \"By determining the mechanism of injury, you would have learned that this is a motorbike accident, which should have prompted you to think about potential head or spinal injury, injuries to the extremities, and other blunt impact injuries to the chest and abdomen.\",\n            ],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: false,\n            subActions: [],\n          },\n          {\n            id: \"assess-num-patients\",\n            label: \"Determine the number of patients\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\n              \"Usually you will have one patient, but if there is more than one you will need to plan accordingly.\",\n            ],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: false,\n            subActions: [],\n          },\n          {\n            id: \"required-action-requests-additional-help\",\n            label: \"Request additional help if necessary\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\n              \"Consider the need for extra help based on number of patients, mechanism of injury, and your patient's status.\",\n              \"Although police and fire personnel were already on scene, you should have considered the need for additional ALS support.\",\n            ],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: false,\n            subActions: [],\n          },\n          {\n            id: \"required-action-considers-stabilize-spine\",\n            label: \"Consider stabilization of spine\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\n              \"All trauma patients are at risk for spinal injury, including those in high-speed accidents. Take this into consideration before initial contact with the patient to prevent unintentional injury.\",\n            ],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: false,\n            subActions: [],\n          },\n        ],\n      },\n      {\n        id: \"primary-survey\",\n        label:\n          \"Perform a Primary Survey and manage all identified life threats\",\n        type: ACTION_TYPES.REQ,\n        feedbackAbsent: [\n          \"The primary survey is an assessment of mental status, life-threats, and the patient's ABCs. It is where you will identify and address the patient's most serious injuries.\",\n          \"In this case, the Primary Survey would have revealed a patient who is conscious with chest pain and shortness of breath. Your primary survey does not reveal any apparently life threats so you can move forward to the next step of your assessment.\",\n        ],\n        feedbackOutOfOrder: [\n          \"You should have started your Primary Survey after the Scene Size-up and completed it before starting the Secondary Survey. Only interrupt your assessment to control life-threats: (1) Conditions that compromise a patent airway (2) Conditions that compromise breathing or respirations, such as a tension pneumothorax, (3) Conditions that compromise circulation, such as severe bleeding, (4) Cardiac arrest, and any  other potentially life threatening injuries or conditions.  Your patient's condition will deteriorate if these conditions are not addressed before continuing on with your assessment and history taking.\",\n        ],\n        feedbackErrors: [\"\"],\n        examineIfAbsent: false,\n        examineIfErrors: false,\n        promptsIfAbsent: \"\",\n        promptsIfErrors: \"\",\n        subActionsList: true,\n        subActions: [\n          {\n            id: \"general-impression\",\n            label: \"Conduct an Initial Assessment\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\n              \"You should have performed an Initial Assessment: gathered a general impression, identified any apparent life threats, and determined your patient's level of consciousness.  Your Initial Assessment  would have revealed a patient who is unconscious.\",\n            ],\n            feedbackOutOfOrder: [\n              \"While you may be tempted to jump straight into your ABCs, apparent life threats (i.e. uncontrolled bleeding) should be addressed first, as they can cause a patient to deteriorate quickly. Also, be sure to assess the patient's mental status, as an unconscious patient will need a pulse check first, to ensure he or she does not require CPR.\",\n            ],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: true,\n            subActions: [\n              {\n                id: \"assess-patient-condition\",\n                label: \"State or request a general impression\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"Your general impression allows you to start developing a plan of action before you even assess your patient.\",\n                  \"In this case, your general impression would have been of a man thrown from a motor bike.\",\n                ],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"assess-loc\",\n                label: \"Assess the patient's level of consciousness\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"The patient's level of consciousness alters how you progress through your assessment.\",\n                  \"The patient is conscious with a GCS of 15.\",\n                ],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"assess-life-threats\",\n                label: \"Determine the chief complaint/apparent life-threats\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"If you had determined apparent life threats, you would have noticed that the patient was conscious without apparent immediate life threats.\",\n                ],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n            ],\n          },\n          {\n            id: \"Manage a potential head or spinal injury\",\n            label: \"Manage a potential head or spinal injury\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\n              \"This patient was thrown from a motorcycle and landed on his back, which could have caused a fracture of the spine and/or neck. You should have taken manual c-spine stabilization before performing your ABC assessment and maintained it throughout and applied an appropriately sized cervical collar.\",\n            ],\n            feedbackOutOfOrder: [\n              \"Managing the cervical spine is one of the first things you should do for any trauma patient, as you must ensure you do not cause any further injury during the remainder of your assessment and management.\",\n            ],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: true,\n            examineIfErrors: false,\n            promptsIfAbsent:\n              \"Did not consider risk for cervical spine injury; Considered cervical spine injury but did not think the mechanism necessitated spinal stabilization\",\n            promptsIfErrors: \"\",\n            subActionsList: true,\n            subActions: [\n              {\n                id: \"intv-spinal-immobilization-technique-manual-c-spine\",\n                label:\n                  \"Apply (or direct a partner to apply) manual c-spine stabilization\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"Part of managing a head and/or spinal injury includes manual stabilization of the cervical spine before beginning your assessment, as movement may further injure the patient. When you arrive, this patient is helmeted, but the helmet should be removed while maintaining c-spine stability, even if this requires additional people.\",\n                ],\n                feedbackOutOfOrder: [\n                  \"During trauma situations it is necessary to stabilize the c-spine before continuing as not doing so may cause further injury to the patient.\",\n                ],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-spinal-immobilization-technique-cervical-collar\",\n                label: \"Apply an appropriately sized cervical collar\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"A cervical collar will help you maintain stability while you continue with your exam.\",\n                ],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n            ],\n          },\n          {\n            id: \"airway\",\n            label: \"Assess the patient's airway\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\n              \"Be sure to assess the airway for patency and intact physical structures.\",\n              \"You would have found this patient's airway to be patent, as evidenced by the fact that he can speak to you.\",\n            ],\n            feedbackOutOfOrder: [\n              \"If your patient is conscious, you should examine the airway before breathing and circulation. If a patient is unconscious, you should assess the pulse first to evaluate for possible cardiac arrest, then go through your ABCs.\",\n            ],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: true,\n            subActions: [\n              {\n                id: \"airway-is-open\",\n                label: \"Check if the airway is patent\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"The first step of your airway assessment is to see if the patient's airway is open. If the patient is speaking normally, like in this patient, it is open. Signs like stridor or gasping may indicate an airway obstruction.\",\n                ],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"airway-has-intact-physical-structures\",\n                label: \"Check if the airway has intact physical structures\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"Though this patient did not have any facial trauma, be sure to look for injuries such as gun-shot wounds or facial fractures, as these may affect what basic or advanced airways you can use.  Avoid using a nasopharyngeal airway in patients with a suspected basilar skull fracture or nasal injury.\",\n                ],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-open-airway-method-head-tilt\" /*contraindicated intervention */,\n                label: \"Head tilt chin lift\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\n                  \"This patient's airway is patent, as is evident by the fact that he is talking--for example, complaining about pain and difficulty breathing.  If his condition deteriorates and you have reason to suspect  that his airway may be compromised, you should check the  airway using a modified jaw thrust maneuver instead of a head tilt chin lift.\",\n                ],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-open-airway-method-modified-jaw-thrust\", /* unnecessary intervention */\n                label: \"Open the patient's airway with a jaw thrust maneuver\",\n                type: ACTION_TYPES.UNNEC,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"This patient's airway is patent, as is evident by the fact that he is talking--for example, complaining about pain and difficulty breathing.  If his condition deteriorates and you have reason to suspect  that his airway may be compromised, you should check the  airway using a modified jaw thrust maneuver instead of a head tilt chin lift.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-manual-finger-sweep\" /* contraindicated intervention */,\n                label: \"Manual (finger sweep)\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\n                  \"If there is a visible foreign body in the mouth, it should be removed. However, a blind finger sweep is contraindicated as it could lodge a foreign body deeper into the airway. Further, there is no evidence of foreign body in this patient's mouth.\",\n                ],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-magill-forceps-assisted\" /* contraindicated intervention */,\n                label: \"Magill forceps assisted removal\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\n                  \"If there is a visible foreign body in the mouth, it should be removed. However, there is no evidence of a foreign body in this patient's mouth.\",\n                ],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-heimlich-maneuver\" /* contraindicated intervention */,\n                label: \"Heimlich Maneuver\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\n                  \"You have no evidence the patient is choking on an object so the Heimlich maneuver is not appropriate at this time.\",\n                ],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-back-blows-and-chest-thrusts\" /* contraindicated intervention */,\n                label: \"Back blows and chest thrusts\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\n                  \"You have no evidence the patient is choking on an object so back blows and chest thrusts are not appropriate at this time.\",\n                ],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-oropharyngeal-airway\" /* contraindicated intervention */,\n                label: \"Oropharyngeal airway (OPA)\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\n                  \"This patient requires only a nasal canula or non-rebreather mask. An airway adjunct is unnecessary and would likely be refused by this conscious patient.\",\n                ],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-nasopharyngeal-airway\" /* contraindicated intervention */,\n                label: \"Nasopharyngeal airway (NPA)\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\n                  \"This patient requires only a nasal canula or non-rebreather mask. An airway adjunct is unnecessary and would likely be refused by this conscious patient.\",\n                ],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-orotracheal-intubation\" /* contraindicated intervention */,\n                label: \"Orotracheal intubation\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\n                  \"This patient's respiratory status can be stabilized with oxygen administered via a nasal canula or non-rebreather mask. More invasive airway support is unnecessary and dangerous.\",\n                ],\n                examineIfAbsent: false,\n                examineIfErrors: true,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"Thought this patient needed to be intubated\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-nasotracheal-intubation\" /* contraindicated intervention */,\n                label: \"Nasotracheal intubation\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\n                  \"This patient's respiratory status can be stabilized with oxygen administered via a nasal canula or non-rebreather mask. More invasive airway support is unnecessary and dangerous.\",\n                ],\n                examineIfAbsent: false,\n                examineIfErrors: true,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"Thought this patient needed to be intubated\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-insert-advanced-airway\" /* contraindicated intervention */,\n                label: \"Insert advanced/rescue airway\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\n                  \"This patient's respiratory status can be stabilized with oxygen administered via a nasal canula or non-rebreather mask. More invasive airway support is unnecessary and dangerous.\",\n                ],\n                examineIfAbsent: false,\n                examineIfErrors: true,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"Thought this patient needed to be intubated\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-rapid-sequence-intubation\" /* contraindicated intervention */,\n                label: \"Rapid-sequence intubation\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\n                  \"RSI is not in the paramedic's scope of practice in Pennsylvania. This patient's respiratory status can be stabilized with oxygen administered via a nasal canula or non-rebreather mask. More invasive airway support is unnecessary and dangerous.\",\n                ],\n                examineIfAbsent: false,\n                examineIfErrors: true,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"Thought this patient needed to be intubated\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-sedation-assisted-intubation\" /* contraindicated intervention */,\n                label: \"Sedation-assisted intubation\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\n                  \"This patient's respiratory status can be stabilized with oxygen administered via a nasal canula or non-rebreather mask. More invasive airway support is unnecessary and dangerous.\",\n                ],\n                examineIfAbsent: false,\n                examineIfErrors: true,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"Thought this patient needed to be intubated\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-needle-cricothyrotomy\" /* contraindicated intervention */,\n                label: \"Needle cricothyrotomy\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\n                  \"A cricothrotomy is indicated when there is an upper airway obstruction that cannot be removed. This patient has a patent airway.\",\n                ],\n                examineIfAbsent: false,\n                examineIfErrors: true,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"thought the patient had an upper airway obstruction\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-surgical-cricothyrotomy\" /* contraindicated intervention */,\n                label: \"Surgical cricothyrotomy\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\n                  \"A cricothyrotomy is indicated when there is an upper airway obstruction that cannot be removed. This patient has a patent airway.\",\n                ],\n                examineIfAbsent: false,\n                examineIfErrors: true,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"thought the patient had an upper airway obstruction\",\n                subActionsList: false,\n                subActions: [],\n              },\n            ],\n          },\n          {\n            id: \"breathing\",\n            label: \"Assess the patient's breathing\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\n              \"After assessing the patient's airway, assess their breathing by listening for breath sounds and observing their respiratory rate, rhythm, and effort.\", \"You would have found tachypnea with diminished sounds on the left, suggesting possible pneumothorax or hemothorax.\",\n            ],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: true,\n            subActions: [\n              {\n                id: \"breathing-checks-rate\",\n                label: \"rate\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"A significantly elevated or depressed respiratory rate can suggest impending respiratory failure.\", \"This patient's tachypnea suggests the need for some respiratory support.\",\n                ],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"breathing-checks-rhythm\",\n                label: \"rhythm\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"Although not found in this case, a patient who is breathing irregularly needs ventilatory support.\",\n                ],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"breathing-checks-quality\",\n                label: \"quality\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"Sounds like stridor, crackles, or wheezing will help you diagnose and manage your patient's respiratory problems.\",\n                  \"This patient had diminished sounds on the left with crepitus, suggesting a possible pneumothorax.\",\n                ],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n            ],\n          },\n          {\n            id: \"Manage inadequate breathing\",\n            label: \"Manage inadequate breathing\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\n              \"The patient is taking rapid, shallow breaths. He is diminished on the L with an SpO2 of 88%. These are signs that this patient has a pneumothorax, possibly even a tension pneumothorax, and requires respiratory support.\",\n            ],\n            feedbackOutOfOrder: [\n              \"Problems with ventilation and oxygenation are life threatening and should be addressed before you move on to your secondary survey. Repeat your exam and check vitals to ensure your interventions have worked as you expected. If not, your patient may deteriorate as you continue on with your examination.\",\n            ],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: true,\n            examineIfErrors: false,\n            promptsIfAbsent:\n              \"Didn't realize that the patient's respiratory status was threatened; Didn't know the best way to support this patient's breathing\",\n            promptsIfErrors: \"\",\n            subActionsList: true,\n            subActions: [\n              {\n                id: \"intv-non-rebreather-mask-or-nasal-cannula\",\n                label:\n                  \"Administering concentrated oxygen via a non-rebreather mask or, if not tolerated, a nasal cannula to a target SpO2 of 95-99%\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"The patient's respiratory rate is fast, but he is ventilating adequately. His SpO2, however, is low, suggesting inadequate oxygenation. You can use either a nasal canula or non-rebreather mask to help with oxygenation. Note that you are not assisting the patient with ventilation. In the case of a pneumothorax, you should avoid positive pressure ventilation, if possible, as this could increase the amount of air outside of the lungs, turning a pneumothorax into a tension pneumothorax.\",\n                ],\n                feedbackOutOfOrder: [\n                  \"Oxygen administration should be performed during the primary survey as this intervention falls under 'Breathing' in the ABC's.\",\n                ],\n                feedbackErrors: [\n                  \"This patient should be allowed to breathe independently. O2 flow rate should be adjusted to achieve an SpO2 between 95 and 99%.\",\n                ],\n                examineIfAbsent: true,\n                examineIfErrors: false,\n                promptsIfAbsent:\n                  \"Didn't realize that the patient's respiratory status was threatened; thought this patient needed ventilatory support; did not recognize the possibility of a pneumothorax\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [\n                  {\n                    id: \"intv-supplemental-oxygen-device-non-rebreather-mask\",\n                    type: ACTION_TYPES.REQ,\n                    feedbackAbsent: [\n                      \"The patient's respiratory rate is fast, but he is ventilating adequately. His SpO2, however, is low, suggesting inadequate oxygenation. You can use either a nasal canula or non-rebreather mask to help with oxygenation. Note that you are not assisting the patient with ventilation. In the case of a pneumothorax, you should avoid positive pressure ventilation, if possible, as this could increase the amount of air outside of the lungs, turning a pneumothorax into a tension pneumothorax.\",\n                    ],\n                    feedbackOutOfOrder: [\n                      \"Oxygen administration should be performed during the primary survey as this intervention falls under 'Breathing' in the ABC's.\",\n                    ],\n                    feedbackErrors: [\n                      \"This patient should be allowed to breathe independently. O2 flow rate should be adjusted to achieve an SpO2 between 95 and 99%.\",\n                    ],\n                    subActions: [],\n                  },\n                  {\n                    id: \"intv-supplemental-oxygen-device-nasal-cannula\",\n                    type: ACTION_TYPES.ALT,\n                    alternativeToIntv:\n                      \"intv-supplemental-oxygen-device-non-rebreather-mask\",\n                    feedbackAbsent: [\n                      \"The patient's respiratory rate is fast, but he is ventilating adequately. His SpO2, however, is low, suggesting inadequate oxygenation. You can use either a nasal canula or non-rebreather mask to help with oxygenation. Note that you are not assisting the patient with ventilation. In the case of a pneumothorax, you should avoid positive pressure ventilation, if possible, as this could increase the amount of air outside of the lungs, turning a pneumothorax into a tension pneumothorax.\",\n                    ],\n                    feedbackOutOfOrder: [\n                      \"Oxygen administration should be performed during the primary survey as this intervention falls under 'Breathing' in the ABC's.\",\n                    ],\n                    feedbackErrors: [\n                      \"This patient should be allowed to breathe independently. O2 flow rate should be adjusted to achieve an SpO2 between 95 and 99%.\",\n                    ],\n                    subActions: [],\n                  },\n                ],\n              },\n              {\n                id: \"reassess-AB\",\n                label:\n                  \"Check that breathing management interventions are working by requesting relevant vitals--especially, respiratory rate and SpO2\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"When you decide your patient needs a treatment, you must ensure your treatment had the intended outcomes. In this case, after applying oxygen, you want to check to make sure his SpO2 and RR have improved. If not, you will want to reflect on why you did not see the expected improvements? Did you select an incorrect intervention? Do you need to escalate your therapies? Are you performing the intervention correctly?\", \"For example, you may need to recheck your BVM seal, reposition the patient's head or jaw to ensure the airway is open, or place an oropharyngeal or nasopharyngeal airway if not already done.\"\n                ],\n                feedbackOutOfOrder: [\n                  \"Problems with ventilation and oxygenation are life threatening and should be addressed before you move on to your secondary survey. Repeat your exam and check vitals (SpO2) to ensure your interventions have worked as you expected. If not, your patient may deteriorate as you continue on with your examination.\",\n                ],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [\n                  {\n                    id: \"request-vitals-R\",\n                    label: \"check R\",\n                    type: ACTION_TYPES.REQ,\n                    feedbackAbsent: [\"You should have checked R\"],\n                    feedbackOutOfOrder: [\"\"],\n                    feedbackErrors: [\"\"],\n                    examineIfAbsent: false,\n                    examineIfErrors: false,\n                    promptsIfAbsent: \"\",\n                    promptsIfErrors: \"\",\n                    subActionsList: false,\n                    subActions: [],\n                  },\n                  {\n                    id: \"request-vitals-Spo2\",\n                    label: \"check Spo2\",\n                    type: ACTION_TYPES.REQ,\n                    feedbackAbsent: [\"You should have checked Spo2\"],\n                    feedbackOutOfOrder: [\"\"],\n                    feedbackErrors: [\"\"],\n                    examineIfAbsent: false,\n                    examineIfErrors: false,\n                    promptsIfAbsent: \"\",\n                    promptsIfErrors: \"\",\n                    subActionsList: false,\n                    subActions: [],\n                  },\n                ],\n              },\n              {\n                id: \"intv-ventilation-technique-bag-valve-mask\" /* contraindicated intervention */,\n                label: \"Bag valve mask\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\n                  \"This patient's respiratory status can be stabilized with oxygen administered via a nasal cannula or non-rebreather mask. More invasive airway support is unnecessary and dangerous.\",\n                ],\n                examineIfAbsent: false,\n                examineIfErrors: true,\n                promptsIfAbsent: \"\",\n                promptsIfErrors:\n                  \"Thought this patient needed ventilatory support in addition to oxygenation\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-occlusive-dressing\" /* contraindicated intervention */,\n                label: \"Occlusive dressing\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\n                  \"The patient did not have a penetrating chest wound.\",\n                ],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-pleural-decompression\" /* contraindicated intervention */,\n                label: \"Needle decompression\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\n                  \"This patient had a pneumothorax but did not have a tension pneumothorax. Specifically, he had no signs of cardiac obstruction (hypotension, hypoperfusion of the extremities, JVD). While a tension pneumothorax requires needle decompression to treat and prevent obstruction shock, a simple pneumothorax does not. The patient should be continuously monitored, because a simple pneumothorax has the potential to turn into a tension pneumothorax.\",\n                ],\n                examineIfAbsent: false,\n                examineIfErrors: true,\n                promptsIfAbsent: \"\",\n                promptsIfErrors:\n                  \"Thought a simple pneumothorax requires needle decompression; Thought the patient had a tension pneumothorax\",\n                subActionsList: false,\n                subActions: [],\n              },\n            ],\n          },\n          {\n            id: \"circulation\",\n            label: \"Assess the patient's circulation\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\n              \"Evaluate the patient's pulse and skin to assess the patient for shock.  With an unconscious patient, be sure to check the carotid pulse first, or simultaneously with the radial pulse, to determine if CPR is necessary. Be sure to also perform a gross blood sweep.\", \"You would have noticed that your patient had a strong, regular pulse and mild tachycardia.\",\n            ],\n            feedbackOutOfOrder: [\n              \"All unconscious patients should have a pulse check before starting the ABCs. If the patient is pulseless, you will start high-quality CPR immediately.\",\n            ],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: true,\n            subActions: [\n              {\n                id: \"pulse-checks\",\n                label: \"check pulse\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"First check for a radial pulse. However, if you don't feel one, you want to check a carotid pulse.\", \"This patient's radial pulses were absent, but he did have a weak carotid pulse, which would prompt you to worry about shock.\", \"Checking this patient's pulse rate would have revealed that he was tachycardic. A significantly elevated or depressed pulse rate can suggest shock or respiratory failure.\", \"While this patient's heart had a regular rhythm, remember that an irregular rhythm can suggest impending cardiac arrest or arrhythmia.\", \"A patient in shock may have weak or absent pulses distally, such as this patient, suggestive of shock.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                  {\n                    id: \"prompt-to-specify-pulse\",\n                    label: \"check the appropriate pulse(s)\",\n                    type: ACTION_TYPES.REQ,\n                    feedbackAbsent: [\"First check for a radial pulse. However, if you don't feel one, you want to check a carotid pulse.\", \"This patient's radial pulses were absent, but he did have a weak carotid pulse, which would prompt you to worry about shock.\"],\n                    feedbackOutOfOrder: [\"\"],\n                    feedbackErrors: [\"First check for a radial pulse. However, if you don't feel one, you want to check a carotid pulse.\", \"This patient's radial pulses were absent, but he did have a weak carotid pulse, which would prompt you to worry about shock.\"],\n                    examineIfAbsent: false,\n                    examineIfErrors: false,\n                    promptsIfAbsent: \"\",\n                    promptsIfErrors: \"\",\n                    subActionsList: false,\n                    subActions: [],\n                  },\n                  {\n                    id: \"checks-pulse-rate-rhythm-quality\",\n                    label: \"check pulse rate, rhythm, and quality\",\n                    type: ACTION_TYPES.REQ,\n                    feedbackAbsent: [\"Checking this patient's pulse rate would have revealed that he was tachycardic. A significantly elevated or depressed pulse rate can suggest shock or respiratory failure.\", \"While this patient's heart had a regular rhythm, remember that an irregular rhythm can suggest impending cardiac arrest or arrhythmia.\", \"A patient in shock may have weak or absent pulses distally, such as this patient, suggestive of shock.\"],\n                    feedbackOutOfOrder: [\"\"],\n                    feedbackErrors: [\"\"],\n                    examineIfAbsent: false,\n                    examineIfErrors: false,\n                    promptsIfAbsent: \"\",\n                    promptsIfErrors: \"\",\n                    subActionsList: false,\n                    subActions: [\n                      {\n                        id: \"checks-pulse-rate\",\n                        label: \"rate\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Checking this patient's pulse rate would have revealed that he was tachycardic. A significantly elevated or depressed pulse rate can suggest shock or respiratory failure.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"checks-pulse-rhythm\",\n                        label: \"rhythm\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"While this patient's heart had a regular rhythm, remember that an irregular rhythm can suggest impending cardiac arrest or arrhythmia.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"checks-pulse-quality\",\n                        label: \"quality\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"A patient in shock may have weak or absent pulses distally, such as this patient, suggestive of shock.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                    ],\n                  },\n                ],\n              },\n              {\n                id: \"checks-skin\",\n                label: \"checks skin\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Pallor and cyanosis are signs of inadequate oxygenation and may be caused by shock or respiratory failure. This patient had pink skin.\", \"While cold skin suggests decompensated shock, a patient with warm skin, like this patient, may be hemodynamically stable or they may be in compensated shock.\", \"This patient had diaphoretic skin, which in this case is non-specific, but should prompt you to think about shock.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                  {\n                    id: \"checks-skin-color\",\n                    label: \"color\",\n                    type: ACTION_TYPES.REQ,\n                    feedbackAbsent: [\n                      \"Pallor and cyanosis are signs of inadequate oxygenation and may be caused by shock or respiratory failure. This patient had pink skin.\",\n                    ],\n                    feedbackOutOfOrder: [\"\"],\n                    feedbackErrors: [\"\"],\n                    examineIfAbsent: false,\n                    examineIfErrors: false,\n                    promptsIfAbsent: \"\",\n                    promptsIfErrors: \"\",\n                    subActionsList: false,\n                    subActions: [],\n                  },\n                  {\n                    id: \"checks-skin-temperature\",\n                    label: \"temperature\",\n                    type: ACTION_TYPES.REQ,\n                    feedbackAbsent: [\n                      \"While cold skin suggests decompensated shock, a patient with warm skin, like this patient, may be hemodynamically stable or they may be in compensated shock.\",\n                    ],\n                    feedbackOutOfOrder: [\"\"],\n                    feedbackErrors: [\"\"],\n                    examineIfAbsent: false,\n                    examineIfErrors: false,\n                    promptsIfAbsent: \"\",\n                    promptsIfErrors: \"\",\n                    subActionsList: false,\n                    subActions: [],\n                  },\n                  {\n                    id: \"checks-skin-condition\",\n                    label: \"condition\",\n                    type: ACTION_TYPES.REQ,\n                    feedbackAbsent: [\n                      \"This patient had diaphoretic skin, which in this case is non-specific, but should prompt you to think about shock.\",\n                    ],\n                    feedbackOutOfOrder: [\"\"],\n                    feedbackErrors: [\"\"],\n                    examineIfAbsent: false,\n                    examineIfErrors: false,\n                    promptsIfAbsent: \"\",\n                    promptsIfErrors: \"\",\n                    subActionsList: false,\n                    subActions: [],\n                  },\n                ],\n              },\n              {\n                id: \"assess-major-bleeding\",\n                label: \"Perform a gross blood sweep\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"A gross blood sweep, which was negative in this patient, will help you identify any life-threatening bleeding you may have missed earlier when forming your general impression.\",\n                ],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n            ],\n          },\n          {\n            id: \"intv-control-severe-bleeding-technique-direct-pressure\" /* contraindicated intervention */,\n            label: \"Direct pressure\",\n            type: ACTION_TYPES.CONTRA,\n            feedbackAbsent: [\"\"],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"The patient did not have significant bleeding.\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: false,\n            subActions: [],\n          },\n          {\n            id: \"intv-control-severe-bleeding-technique-tourniquet\" /* contraindicated intervention */,\n            label: \"Tourniquet\",\n            type: ACTION_TYPES.CONTRA,\n            feedbackAbsent: [\"\"],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"The patient did not have significant bleeding.\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: false,\n            subActions: [],\n          },\n          {\n            id: \"intv-control-severe-bleeding-technique-2nd-tourniquet\" /* contraindicated intervention */,\n            label: \"Second tourniquet\",\n            type: ACTION_TYPES.CONTRA,\n            feedbackAbsent: [\"\"],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"The patient did not have significant bleeding.\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: false,\n            subActions: [],\n          },\n          {\n            id: \"intv-control-severe-bleeding-technique-pack-wound-with-gauze\" /* contraindicated intervention */,\n            label: \"Pack wound with gauze or hemostatic gauze\",\n            type: ACTION_TYPES.CONTRA,\n            feedbackAbsent: [\"\"],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"The patient did not have significant bleeding.\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: false,\n            subActions: [],\n          },\n          {\n            id: \"intv-control-severe-bleeding-technique-pressure-bandage\" /* contraindicated intervention */,\n            label: \"Pressure dressing\",\n            type: ACTION_TYPES.CONTRA,\n            feedbackAbsent: [\"\"],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"The patient did not have significant bleeding.\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: false,\n            subActions: [],\n          },\n          {\n            id: \"intv-control-severe-bleeding-technique-load-and-go\" /* contraindicated intervention */,\n            label: \"Load and go due to uncontrolled bleeding.\",\n            type: ACTION_TYPES.CONTRA,\n            feedbackAbsent: [\"\"],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"The patient did not have significant bleeding.\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: false,\n            subActions: [],\n          },\n          {\n            id: \"transport-decision\",\n            label:\n              \"Make appropriate transport decisions based on your findings so far\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\n              \"Your ABCs and evaluation for life threats and level of consciousness will dictate where you transfer your patient.\",\n              \"Because of the patient's tachypnea and mechanism of injury, you choose to transfer the patient to the nearby Level 1 trauma center.\",\n            ],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: true,\n            subActions: [\n              {\n                id: \"decision-is-load-and-go\",\n                label: \"Determine that this is a critical patient\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"This patient has a pneumothorax and is requiring O2 to maintain a normal SpO2. This is a patient who could deteriorate quickly so you want to make sure he gets to a hospital quickly.\",\n                ],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"This patient has a pneumothorax and is requiring O2 to maintain a normal SpO2. This is a patient who could deteriorate quickly so you want to make sure he gets to a hospital quickly.\",\n                ],\n                examineIfAbsent: true,\n                examineIfErrors: false,\n                promptsIfAbsent:\n                  \"didn't realize this was a critically ill patient; felt this patient should be further stabilized on site prior to transfer\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-transport\",\n                label:\n                  \"Decide where and how to transport the patient to definitive care.\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"This patient should be evaluated at the Level I trauma center that is 12 minutes away, where they can provide definitive care for his injuries. The need for a Level 1 trauma center is indicated by the mechanism of injury--namely, a motorcycle crash > 20 mph and fall after a 15-ft jump.\"],\n                feedbackOutOfOrder: [\n                  \"Initial transport decisions should be made following the 'Primary Survey' (ABCs) because that is when the provider decides whether the patient can be further stabilized on scene or taken directly to a hospital in a 'load and go' scenario. The secondary assessment is only performed on scene if the situation is NOT a 'load and go.' Making transport decisions early is especially important if you are calling for an air ambulance to account for the time it takes for them to arrive.\",\n                ],\n                feedbackErrors: [\n                  \"\", /*This patient should be evaluated at the Level I trauma center that is 12 minutes away, where they can provide definitive care for his injuries. The need for a Level 1 trauma center is indicated by the mechanism of injury--namely, a motorcycle crash > 20 mph and fall after a 15-ft jump.*/\n                ],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-call-for-air-ambulance\" /* contraindicated intervention */,\n                label: \"Call for air ambulance\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"Air ambulance was not available.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n            ],\n          },\n          {\n            id: \"trauma-expose\",\n            label: \"Trauma expose the patient\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\n              \"Exposure is necessary to properly inspect the patient for injuries. Only the area being inspected should be uncovered and then recovered to prevent heat loss and hypothermia.\",\n            ],\n            feedbackOutOfOrder: [\n              \"It is important to expose your patient to ensure that your secondary survey can be performed efficiently -- especially in trauma scenarios where there may be more unknown injuries. Exposing the patient allows the provider to more carefully examine the patient during assessment.\",\n            ],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: false,\n            subActions: [{\n                id: \"exposes-body-parts\",\n                label: \"Exposed (and recovered) anatomical areas as necessary\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                \"Exposure is necessary to properly inspect the patient for injuries. Only the area being inspected should be uncovered and then recovered to prevent heat loss and hypothermia.\",\n                ],\n                feedbackOutOfOrder: [\"It is important to expose your patient to ensure that your secondary survey can be performed efficiently -- especially in trauma scenarios where there may be more unknown injuries. Exposing the patient allows the provider to more carefully examine the patient during assessment.\",],\n            \n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n            },],\n          },\n        ],\n      },\n      {\n        id: \"history-taking\",\n        label: \"Obtain or direct a partner to obtain a patient history\",\n        type: ACTION_TYPES.REQ,\n        feedbackAbsent: [\n          \"Vital signs will help you decide how to manage your patient, as will a history. Even if you cannot obtain a history from the patient directly, you should still try to get as much information as you can (e.g., from a bystander).\",\n        ],\n        feedbackOutOfOrder: [\"\"],\n        feedbackErrors: [\"\"],\n        examineIfAbsent: false,\n        examineIfErrors: false,\n        promptsIfAbsent: \"\",\n        promptsIfErrors: \"\",\n        subActionsList: true,\n        subActions: [\n          {\n            id: \"required-action-obtains-vitals\",\n            label: \"Baseline vital signs\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\n              \"Baseline vitals are critical; they will help you assess, manage, and continue to monitor your patient.\", \"You would have found that this patient was tachycardic, tachypneic, and hypoxic on room air, prompting you to think about possible causes for these symptoms (such as pain, pneumothorax, hemothorax, shock).\",\n            ],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: false,\n            subActions: [],\n          },\n          {\n            id: \"required-action-attempt-obtain-sample\",\n            label: \"SAMPLE (if possible)\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\n              \"Take an efficient but thorough history from the patient or the witnesses: symptoms, allergies, medications, past medical history, last oral intake, events preceding.\", \"You would have learned that the patient was thrown from his bike after landing a 15-foot jump, landing on his back 20 feet away. You also learn that he has a history of a right forearm fracture 2 years ago but otherwise has no significant past medical history.\",\n            ],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: false,\n            subActions: [],\n          },\n          {\n            id: \"required-action-obtain-OPQRST\",\n            label: \"OPQRST (if possible)\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\n              \"Assess the patient's pain: in this case the patient reports 9/10 pain in his right wrist and in his left chest and shoulder. That started when he was thrown from his bike.\",\n            ],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: false,\n            subActions: [],\n          },\n        ],\n      },\n      {\n        id: \"secondary-assessment\",\n        label: \"Perform a Secondary Survey (rapid trauma assessment)\",\n        type: ACTION_TYPES.REQ,\n        feedbackAbsent: [\n          \"The Secondary Survey is a thorough exam of your patient to ensure you have a complete understanding of what is going on and how you need to manage your patient.\",\n        ],\n        feedbackOutOfOrder: [\"\"],\n        feedbackErrors: [\"\"],\n        examineIfAbsent: false,\n        examineIfErrors: false,\n        promptsIfAbsent: \"\",\n        promptsIfErrors: \"\",\n        subActionsList: true,\n        subActions: [\n          {\n            id: \"head\",\n            label: \"examine the patient's head\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\"\"],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: true,\n            subActions: [\n              {\n                id: \"assessment-inspects-skull\",\n                label: \"Inspect and palpate the scalp and skull\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"assessment-inspects-facial-bones\",\n                label: \"Inspect and palpate the facial bones\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Inspecting the face for bruising and palpating for facial deformity may indicate facial fractures.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"inspects-eyes\",\n                label:\n                  'Inspect the eyes for PERRLA and bruising (\"raccoon eyes\")',\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"Abnormal eye movement or pupils, which this patient fortunately did not have, suggest intracranial injury and should prompt you to rapidly transfer your patient to a trauma center.\",\n                  \"Additionally, bruising around the eyes may be caused by basilar skull fracture, though this aspect of the exam was normal in this patient.\",\n                ],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [\n                  /* subActions used for analysis but not for listing as bullet points\n                                       summary of combined subActions' statuses will be in \"inspect-eyes\" status */\n                  {\n                    id: \"inspects-eyes-PERRLA\", //an example of needing to bottom out at a defined interface id\n                    feedbackAbsent: [\n                      \"Abnormal eye movement or pupils, which this patient fortunately did not have, suggest intracranial injury and should prompt you to rapidly transfer your patient to a trauma center.\",\n                    ],\n                    subActions: [],\n                  },\n                  {\n                    id: \"inspects-eyes-racoon\",\n                    feedbackAbsent: [\n                      \"Bruising around the eyes may be caused by basilar skull fracture, though this aspect of the exam was normal in this patient.\",\n                    ],\n                    subActions: [],\n                  },\n                ],\n              },\n              {\n                id: \"inspects-ears\",\n                label:\n                  'Inspect the ears for blood, other fluids, and bruising (\"battle signs\")',\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"Although not found in this case, bleeding from the ear may be indicative of a basilar skull fracture and bruising behind the ear suggests a basilar skull fracture (Battle's sign).\",\n                ],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [\n                  {\n                    id: \"inspects-ears-blood\",\n                    feedbackAbsent: [\n                      \"Although not found in this case, bleeding from the ear may be indicative of a basilar skull fracture.\",\n                    ],\n                    subActions: [],\n                  },\n                  {\n                    id: \"inspects-ears-bruising\",\n                    feedbackAbsent: [\n                      \"Although not found in this case, bruising behind the ear suggests a basilar skull fracture (Battle's sign).\",\n                    ],\n                    subActions: [],\n                  },\n                ],\n              },\n              {\n                id: \"inspects-nose\",\n                label: \"Inspect the nose for blood and other fluids\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"This patient had no drainage from the nose but consider CSF leak from a basilar skull fracture if you see clear drainage.\",\n                ],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"inspects-mouth\",\n                label:\n                  \"Inspect the mouth for blood, other secretions, and obstructions\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"If the patient had had secretions or blood in the mouth, you would have needed to apply suction to clear the airway.\",\n                  \"Any visualized foreign bodies in the mouth should be removed. A blind finger sweep is never indicated, as you could lodge a foreign body deeper into the airway. There were no obstructions in this patient’s mouth.\"\n                ],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [\n                  /*{\n                    id: \"inspects-mouth-fluids\",\n                    feedbackAbsent: [\n                      \"If the patient had had secretions or blood in the mouth, you would have needed to apply suction to clear the airway.\",\n                    ],\n                    subActions: [],\n                  },\n                  {\n                    id: \"inspects-mouth-obstructions\",\n                    feedbackAbsent: [\n                      \"Any visualized foreign bodies in the mouth should be removed. A blind finger sweep is never indicated, as you could lodge a foreign body deeper into the airway. There were no obstructions in this patient’s mouth.\",\n                    ],\n                    subActions: [],\n                  },*/\n                ],\n              },\n            ],\n          },\n          {\n            id: \"neck\",\n            label: \"examine the patient's neck\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\"\"],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: true,\n            subActions: [\n              {\n                id: \"assessment-neck-injury\",\n                label: \"injury\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"assessment-tracheal-deviation\",\n                label: \"tracheal deviation\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"This patient's neck exam was normal, but remember, tracheal deviation suggests unequal intrathoracic pressure (for example, a pneumothorax). The trachea will be deviated away from the side with increased pressure.\",\n                ],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"assessment-JVD\",\n                label: \"jugular venous distension (JVD)\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"This patient's neck exam was normal, but remember,  JVD suggests that the heart is not adequately pushing out blood. Consider obstructive processes like a tension pneumothorax or hemothorax.\",\n                ],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"assessment-stepoffs\",\n                label: \"step-offs\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"This patient's neck exam was normal, but remember, a palpable step-off suggests a fracture.\",\n                ],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n            ],\n          },\n          {\n            id: \"chest\",\n            label: \"examine the patient's chest\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\"\"],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: true,\n            subActions: [\n              {\n                id: \"assessment-check-breath-sounds\",\n                label: \"Listen for breath sounds\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"The presence and quality of breath sounds can clue you into underlying problems (e.g., pneumothorax, asthma, fluid build-up in the lungs).\",\n                  \"This patient had diminished sounds on the left with crepitus, suggesting pneumothorax.\",\n                ],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"assessment-inspect-shoulders\",\n                label: \"Inspect and palpate shoulders\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Inspecting the shoulders for discoloration symmetry or deformity may identify dislocation or fracture of the shoulder (ex. humerus and scapula). This patient had pain with movement of the left shoulder.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"assessment-inspect-clavicles\",\n                label: \"Inspect and palpates clavicles\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"The clavicles should be inspected for any evidence of fractures. Though rare, clavicle fractures can cause a pneumothorax. This patient’s clavicles were normal.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"inspects-palpates-anterior-thorax\",\n                label:\n                  \"Inspect and palpate anterior thorax for injury, crepitation, and paradoxial motion or flail segments\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"The patient had some left-sided crepitus, suggesting that there is air under the skin, likely from an underlying lung injury, namely a pneumothorax.\",\n                  \"The patient had symmetric movement of his chest. Recall that paradoxical chest wall motion suggests flail chest, where multiple rib fractures lead to an unstable portion of the chest wall.\",\n                ],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [\n                  {\n                    id: \"inspects-chest-injury\",\n                    feedbackAbsent: [\"\"],\n                    subActions: [],\n                  },\n                  {\n                    id: \"inspects-palpates-anterior-thorax-crepitation\",\n                    feedbackAbsent: [\n                      \"The patient had some left-sided crepitus, suggesting that there is air under the skin, likely from an underlying lung injury, namely a pneumothorax.\",\n                      \"The patient had symmetric movement of his chest. Recall that paradoxical chest wall motion suggests flail chest, where multiple rib fractures lead to an unstable portion of the chest wall.\",\n                    ],\n                    subActions: [],\n                  },\n                  {\n                    id: \"inspects-anterior-thorax-paradoxical-motion\",\n                    feedbackAbsent: [\n                      \"The patient had symmetric movement of his chest. Recall that paradoxical chest wall motion suggests flail chest, where multiple rib fractures lead to an unstable portion of the chest wall.\",\n                    ],\n                    subActions: [],\n                  },\n                ],\n              },\n            ],\n          },\n          {\n            id: \"abdomen-pelvis\",\n            label: \"examine the patient's abdomen\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\"\"],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: true,\n            subActions: [\n              {\n                id: \"inspects-abdomen-injury\",\n                label: \"inspect and palpate for injury\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"inspects-palpates-abdomen-distension\",\n                label: \"inspect and palpate for distension\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"A distended abdomen suggests trauma and internal bleeding. Fortunately, the patient's abdominal exam was normal.\",\n                ],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"inspects-palpates-abdomen-rigidity\",\n                label: \"inspect and palpate for rigidity\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"A rigid abdomen suggests trauma and internal bleeding. Fortunately, the patient's abdominal exam was normal.\",\n                ],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n            ],\n          },\n          {\n            id: \"assess-pelvis\",\n            label: \"examine the patient's pelvis\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\"Be sure to do a thorough exam of the pelvis as the pelvis can be a source of life-threatening bleeding. The presence of blood or other fluids may indicate urethral, vaginal or rectal injury. Your exam of this patient’s pelvis and genitalia would have been normal.\"],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: true,\n            subActions: [\n              {\n                id: \"assessment-checks-pelvis\",\n                label: \"Inspect and compress the pelvis\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"Be sure to do a thorough exam of the pelvis as the pelvis can be a source of life-threatening bleeding. Fortunately, the patient's pelvis exam was normal.\",\n                ],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"inspects-genitalia-perineum-blood\",\n                label:\n                  \"Inspect the genitalia/perineum for blood, other fluids.\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"The presence of blood or other fluids may indicate urethral, vaginal or rectal injury. Your exam of this patient’s pelvis and genitalia would have been normal.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n            ],\n          },\n          {\n            id: \"extremities\",\n            label: \"examine the patient's upper and lower extremities\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\"\"],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: true,\n            subActions: [\n              {\n                id: \"inspects-extremities-injury\",\n                label: \"Inspect and palpate each extremity for injury\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [\n                  { id: \"inspects-right-arm-injury\", subActions: [] },\n                  { id: \"inspects-left-arm-injury\", subActions: [] },\n                  { id: \"inspects-right-leg-injury\", subActions: [] },\n                  { id: \"inspects-left-leg-injury\", subActions: [] },\n                ],\n              },\n              {\n                id: \"inspects-extremities-pulse\",\n                label: \"Inspect and palpate each extremity for pulse\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"Extremity pulses may be weak or non-palpable if your patient is in shock. This patient had normal extremity pulses\",\n                ],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [\n                  {\n                    id: \"inspects-right-arm-pulse\",\n                    feedbackAbsent: [\n                      \"Extremity pulses may be weak or non-palpable if your patient is in shock. This patient had normal extremity pulses\",\n                    ],\n                    subActions: [],\n                  },\n                  {\n                    id: \"inspects-left-arm-pulse\",\n                    feedbackAbsent: [\n                      \"Extremity pulses may be weak or non-palpable if your patient is in shock. This patient had normal extremity pulses\",\n                    ],\n                    subActions: [],\n                  },\n                  {\n                    id: \"inspects-right-leg-pulse\",\n                    feedbackAbsent: [\n                      \"Extremity pulses may be weak or non-palpable if your patient is in shock. This patient had normal extremity pulses\",\n                    ],\n                    subActions: [],\n                  },\n                  {\n                    id: \"inspects-left-leg-pulse\",\n                    feedbackAbsent: [\n                      \"Extremity pulses may be weak or non-palpable if your patient is in shock. This patient had normal extremity pulses\",\n                    ],\n                    subActions: [],\n                  },\n                ],\n              },\n              {\n                id: \"inspects-extremities-motor-function\",\n                label: \"Inspect and palpate each extremity for motor function\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"Diminished or absent mobility may suggest spinal cord or other nervous system injury. This patient was moving his extremities normally.\",\n                ],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [\n                  {\n                    id: \"inspects-right-arm-motor-ability\",\n                    feedbackAbsent: [\n                      \"Diminished or absent mobility may suggest spinal cord or other nervous system injury. This patient was moving his extremities normally.\",\n                    ],\n                    subActions: [],\n                  },\n                  {\n                    id: \"inspects-left-arm-motor-ability\",\n                    feedbackAbsent: [\n                      \"Diminished or absent mobility may suggest spinal cord or other nervous system injury. This patient was moving his extremities normally.\",\n                    ],\n                    subActions: [],\n                  },\n                  {\n                    id: \"inspects-right-leg-motor-ability\",\n                    feedbackAbsent: [\n                      \"Diminished or absent mobility may suggest spinal cord or other nervous system injury. This patient was moving his extremities normally.\",\n                    ],\n                    subActions: [],\n                  },\n                  {\n                    id: \"inspects-left-leg-motor-ability\",\n                    feedbackAbsent: [\n                      \"Diminished or absent mobility may suggest spinal cord or other nervous system injury. This patient was moving his extremities normally.\",\n                    ],\n                    subActions: [],\n                  },\n                ],\n              },\n              {\n                id: \"inspects-extremities-sensory-function\",\n                label:\n                  \"Inspect and palpate each extremity for sensory function\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"Diminished or absent sensation may suggest spinal cord or other nervous system injury. This patient's sensation was intact in his extremities.\",\n                ],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [\n                  {\n                    id: \"inspects-right-arm-sensory-function\",\n                    feedbackAbsent: [\n                      \"Diminished or absent sensation may suggest spinal cord or other nervous system injury. This patient's sensation was intact in his extremities.\",\n                    ],\n                    subActions: [],\n                  },\n                  {\n                    id: \"inspects-left-arm-sensory-function\",\n                    feedbackAbsent: [\n                      \"Diminished or absent sensation may suggest spinal cord or other nervous system injury. This patient's sensation was intact in his extremities.\",\n                    ],\n                    subActions: [],\n                  },\n                  {\n                    id: \"inspects-right-leg-sensory-function\",\n                    feedbackAbsent: [\n                      \"Diminished or absent sensation may suggest spinal cord or other nervous system injury. This patient's sensation was intact in his extremities.\",\n                    ],\n                    subActions: [],\n                  },\n                  {\n                    id: \"inspects-left-leg-sensory-function\",\n                    feedbackAbsent: [\n                      \"Diminished or absent sensation may suggest spinal cord or other nervous system injury. This patient's sensation was intact in his extremities.\",\n                    ],\n                    subActions: [],\n                  },\n                ],\n              },\n            ],\n          },\n          {\n            id: \"posterior\",\n            label: \"inspect and palpate the posterior thorax, lumbar, and buttocks for injury and step-offs\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\"You will need a partner to help you roll the patient safely in order to do a thorough exam of the posterior thorax, lumbar, and buttocks for injury and step-offs. A palpable step-off, which the patient did not have, would suggest a fracture.\"],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: true,\n            subActions: [\n              {\n                id: \"inspects-posterior-other-injury\", /* no feedback in excel sheet */\n                feedbackAbsent: [\"\"],\n                subActions: [],\n              },\n              {\n                id: \"inspects-posterior-step-offs\",\n                feedbackAbsent: [\"A palpable step-off, which the patient did not have, would suggest a fracture.\"],\n                subActions: [],\n              },\n            ],\n          },\n        ],\n      },\n      {\n        id: \"ongoing-mgmt-plan\",\n        label:\n          \"Continue to provide adequate prehospital care until arriving at the receiving facility\",\n        type: ACTION_TYPES.REQ,\n        feedbackAbsent: [\"\"],\n        feedbackOutOfOrder: [\"\"],\n        feedbackErrors: [\"\"],\n        examineIfAbsent: false,\n        examineIfErrors: false,\n        promptsIfAbsent: \"\",\n        promptsIfErrors: \"\",\n        subActionsList: true,\n        subActions: [\n          {\n            id: \"Manage non-life-threatening injuries\",\n            label:\n              \"Manage non-life-threatening injuries before transferring the patient to an immobilization device, including: splint wrist and sling shoulder\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\n              \"Splint the patient's wrist and apply a sling to his injured shoulder before transferring him to an immobilization device.\",\n            ],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: false,\n            subActions: [\n              {\n                id: \"intv-splint-fracture\",\n                feedbackAbsent: [\n                  \"Splint the patient's wrist before transferring him to an immobilization device.\",\n                ],\n                subActions: [],\n              },\n              {\n                id: \"intv-sling\",\n                feedbackAbsent: [\n                  \"Apply a sling to the patient's injured shoulder before transferring him to an immobilization device.\",\n                ],\n                subActions: [],\n              },\n            ],\n          },\n          {\n            id: \"intv-place-on-immobilization-device\",\n            label: \"Placing the patient on an immobilization device\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\n              \"An immobilization device (e.g., long backboard, vacuum mattress) maintains spinal alignment for transfer to the stretcher. This patient requires full spinal immobilization due to his mechanism of injury.  Failure to fully immobilize this patient could lead to further spinal injury.\",\n            ],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\n              \"Full spinal immobilization is required and should be maintained throughout transfer to the ambulance and transport to the care facility, due to the mechanism of injury and high likelihood of spinal injury.\",\n            ],\n            examineIfAbsent: true,\n            examineIfErrors: false,\n            promptsIfAbsent:\n              \"Thought cervical collar was adequate; Did not know how to transfer patient while maintaining spinal stability\",\n            promptsIfErrors: \"\",\n            subActionsList: false,\n            subActions: [],\n          },\n          {\n            id: \"intv-spinal-immobilization-technique-attach-cid\",\n            label: \"applied padding (e.g., CID, towels) to keep head inline with spine\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\n              \"Once the patient is transferred onto a long backboard or other spinal immobilization device, the CID should be utilized to maintain cervical spine precautions. This will reduce cervical motion and prevent further injury.\",\n            ],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: false,\n            subActions: [],\n          },\n          {\n            id: \"Reassess the patient\",\n            label: \"Reassess the patient\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\n              \"It is important to reassess your patient after every intervention and every clinical change. This includes repeating the primary survey, secondary survey, and vital signs. A critically ill patient should be reassessed more frequently to ensure he or she is still stable--approximately every 5 minutes.\",\n            ],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: true,\n            subActions: [\n              {\n                id: \"reassess-vitals-plus-frequency\",\n                label: \"Recheck vital signs every 5 minutes\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Vitals should be reassessed after every intervention and every clinical change, and a critically ill patient should be reassessed every 5 minutes since their condition could deteriorate rapidly.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [\n                  {\n                    id: \"reassess-vital-signs\",\n                    label: \"Recheck vital signs every 5 minutes\",\n                    type: ACTION_TYPES.REQ,\n                    feedbackAbsent: [\"Vitals should be reassessed after every intervention and every clinical change, and a critically ill patient should be reassessed more frequently to ensure he or she is still stable.\"],\n                    feedbackOutOfOrder: [\"\"],\n                    feedbackErrors: [\"\"],\n                    examineIfAbsent: false,\n                    examineIfErrors: false,\n                    promptsIfAbsent: \"\",\n                    promptsIfErrors: \"\",\n                    subActionsList: false,\n                    subActions: [], \n                  },\n                  {\n                    id: \"decision-vitals-frequency\",\n                    label: \"decision vitals frequency\",\n                    type: ACTION_TYPES.REQ,\n                    feedbackAbsent: [\"Critical patients' vital signs should be reassessed every 5 minutes, since their condition could deteriorate rapidly.\"],\n                    feedbackOutOfOrder: [\"\"],\n                    feedbackErrors: [\"Critical patients' vital signs should be reassessed every 5 minutes, since their condition could deteriorate rapidly.\"],\n                    examineIfAbsent: false,\n                    examineIfErrors: false,\n                    promptsIfAbsent: \"\",\n                    promptsIfErrors: \"\",\n                    subActionsList: false,\n                    subActions: [], \n                  },\n                ],\n              },\n              {\n                id: \"repeat-primary-survey\",\n                label: \"Repeat the Primary Survey\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"It is important to reassess your patient after every intervention and every clinical change, which includes the primary survey. For example, a patient with a neck injury whose breathing was initially non-labored may develop stridor as the airway becomes swollen.\",\n                ],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"repeat-secondary-survey\",\n                label: \"Repeat the Secondary Survey\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\n                  \"It is important to reassess your patient after every intervention and every clinical change, which includes your secondary survey. For example, a patient may lose their pulses if you initially failed to notice and treat a source of hemorrhage.\",\n                ],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n            ],\n          },\n          {\n            id: \"intv-control-shock-technique-keep-patient-warm\" /* Collin: can you list vertically the items on the list in the field \"label\"? */,\n            label:\n              \"Keep the patient warm, using some of the following methods: (1) apply heat packs to the patient's groin or armpits, (2) remove wet clothing, (3) cover the patient with blankets, (4) turn the heat up in the ambulance.\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\n              \"This patient is hypotensive with a fast heart rate, suggesting possible shock. Patients in shock have trouble maintaining their body temperatures, so they should be kept warm. It is important to keep this patient warm because hypothermia can cause additional problems or worsening of the patient's current problems, including worsening hypotension, arrhythmias, or even cardiac arrest.\",\n            ],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: false,\n            subActions: [],\n          },\n          {\n            id: \"intv-establish-iv\",\n            label: \"Establish at least one large bore IV en route\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\n              \"All trauma patient should have at least one, ideally two, large-bore IVs placed, even if they do not require fluid resuscitation.\",\n            ],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\n              \"With a critical patient, you should ideally establish two large bore IV's while en route to the receiving facility, so as not to delay transfer to definitive care.  While this patient does not require fluid resuscitation at this time, you want to ensure you are prepared should this change.\",\n            ],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: false,\n            subActions: [],\n          },\n          {\n            id: \"intv-prepare-and-administer-pain-nausea-vomiting-medications\", /* optional intervention */\n            label: \"Prepare and administer medications\",\n            type: ACTION_TYPES.OPT,\n            feedbackAbsent: [\"\"],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\n              \"A conscious patient with a 9/10 pain level may benefit from analgesia. Fentanyl at 1 mcg/kg (per protocol) likely would have minimal effects -- if any -- on his respiratory drive.  However, full spinal immobilization and administering life-saving interventions would take priority over starting an IV and administering pain medications.\",\n              ],\n            subActionsList: false,\n            subActions: [],\n          },\n          {\n            id: \"intv-contact-medical-command\", /* optional intervention */\n            label: \"Contact Medical Command\",\n            type: ACTION_TYPES.OPT,\n            feedbackAbsent: [\"\"],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"\"],\n            subActions: [],\n          },\n          {\n            id: \"reassess-med-admin\", /* optional intervention */\n            label: \"Checks that pain medications are working.\",\n            type: ACTION_TYPES.OPT,\n            feedbackAbsent: [\"\"],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: false,\n            subActions: [],\n          },\n          {\n            id: \"intv-contact-receiving-facility\",\n            label: \"Provide a patient report and ETA to the receiving facility\",\n            type: ACTION_TYPES.REQ,\n            feedbackAbsent: [\n              \"The hospital requires notification for all incoming patients 5 -15 prior to arrival, which is especially important for critical patients as the receiving team needs time to prepare equipment and space.\",\n            ],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: false,\n            subActions: [],\n          },\n          {\n            id: \"intv-place-directly-on-stretcher\" /* contraindicated intervention */,\n            label: \"Place patient directly on stretcher\",\n            type: ACTION_TYPES.CONTRA,\n            feedbackAbsent: [\"\"],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"This patient requires full spinal immobilization due to his mechanism of injury.\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: false,\n            subActions: [],\n          },\n          {\n            id: \"intv-walk-patient-to-ambulance\" /* contraindicated intervention */,\n            label: \"Walk patient to ambulance\",\n            type: ACTION_TYPES.CONTRA,\n            feedbackAbsent: [\"\"],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"This patient requires full spinal immobilization due to his mechanism of injury.\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: false,\n            subActions: [],\n          },\n          {\n            id: \"intv-control-shock-technique-administer-iv-boluses\" /* unnecessary intervention */,\n            label: \"IV fluid resuscitation\",\n            type: ACTION_TYPES.UNNEC,\n            feedbackAbsent: [\"\"],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\n              \"This patient is not hypotensive and does not require fluid resuscitation. You should establish IV access, however, and should this change, you would be prepared to start fluids.\",\n            ],\n            examineIfAbsent: false,\n            examineIfErrors: true,\n            promptsIfAbsent: \"\",\n            promptsIfErrors:\n              \"thought that hypotension should be treated with fluid boluses regardless of etiology\",\n            subActionsList: false,\n            subActions: [],\n          },\n          {\n            id: \"intv-apply-sterile-dressings\" /* contraindicated intervention */,\n            label: \"Apply sterile dressings\",\n            type: ACTION_TYPES.CONTRA,\n            feedbackAbsent: [\"\"],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\n              \"The patient did not have any signifcant injuries to the skin.\",\n            ],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: false,\n            subActions: [],\n          },\n          {\n            id: \"intv-prepare-amputated-part\" /* contraindicated intervention */,\n            label: \"Prepare amputated part for transport\",\n            type: ACTION_TYPES.CONTRA,\n            feedbackAbsent: [\"\"],\n            feedbackOutOfOrder: [\"\"],\n            feedbackErrors: [\"The patient did not have an amputation.\"],\n            examineIfAbsent: false,\n            examineIfErrors: false,\n            promptsIfAbsent: \"\",\n            promptsIfErrors: \"\",\n            subActionsList: false,\n            subActions: [],\n          },\n        ],\n      },\n    ],\n  },\n};\n","// type Phase_D = {\n//     step:  string;\n//     title: string;\n//     text:  string[];\n// };\n\n// type Phase_E = {\n//     step:        string;\n//     title:       string;\n//     description: string;\n//     text:        string[];\n// };\n\n// type Phase_B = {\n//     step: string;\n//     expectations:\n//         {\n//             id:      string;\n//             heading: string;\n//             benchmarks:\n//                 {\n//                     id:   string;\n//                     text: string;\n//                     subBenchmarks: \n//                         {\n//                             id:              string;\n//                             phase:           object;\n//                             checklistItems:  string[];\n//                             feedback:        string;\n//                             type:            string;\n//                         }[];\n//                 }[];\n//         }[];\n// };\n\n// type Phase_R = {\n//     step:    string;\n//     slides:  string[] | { text: { __html: string; linkHoverText: object; }}[];\n// };\n\n// type Phase_F = {\n//     step:      string;\n//     title:     string;\n//     heading:   string;\n//     questions: string;\n// };\n\n// type Step_Data = [Phase_D, Phase_E, Phase_B, Phase_R, Phase_F];\n\n// export const STEP_DATA: Step_Data = [\n\n    import {link, para, text} from \"./utils\";\n\n    export const B5CA_PhaseDEBRF = [\n        {\n            step: \"D\",\n            title: \"Define Rules:\",\n            text: [\"The purpose of this debriefing is to reflect on the scenario you have just completed in order to help you improve your skills as a paramedic.  It is not meant to assess your overall abilities as a paramedic.\", \"This debriefing will summarize the learning objectives of this scenario and the performance benchmarks (standards) for achieving each objective.  The system will then prompt you to examine differences between the treatment actions that you performed and those indicated by the clinical findings revealed during the scenario, or that would have been revealed by a more thorough assessment and reassessment of this patient.  Finally, it will prompt you to state some 'take home points' to improve your performance.\"]\n        },\n        {\n            step: \"E\",\n            title: \"Explain the learning objectives:\",\n            description: \"This scenario was designed to give you practice with:\",\n            text: [\n                \"Conducting a thorough trauma patient assessment\",\n                \"Managing a potential head or spinal injury\",\n                \"Managing inadequate breathing due to a tension pneumothorax\",\n                \"Making appropriate transport decisions\",\n                \"Performing ongoing patient management and assessment\",\n            ]\n        },\n        {\n            step: \"B\",\n            expectations: [\n                {\n                    expectationText: \"Conduct a thorough trauma assessment\",\n                    benchmarks: [\n                        {\n                            benchmarkText: \"Before approaching patient, apply PPE, check that the scene is safe, determine the number of patients, and request additional help if necessary\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"On initial patient contact, form a general impression of the patient's condition, assess patient's level of consciousness, and identify apparent life threats\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"During the Primary Survey:\",\n                            subBenchmarks: \n                            [\n                                \"Check that airway is open, clear of fluids and foreign bodies, and has intact physical structures\", \n                                \"Listen for abnormal breath sounds and check breathing rate, rhythm, and quality\", \n                                \"Check circulation: pulse rate/rhythm/quality; skin color/temperature/condition; perform gross blood sweep\",\n                                \"Determine the need for rapid transport\",\n                                \"Trauma expose patient\"\n                            ]\n                        },\n                        {\n                            benchmarkText: \"Take baseline vitals and, if possible, obtain SAMPLE history and OPQRST\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Perform a rapid head-to-toe assessment (Secondary Survey), looking/listening/feeling for DCAP-BTLS and abnormal conditions at each body part (e.g., check neck for tracheal deviation and JVD).\",\n                            subBenchmarks: []\n                        },\n                    ]\n                },\n                {\n                    expectationText: \"Manage a potential head or spinal injury\",\n                    benchmarks: [\n                        {\n                            benchmarkText: \"Identify the potential for cervical spine injury during the scene size up\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Direct manual stabilization of the cervical spine before checking airway, breathing and circulation\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Apply an appropriately sized cervical collar\",\n                            subBenchmarks: []\n                        },\n                    ]\n                },\n                {\n                    expectationText: \"Manage inadequate breathing due to a tension pneumothorax\",\n                    benchmarks: [\n                        {\n                            benchmarkText: \"Diagnose a simple pneumothorax during the primary survey\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Provide concentrated O2 via a non-rebreather mask or, if not tolerated or ineffective, assist ventilations using BVM at a rate of 10-12 BPM\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Titrate oxygen to SpO2 of 95-99%\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Insert a needle in the right chest at the 2nd or 3rd intercostal space, at the mid-clavicular line OR fourth of fifth intercostal space, at the mid-axillary line.  Use a needle that is at least 14 or 16 gauge and at least 2 inches in length.\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Apply an occlusive dressing to the chest to prevent further influx of air into lungs\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Confirm your interventions had the desired effects: listen for a rush of air, listen for bilateral lung sounds, and re-evaluate vital signs\",\n                            subBenchmarks: []\n                        },\n                    ]\n                },\n                {\n                    expectationText: \"Make appropriate transport decisions\",\n                    benchmarks: [\n                        {\n                            benchmarkText: \"Rapid transport to a Level 2 trauma facility by ground ambulance, using lights and sirens\",\n                            subBenchmarks: []\n                        },\n                    ]\n                },\n                {\n                    expectationText: \"Perform ongoing patient management and assessment\",\n                    benchmarks: [\n                        {\n                            benchmarkText: \"Dress minor wounds over ear and on hands.\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Reassess vitals every 5 minutes; repeat primary and secondary survey\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Establish at least one large bore IV en route\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Bolus normal saline or Lactated Ringers to a goal BP of 90 mmHg systolic, if time permits\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Keep the patient warm by covering the patient with blankets, turning the heat up in the ambulance, applying heat packs, etc.\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Contact receiving facility.  Provide complete report on patient's condition and ETA\",\n                            subBenchmarks: []\n                        },\n                    ]\n                }\n            ]\n        },\n        {\n            step: \"R\",\n            slides: [\n                {\n                    paragraphs: [\n                        para(\n                            text(\"In an idealized scenario, you arrive on scene and find a patient leaning against the bar. Your initial assessment reveals a patient who is awake but responds only to verbal requests and is holding his hand over a bloody chest wound.\")\n                        ),\n                        para(\n                            text(\"You immediately direct your partner to provide\"),\n                            link(\"manual c-spine stabilization\", \"Though there is no apparent spine trauma, given that you do not know the full extent of what happened in the fight, it is safest to assume spinal precautions at the beginning of your assessment.\"),\n                            text(\"and apply a cervical collar. You note the patient’s airway is patent but his breathing is rapid and shallow so you place him on a\"),\n                            link(\"non-rebreather mask.\", \"Though you might consider using a bag-valve mask to assist with ventilation in this patient, the patient has a penetrating chest wound and could have a tension pneumothorax, so positive-pressure ventilation should be avoided if possible.\"),\n                            text(\"His extremity pulses are weak and his skin is pale and diaphoretic.\")\n                        )\n                    ]\n                },\n                {\n                    paragraphs: [\n                        para(\n                            text(\"You instruct another responder to obtain a set of baseline vitals and obtain a SAMPLE and OPQRST history from a bystander while you perform a rapid head-to-toe assessment. As you examine the patient you note diminished breath sounds on the right and a stab wound to the right chest. Combined with his significant hypotension, you suspect the patient has a right tension pneumothorax. You perform\"),\n                            link(\"needle decompression of the right lung,\", \"A large bore needle (at least 14 or 16 gauge) should be inserted in the R chest at the 2nd or 3rd intercostal space at the mid-clavicular line OR fourth of fifth intercostal space at the mid-axillary line to decompress the tension pneumothorax that is causing the patient’s respiratory distress and obstructive shock.\"),\n                            text(\"the success of which you confirm with a repeat lung exam and note an improvement in the patient’s vital signs. Additionally, you place an\"),\n                            link(\"occlusive dressing\", \"This patient has a penetrating chest wound that, if untreated, will continue to allow air to collect around the lungs, worsening his tension pneumothorax. Be sure to only tape 3 sides to prevent air from entering the lungs while still allowing blood and air to escape.\"),\n                            text(\"over the initial penetrating chest wound to prevent re-accumulation of air. After completing your secondary survey, you then\"),\n                            link(\"use a scoop stretcher\", \"While a cervical collar is appropriate when you approach this trauma patient, further spinal immobilization is contraindicated in this patient with a penetrating chest wound, as immobilization on a spine board may cause further injury.\"),\n                            text(\"to transfer him to the ambulance.\")\n                        ),\n                        para(\n                            text(\"While en route, you and your partner cover the patient with a blanket and notify the level II trauma center of the patient’s condition and give an ETA. You establish two large bore IVs, administer fluids only as needed to\"),\n                            link(\"maintain systolic BP >90,\", \"Initially this patient’s BP is 58/palp, which is due to obstruction shock secondary to his tension pneumothorax. With appropriate management of the tension pneumothorax and resumption of normal cardiac output, you should see an improvement in the patient’s blood pressure without need for significant fluid resuscitation.\"),\n                            text(\"reassess the patient\"),\n                            link(\"every five minutes,\", \"This critically ill patient should be reassessed every 5 minutes\"),\n                            text(\"and confirm that all interventions are working properly, modifying any as necessary.\")\n                        )\n                    ]\n                }\n            ]\n        },\n        {\n            step: \"F\",\n            title: \"Formalize learning\",\n            heading: \"Please take a few minutes to think and reply to these questions\",\n            questions: \"What are your key take-home points from this scenario? What is something you want to continue working on or do differently in the future?\"\n        }\n    ];","/* Data for scenario C5CA phase IE \nThis data structure holds all the information to create the slides to present during the IE phase.\nIt mirrors the tree structure that is presented in the Excel file. All nodes in the tree are called actions whether \nthey are assessments or interventions. Subactions are the children of the actions in the tree.\nFields:\nid: identifies the action-node in the tree. It is a string since it is unique.\nlabel: text for the action as it will appear on the slide\ntype: indicates whether the action is Required, Contraindicated, Unnecessary, Irrelevant, Optional, Alternative.\n    Required, it will be listed in the left side of the slide so that students are asked if they performed it.\n    Contraindicated: it will be listed on the right side under a list of contraindicated actions that the student performed\n    accompanied by the feedback on the feedbackErrors field.\n    Unnecessary: it will be listed on the right side under a list of unnecessary actions that the student performed\n    accompanied by the feedback on the feedbackErrors field.\n    Irrelevent: it will be listed on the right side under a list of irrelevant actions that the student performed\n    accompanied by the feedback on the feedbackErrors field.\n    Optional: it will be accepted as correct if performed. We are considering it the same as Unnecessary.\n    Alternative: will be used for those interventions that can be performed as alternative to required ones.\nAlternativeToIntv: indicates the intervention for which the current one is an alternative. It will only have a value if\nthe type is Alternative.\nfeedbackAbsent: feedback given if the action was no performed\nfeedbackOutOfOrder: feedback given if the action was done late (e.g., if the action is Scene size-up and it was done \n    after Primary Survey)\nfeedbackErrors: feedback if the action was performed incorrectly (e.g., wrong ventilation rate)\nexamineIfAbsent: boolean to indicate if this Action needs to be examined when it is Absent (phase E)\nexamineIfErrors: boolean to indicate if this Action needs to be examined when there are performance errors (phase E)\npromptsIfAbsent: prompts to be included in question headers in phase E, to hint on how to reflect when Action was Absent\npromptsIfErrors: prompts to be included in question headers in phase E, to hint on how to reflect when Action was performed incorrectly\nsubActionsList: boolean that indicates whether the subActions need to be listed as bullet points on the slide. If they\n    don't need to be listed it is usually because they have been grouped however, the subActions still need to be \n    included in the subActions field because they are used by the analysis to give a summary of their status.\nsubActions: array with the corresponding subactions (to form the tree)\n*/\n\nimport { ACTION_TYPES, WAIT_TIFF, WAIT_SANDY, SUM_NODE_NO_FEEDBACK, NO_FEEDBACK, SUM_NODE_FBCK_CHILDREN} from \"./constants\";\n\nexport const B5CA_PhaseIE = {\n    Action: {\n      id: \"top\",\n      label: \"fully assess and manage the patient in this scenario\", /* the way it will appear on the slide */\n      type: ACTION_TYPES.REQ, /*indicates whether the action was Required, Contraindicated, Unnecessary, or Irrelevant\" */\n      feedbackAbsent: [\"Your log indicates you didn't complete any of these assessment or managment goal. Please restart the scenario and try again\"], /*feedback if the action was not performed*/\n      feedbackOutOfOrder: [\"\"], /*feedback if the action was done late (e.g., if the action is Scene Size-up \n        and it was done after Primary Survey)*/\n      feedbackErrors: [\"\"], /*feedback if the action was performed incorrectly (e.g. wrong Ventilation rate)*/\n      examineIfAbsent: false, /* boolean to indicate if this Action needs to be examined (phase E) */\n      examineIfErrors: false,\n      promptsIfAbsent: \"\", /* prompts to the included in question in phase E to hint on how to reflect */\n      promptsIfErrors: \"\",\n      subActionsList: true, /* boolean that indicates if subActions need to be listed as bullet points on slide */\n      subActions: [ /*array with the corresponding subactions (to form the tree)*/\n        {\n          id: \"scene-size-up\",\n          label: \"Put on BSI and do a complete Scene Size-up before entering the scene\",\n          type: ACTION_TYPES.REQ,\n          feedbackAbsent: [\"Your first steps should have been to don your protective wear, including eye protection, and to ensure the scene is safe. You cannot assist a patient if you are not safe yourself.\",\"Your scene size up gives you a big-picture view of what is going on before you even begin examining the patient and includes determining the mechanism of injury and number of patients, requesting additional help if necessary, and considering stabilization of the spine.\",\"In this case, you would have learned that this patient was involved in a bar fight and stabbed in the chest with a knife, which should prompt you to think about potential intrathoracic injuries, such as a pneumothorax or an injury to the aorta or other major vessel.\"],\n          feedbackOutOfOrder: [\"Your first steps should have been to don your protective wear, including eye protection, and to ensure the scene is safe. You cannot assist a patient if you are not safe yourself.\",  \"Your scene size up also gives you a big-picture view of what is going on before you even begin examining the patient. This includes determining the mechanism of injury and number of patients, requesting additional help if necessary, and considering stabilization of spine.\"],\n          feedbackErrors: [\"\"],\n          examineIfAbsent: false,\n          examineIfErrors: false,\n          promptsIfAbsent: \"\",\n          promptsIfErrors: \"\",\n          subActionsList: true,\n          subActions: [\n            {\n                id: \"required-action-BSI\",\n                label: \"Apply BSI\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Your first steps should have been to don your protective wear, including eye protection, and to ensure the scene is safe. You cannot assist a patient if you are not safe yourself.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"assess-scene-safety\",\n                label: \"Determine the scene/situation is safe\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Your first steps should have been to don your protective wear, including eye protection, and to ensure the scene is safe. You cannot assist a patient if you are not safe yourself.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"assess-injury-mechanism\",\n                label: \"Determine the mechanism of injury (MOI) or nature of illness (NOI)\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Knowing what caused the patient's injury or illness can allow you to start developing a plan of action before you even assess your patient.\", \"In this case, you would have learned that this patient was involved in a bar fight and stabbed in the chest with a knife, which should prompt you to think about potential intrathoracic injuries, such as a pneumothorax or an injury to the aorta or other major vessel.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"assess-num-patients\",\n                label: \"Determine the number of patients\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Usually you will have one patient, but if there is more than one you will need to plan accordingly.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"required-action-requests-additional-help\",\n                label: \"Request additional help if necessary\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Consider extra help based on number of patients, mechanism of injury, or your patient's status.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"required-action-considers-stabilize-spine\",\n                label: \"Consider stabilization of spine\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"All trauma patients are at risk for spinal injury. Take this into consideration before initial contact with the patient to prevent unintentional injury. While a stab wound to the chest may not be high-risk, if you don't know everything that happened during the altercation, you should have erred on the side of caution.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n          ],\n        },\n        {\n          id: \"primary-survey\",\n          label: \"Perform a Primary Survey and manage all identified life threats\",\n          type: ACTION_TYPES.REQ,\n          feedbackAbsent: [\"The primary survey is an assessment of mental status, life-threats, and the patient's ABCs. It is where you will identify and address the patient's most serious injuries.\", \"In this case, the Primary Survey would have revealed a patient who is conscious but is having trouble breathing. Your primary survey does not reveal any apparently life threats so you can move forward to the next step of your assessment.\"],\n          feedbackOutOfOrder: [\"You should have started your Primary Survey after the Scene Size-up and completed it before starting the Secondary Survey. Only interrupt your assessment to control life-threats: (1) Conditions that comprimise a patent airway (2) Conditions that compromise breathing or respirations, such as a tension pneumothorax, (3) Conditions that compromise circulation, such as severe bleeding, (4) Cardiac arrest, and any  other potentially life threatening injuries or conditions.  Your patient's condition will deteriorate if these conditions are not addressed before continuing on with your assessment and history taking.\"],\n          feedbackErrors: [\"\"],\n          examineIfAbsent: false,\n          examineIfErrors: false,\n          promptsIfAbsent: \"\",\n          promptsIfErrors: \"\",\n          subActionsList: true,\n          subActions: [\n            {\n                id: \"general-impression\",\n                label: \"Conduct an Initial Assessment\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"You should have performed an Initial Assessment: gathered a general impression, identified any apparent life threats, and determined your patient's level of consciousness.  Your Initial Assessment would have revealed a patient who is conscious but having respiratory distress.\"],\n                feedbackOutOfOrder: [\"While you may be tempted to jump straight into your ABCs, apparent life threats (i.e., uncontrolled bleeding) should be addressed first, as they can cause a patient to deteriorate quickly. Also, be sure to assess the patient's level of consciousness as an unconscious patient will need a pulse check first to ensure he or she does not require CPR.\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"assess-patient-condition\",\n                        label: \"State or request a general impression\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Your general impression allows you to start developing a plan of action before you even assess your patient.\", \"In this case, your general impression would have been of a man stabbed in the chest with a knife.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"assess-loc\",\n                        label: \"Assess the patient's level of consciousness\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"The patient's level of consciousness alters how you progress through your assessment.\", \"The patient is conscious, but with a GCS of 13 (eyes closed, responds to verbal stimuli).\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"assess-life-threats\",\n                        label: \"Determine the chief complaint/apparent life-threats\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"If you had determined apparent life threats, you would have noticed that the patient was conscious without apparent immediate life threats.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"Manage a potential head or spinal injury\",\n                label: \"Manage a potential head or spinal injury\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Part of managing a head and/or spinal injury includes manual stabilization of the cervical spine before beginning your assessment, as movement may further injure the patient. While this patient may not have an obvious injury to the head or spine, you want to always stabilize the spine before you begin your assessment. As you continue your assessment, you may decide he no longer needs spinal stabilization, but you will never be wrong to err on the side of caution. A cervical collar will help you maintain stability while you continue with your exam.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: true,\n                examineIfErrors: false,\n                promptsIfAbsent:\"Did not consider risk for cervical spine injury; considered cervical spine injury but did not think the mechanism necessitated spinal stabilization\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                  {\n                    id: \"intv-spinal-immobilization-technique-manual-c-spine\",\n                    label: \"Apply (or direct a partner to apply) manual c-spine stabilization\",\n                    type: ACTION_TYPES.REQ,\n                    feedbackAbsent: [\"Part of managing a head and/or spinal injury includes manual stabilization of the cervical spine before beginning your assessment, as movement may further injure the patient. While this patient may not have an obvious injury to the head or spine, you want to always stabilize the spine before you begin your assessment. As you continue your assessment, you may decide he no longer needs spinal stabilization, but you will never be wrong to err on the side of caution.\"],\n                    feedbackOutOfOrder: [\"During trauma situations it is necessary to stabilize the c-spine before continuing as not doing so may cause further injury to the patient.\"],\n                    feedbackErrors: [\"\"],\n                    examineIfAbsent: false,\n                    examineIfErrors: false,\n                    promptsIfAbsent: \"\",\n                    promptsIfErrors: \"\",\n                    subActionsList: false,\n                    subActions: [],\n                  },\n                  {\n                    id: \"intv-spinal-immobilization-technique-cervical-collar\",\n                    label: \"Apply an appropriately sized cervical collar\",\n                    type: ACTION_TYPES.REQ,\n                    feedbackAbsent: [\"A cervical collar will help you maintain stability while you continue with your exam.\"],\n                    feedbackOutOfOrder: [\"\"],\n                    feedbackErrors: [\"\"],\n                    examineIfAbsent: false,\n                    examineIfErrors: false,\n                    promptsIfAbsent: \"\",\n                    promptsIfErrors: \"\",\n                    subActionsList: false,\n                    subActions: [],\n                  },\n                ],\n              },\n              {\n                id: \"airway\",\n                label: \"Assess the patient's airway\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Be sure to assess the airway for patency and intact physical structures.\", \"You would have found this patient's airway to be patent, as evidenced by the fact that he can speak to you.\"],\n                feedbackOutOfOrder: [\"If your patient is conscious, you should examine the airway before breathing and circulation. If a patient is unconscious, you should assess the pulse first to evaluate for possible cardiac arrest, then go through your ABCs.\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                      {\n                        id: \"airway-is-open\",\n                        label: \"Check if the airway is patent\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"The first step of your airway assessment is to see if the patient's airway is open. If the patient is speaking normally, like in this patient, it is open. Signs like stridor or gasping may indicate an airway obstruction.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"airway-has-intact-physical-structures\",\n                        label: \"Check if the airway has intact physical structures\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Though this patient did not have any facial trauma, be sure to look for injuries such as gun-shot wounds or facial fractures, as these may affect what basic or advanced airways you can use.  Avoid using a nasopharyngeal airway in patients with a suspected basilar skull fracture or nasal injury.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-open-airway-method-head-tilt\", /*contraindicated intervention */\n                        label: \"Head tilt chin lift\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"This patient's airway is patent, as is evident by the fact that he is talking--for example, complaining about pain and difficulty breathing.  If his condition deteriorates and you have reason to suspect that his airway may be compromised, you should check the  airway while maintaining the cervical spine: use a modified jaw thrust maneuver instead of a head tilt chin lift.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-open-airway-method-modified-jaw-thrust\", /* unnecessary intervention */\n                        label: \"Open the patient's airway with a jaw thrust maneuver\",\n                        type: ACTION_TYPES.UNNEC,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"This patient's airway is patent, as is evident by the fact that he is talking--for example, complaining about pain and difficulty breathing.  If his condition deteriorates and you have reason to suspect that his airway may be compromised, you should check the  airway while maintaining the cervical spine: use a modified jaw thrust maneuver instead of a head tilt chin lift.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-airway-patency-technique-suction-airway\", /* contraindicated intervention */\n                        label: \"Suction the patient's mouth using a Yankauer (rigid)  or Long multi-use catheter\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"This patient's airway was patent. There is no need to suction.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-manual-finger-sweep\", /* contraindicated intervention */\n                        label: \"Manual (finger sweep)\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"If there is a visible foreign body in the mouth, it should be removed. However, a blind finger sweep is contraindicated as it could lodge a foreign body deeper into the airway. Further, there is no evidence of foreign body in this patient's mouth.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-magill-forceps-assisted\", /* contraindicated intervention */\n                        label: \"Magill forceps assisted removal\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"If there is a visible foreign body in the mouth, it should be removed. However, there is no evidence of a foreign body in this patient's mouth.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-heimlich-maneuver\", /* contraindicated intervention */\n                        label: \"Heimlich Maneuver\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"You have no evidence the patient is choking on an object so the Heimlich maneuver is not appropriate at this time.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-back-blows-and-chest-thrusts\", /* contraindicated intervention */\n                        label: \"Back blows and chest thrusts\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"You have no evidence the patient is choking on an object so back blows and chest thrusts are not appropriate at this time.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-oropharyngeal-airway\", /* contraindicated intervention */\n                        label: \"Oropharyngeal airway (OPA)\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"This patient requires only a nasal canula or non-rebreather mask. An airway adjunct is unnecessary and would likely be refused by this conscious patient.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-nasopharyngeal-airway\", /* contraindicated intervention */\n                        label: \"Nasopharyngeal airway (NPA)\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"This patient requires only a nasal canula or non-rebreather mask. An airway adjunct is unnecessary and would likely be refused by this conscious patient.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-orotracheal-intubation\", /* contraindicated intervention */\n                        label: \"Orotracheal intubation\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"This patient's respiratory status can be stabilized with oxygen administered via a nasal canula or non-rebreather mask. More invasive airway support is unnecessary and dangerous.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: true,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        promptsIfErrors: \"Thought this patient needed to be intubated\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-nasotracheal-intubation\", /* contraindicated intervention */\n                        label: \"Nasotracheal intubation\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"This patient's respiratory status can be stabilized with oxygen administered via a nasal canula or non-rebreather mask. More invasive airway support is unnecessary and dangerous.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: true,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"Thought this patient needed to be intubated\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-insert-advanced-airway\", /* contraindicated intervention */\n                        label: \"Insert advanced/rescue airway\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"This patient's respiratory status can be stabilized with oxygen administered via a nasal canula or non-rebreather mask. More invasive airway support is unnecessary and dangerous.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: true,\n                        examineIfAbsent: \"\",\n                        promptsIfErrors: \"Thought this patient needed to be intubated\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-rapid-sequence-intubation\", /* contraindicated intervention */\n                        label: \"Rapid-sequence intubation\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"RSI is not in the paramedic's scope of practice in Pennsylvania. This patient's respiratory status can be stabilized with oxygen administered via a nasal canula or non-rebreather mask. More invasive airway support is unnecessary and dangerous.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: true,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"Thought this patient needed to be intubated\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-sedation-assisted-intubation\", /* contraindicated intervention */\n                        label: \"Sedation-assisted intubation\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"This patient's respiratory status can be stabilized with oxygen administered via a nasal canula or non-rebreather mask. More invasive airway support is unnecessary and dangerous.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: true,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"Thought this patient needed to be intubated\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-needle-cricothyrotomy\", /* contraindicated intervention */\n                        label: \"Needle cricothyrotomy\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"A cricothrotomy is indicated when there is an upper airway obstruction that cannot be removed. This patient has a patent airway.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: true,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"thought the patient had an upper airway obstruction\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-surgical-cricothyrotomy\", /* contraindicated intervention */\n                        label: \"Surgical cricothyrotomy\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"A cricothyrotomy is indicated when there is an upper airway obstruction that cannot be removed. This patient has a patent airway.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: true,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"thought the patient had an upper airway obstruction\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"breathing\",\n                label: \"Assess the patient's breathing\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"After assessing the patient's airway, assess their breathing by listening for breath sounds and observing their respiratory rate, rhythm, and effort.\", \"You would have found tachypnea, shallow breaths, with absent sounds on the right, suggesting possible pneumothorax or hemothorax.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"breathing-checks-rate\",\n                        label: \"rate\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"A significantly elevated or depressed respiratory rate can suggest impending respiratory failure.\", \"This patient's tachypnea suggests the need for some respiratory support.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"breathing-checks-rhythm\",\n                        label: \"rhythm\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Although not found in this case, a patient who is breathing irregularly needs ventilatory support.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"breathing-checks-quality\",\n                        label: \"quality\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Sounds like stridor, crackles, or wheezing will help you diagnose and manage your patient's respiratory problems.\", \"This patient had absent breath sounds on the right, suggesting a possible pneumothorax or hemothorax.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"Manage inadequate breathing\",\n                label: \"Manage inadequate breathing\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"The patient is taking rapid, shallow breaths. He is diminished on the L with an SpO2 of 88%. These are signs that this patient has a pneumothorax, possibly even a tension pneumothorax, and requires respiratory support.\"],\n                feedbackOutOfOrder: [\"Problems with ventilation and oxygenation are life threatening and should be addressed before you move on to your secondary survey. Repeat your exam and check vitals to ensure your interventions have worked as you expected. If not, your patient may deteriorate as you continue on with your examination.\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: true,\n                examineIfErrors: false,\n                promptsIfAbsent: \"thought the patient had a simple pneumothora; didn't realize the patient had a pneumothorax; didn't know the best way to manage the patient's tension pneumothorax\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"intv-non-rebreather-mask-or-nasal-cannula\",\n                        label: \"administering concentrated oxygen via a non-rebreather mask or nasal cannula\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"The patient's respiratory rate is fast, but he is ventilating adequately. His SpO2, however, is low, suggesting inadequate oxygenation. You can use either a nasal canula or non-rebreather mask to help with oxygenation. Note that you are not assisting the patient with ventilation. In the case of a pneumothorax, you should avoid positive pressure ventilation, if possible, as this could increase the amount of air outside of the lungs, turning a pneumothorax into a tension pneumothorax.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"This patient should be allowed to breathe independently. O2 flow rate should be adjusted to achieve an SpO2 between 95 and 99%.\"],\n                        examineIfAbsent: true,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"didn't realize that the patient's respiratory status was threatened; thought this patient needed ventilatory support; did not recognize the possibility of a pneumothorax\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                            {\n                                id: \"intv-supplemental-oxygen-device-non-rebreather-mask\",\n                                label: \"administer concentrated oxygen via a non-rebreather mask\",\n                                type: ACTION_TYPES.REQ,\n                                feedbackAbsent: [\"The patient's respiratory rate is fast, but he is ventilating adequately. His SpO2, however, is low, suggesting inadequate oxygenation. You can use either a nasal canula or non-rebreather mask to help with oxygenation. Note that you are not assisting the patient with ventilation. In the case of a pneumothorax, you should avoid positive pressure ventilation, if possible, as this could increase the amount of air outside of the lungs, turning a pneumothorax into a tension pneumothorax.\"],\n                                feedbackOutOfOrder: [\"\"],\n                                feedbackErrors: [\"This patient should be allowed to breathe independently. O2 flow rate should be adjusted to achieve an SpO2 between 95 and 99%.\"],\n                                examineIfAbsent: false,\n                                examineIfErrors: false,\n                                promptsIfAbsent: \"\",\n                                promptsIfErrors: \"\",\n                                subActionsList: false,\n                                subActions: [],\n                              },\n                              {\n                                id: \"intv-supplemental-oxygen-device-nasal-cannula\",\n                                label: \"administer concentrated oxygen via a nasal cannula\",\n                                type: ACTION_TYPES.ALT,\n                                feedbackAbsent: [\"The patient's respiratory rate is fast, but he is ventilating adequately. His SpO2, however, is low, suggesting inadequate oxygenation. You can use either a nasal canula or non-rebreather mask to help with oxygenation. Note that you are not assisting the patient with ventilation. In the case of a pneumothorax, you should avoid positive pressure ventilation, if possible, as this could increase the amount of air outside of the lungs, turning a pneumothorax into a tension pneumothorax.\"],\n                                feedbackOutOfOrder: [\"\"],\n                                feedbackErrors: [\"This patient should be allowed to breathe independently. O2 flow rate should be adjusted to achieve an SpO2 between 95 and 99%.\"],\n                                examineIfAbsent: false,\n                                examineIfErrors: false,\n                                promptsIfAbsent: \"\",\n                                promptsIfErrors: \"\",\n                                subActionsList: false,\n                                subActions: [],\n                              },\n                        ],\n                      },\n                      {\n                        id: \"intv-pleural-decompression\",\n                        label: \"identify that this patient has a tension pneumothorax and perform pleural decompression appropriately by inserting a large bore needle between ribs 2 and 3 mid-clavicular or between ribs 5 and 6 midaxillary on the right side of the chest\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"This patient had absent breath sounds after being stabbed with a knife to the chest. Your differential diagnosis includes pneumothorax or hemothorax. The patient also has signs of diminished cardiac output, including his hypotension and poor perfusion (pale, diaphoretic skin, and weak distal pulses) suggest that he may have a tension pneumothorax, which necessitates needle decompression. Other signs of a tension pneumothorax, which this patient did not have, include JVD or tracheal deviation.\"],\n                        feedbackOutOfOrder: [\"Tension pneumothorax is an injury that affects breathing.  It is a potentially life threatening condition that requires prompt intervention. For these reasons, it should be addressed during the primary survey.\"],\n                        feedbackErrors: [\"Once you have identified a tension pneumothorax, decompression is the appropriate next step. You should use a large-bore needle (ideally 14 or 16 gauge and at least 2 inches in length) and insert it into either:\", \"- the 2nd or 3rd intercostal space at the mid-clavicular line\", \"- the 4th or 5th intercostal space at the mid-axillary line\", \"Remember to insert the needle above the rib, not below, because there is a neurovascular bundle that runs below each rib you want to avoid damaging.\"],\n                        examineIfAbsent: true,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"thought the patient had a simple pneumothorax; didn't realize the patient had a pneumothorax; didn't know the best way to manage the patient's tension pneumothorax\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-occlusive-dressing\",\n                        label: \"Apply an occlusive dressing over the stab wound to prevent air from getting into the chest\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"An open chest wound, such as one caused by a stab-wound after the object has been pulled out, may lead to a worsening tension pneumothorax. As the patient inhales, creating negative intrathoracic pressure, air may be sucked in through the wound and collect in the intrapleural cavity. An occlusive dressing, taped on 3 sides to allow air to escape, will protect against this.\"],\n                        feedbackOutOfOrder: [\"Tension pneumothorax is an injury that affects breathing.  It is a potentially life threatening condition that requires prompt intervention. For these reasons, it should be addressed during the primary survey.\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: true,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"didn't realize the patient had a pneumothorax; didn't know the best way to manage the patient's tension pneumothorax; thought that needle decompression would suffice\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"reassess-AB\",\n                        label: \"Check that breathing management interventions are working by listening for a rush of air, listening for bilateral lung sounds, and requesting relevant vitals--in particular, BP, P, R, and SpO2\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"When you decide your patient needs a treatment, you must ensure your treatment had the intended outcomes. In this case, after performing a needle decompression, you will listen for a rush of air and look for improvement in the patient's exam: is he breathing more comfortably, do you hear breath sounds bilaterally? You will also assess his vitals: how do his HR, RR, and BP look? If your intervention does not yield the expected results, ask yourself: was my diagnosis correct? Was my intervention correct? What else should I consider?\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          {\n                            id: \"request-vitals-BP\",\n                            label: \"vital BP\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"You should have checked BP\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [],\n                          },\n                          {\n                            id: \"request-vitals-Spo2\",\n                            label: \"check Spo2\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"You should have checked Spo2\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [],\n                          },\n                          {\n                            id: \"request-vitals-R\",\n                            label: \"check R\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"You should have checked R\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [],\n                          },\n                          {\n                            id: \"request-vitals-P\",\n                            label: \"check P\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"You should have checked P\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [],\n                          },\n                        ],\n                      },\n                      {\n                        id: \"intv-ventilation-technique-bag-valve-mask\", /* contraindicated intervention */\n                        label: \"BVM assisted ventilation\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"This patient's respiratory status can be stabilized with oxygen administered via a nasal cannula or non-rebreather mask. More invasive airway support is unnecessary and dangerous, unless the patient refuses a mask or it is ineffective.\"],\n                        examineIfAbsent:false,\n                        examineIfErrors: true,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"thought this patient needed ventilatory support in addition to oxygenation\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      \n                ],\n              },\n              {\n                id: \"circulation\",\n                label: \"Assess the patient's circulation\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Evaluate the patient's pulse and skin to assess the patient for shock.  Be sure to also perform a gross blood sweep.\", \"You would have noticed that your patient had a very weak radial pulse, suggesting that he may be in shock.\"],\n                feedbackOutOfOrder: [\"All unconscious patients should have a pulse check before starting the ABCs. If the patient is pulseless, you will start high-quality CPR immediately.\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                  {\n                    id: \"pulse-checks\",\n                    label: \"check pulse\",\n                    type: ACTION_TYPES.REQ,\n                    feedbackAbsent: [\"First check for a radial pulse. However, if you don't feel one, you want to check a carotid pulse.\", \"This patient's radial pulses were absent, but he did have a weak carotid pulse, which would prompt you to worry about shock.\", \"Checking this patient's pulse rate would have revealed that he was tachycardic. A significantly elevated or depressed pulse rate can suggest shock or respiratory failure.\", \"While this patient's heart had a regular rhythm, remember that an irregular rhythm can suggest impending cardiac arrest or arrhythmia.\", \"A patient in shock may have weak or absent pulses distally, such as this patient, suggestive of shock.\"],\n                    feedbackOutOfOrder: [\"\"],\n                    feedbackErrors: [\"\"],\n                    examineIfAbsent: false,\n                    examineIfErrors: false,\n                    promptsIfAbsent: \"\",\n                    promptsIfErrors: \"\",\n                    subActionsList: true,\n                    subActions: [\n                      {\n                        id: \"prompt-to-specify-pulse\",\n                        label: \"check the appropriate pulse(s)\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"When checking for a pulse, check distally first. If you don't detect distal pulses (for example, a radial pulse), check centrally next.\", \"If you checked his radial pulses, you would have appreciated a pulse, though it was weak.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"When checking for a pulse, check distally first. If you don't detect distal pulses (for example, a radial pulse), check centrally next.\", \"If you checked his radial pulses, you would have appreciated a pulse, though it was weak.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"checks-pulse-rate-rhythm-quality\",\n                        label: \"check pulse rate, rhythm, and quality\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Checking this patient's pulse rate would have revealed that he was tachycardic. A significantly elevated or depressed pulse rate can suggest shock or respiratory failure.\", \"While this patient's heart had a regular rhythm, remember that an irregular rhythm can suggest impending cardiac arrest or arrhythmia.\", \"A patient in shock may have weak or absent pulses distally, such as this patient, suggestive of shock.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          {\n                            id: \"checks-pulse-rate\",\n                            label: \"rate\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"Checking this patient's pulse rate would have revealed that he was tachycardic. A significantly elevated or depressed pulse rate can suggest shock or respiratory failure.\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [],\n                          },\n                          {\n                            id: \"checks-pulse-rhythm\",\n                            label: \"rhythm\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"While this patient's heart had a regular rhythm, remember that an irregular rhythm can suggest impending cardiac arrest or arrhythmia.\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [],\n                          },\n                          {\n                            id: \"checks-pulse-quality\",\n                            label: \"quality\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"A patient in shock may have weak or absent pulses distally, such as this patient, suggestive of shock.\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [],\n                          },\n                        ],\n                      },\n                    ],\n                  },\n                      {\n                        id: \"checks-skin\",\n                        label: \"checks skin\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Pallor, which this patient had, and cyanosis are signs of inadequate oxygenation and may be caused by shock or respiratory failure.\", \"While cold skin suggests decompensated shock, a patient with warm skin, like this patient, may be hemodynamically stable or they may be in compensated shock.\", \"This patient had diaphoretic skin, which in this case is non-specific, but should prompt you to think about shock.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: true,\n                        subActions: [\n                          {\n                            id: \"checks-skin-color\",\n                            label: \"color\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"Pallor, which this patient had, and cyanosis are signs of inadequate oxygenation and may be caused by shock or respiratory failure.\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [],\n                          },\n                          {\n                            id: \"checks-skin-temperature\",\n                            label: \"temperature\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"While cold skin suggests decompensated shock, a patient with warm skin, like this patient, may be hemodynamically stable or they may be in compensated shock.\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [],\n                          },\n                          {\n                            id: \"checks-skin-condition\",\n                            label: \"condition\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"This patient had diaphoretic skin, which in this case is non-specific, but should prompt you to think about shock.\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [],\n                          },\n                        ],\n                      },\n                      {\n                        id: \"assess-major-bleeding\",\n                        label: \"Perform a gross blood sweep\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"A gross blood sweep, which was negative in this patient, will help you identify any life-threatening bleeding you may have missed earlier when forming your general impression.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-control-severe-bleeding-technique-direct-pressure\", /* contraindicated intervention */\n                        label: \"Direct pressure\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"The patient did not have significant bleeding.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-control-severe-bleeding-technique-tourniquet\", /* contraindicated intervention */\n                        label: \"Tourniquet\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"The patient did not have significant bleeding.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-control-severe-bleeding-technique-2nd-tourniquet\", /* contraindicated intervention */\n                        label: \"Second tourniquet\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"The patient did not have significant bleeding.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-control-severe-bleeding-technique-pack-wound-with-gauze\", /* contraindicated intervention */\n                        label: \"Pack wound with gauze or hemostatic gauze\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"The patient did not have significant bleeding.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-control-severe-bleeding-technique-pressure-bandage\", /* contraindicated intervention */\n                        label: \"Pressure dressing\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"The patient did not have significant bleeding.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-control-severe-bleeding-technique-load-and-go\", /* contraindicated intervention */\n                        label: \"Load and go due to uncontrolled bleeding.\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"The patient did not have significant bleeding.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"transport-decision\",\n                label: \"Make appropriate transport decisions based on your findings so far\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Your ABCs and evaluation for life threats and level of consciousness will dictate where you transfer your patient.\", \"Because of the patient's respiratory distress and weak pulses, you decide to transfer the patient immediately to the nearby level II trauma center.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"decision-is-load-and-go\",\n                        label: \"Determine that this is a critical patient\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"This patient has a tension pneumothorax with hypotension and a penetrating chest injury. This is a patient who could deteriorate quickly so you want to make sure he gets to a hospital as soon as possible.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"This patient has a tension pneumothorax with hypotension and a penetrating chest injury. This is a patient who could deteriorate quickly so you want to make sure he gets to a hospital as soon as possible.\"],\n                        examineIfAbsent: true,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"didn't realize this was a critically ill patient; felt this patient should be further stabilized on site prior to transfer\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-transport\",\n                        label: \"Decide to transport this patient to the Level 2 trauma center by ground ambulance\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"This patient should be evaluated at the level II trauma center 7 minutes away. He should be transported by ambulance.\"],\n                        feedbackOutOfOrder: [\"Initial transport decisions should be made following the 'Primary Survey' (ABCs) because that is when the provider decides whether the patient can be further stabilized on scene or taken directly to a hospital in a 'load and go' scenario. The secondary assessment is only performed on scene if the situation is NOT a 'load and go.' Making transport decisions early is especially important if you are calling for an air ambulance to account for the time it takes for them to arrive.\"],\n                        feedbackErrors: [\"This patient should be evaluated at the level II trauma center 7 minutes away. He should be transported by ambulance.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-call-for-air-ambulance\", /* contraindicated intervention */\n                        label: \"Call for air ambulance\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"Air ambulance was not available.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      }, \n                ],\n              },\n              {\n                id: \"trauma-expose\",\n                label: \"Trauma expose the patient\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Exposure is necessary to properly inspect the patient for injuries. Only the area being inspected should be uncovered and then recovered to prevent heat loss and hypothermia.\"],\n                feedbackOutOfOrder: [\"It is important to expose your patient to ensure that your secondary survey can be performed efficiently -- especially in trauma scenarios where there may be more unknown injuries. Exposing the patient allows the provider to more carefully examine the patient during assessment.\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [{\n                  id: \"exposes-body-parts\",\n                  label: \"Exposed (and recovered) anatomical areas as necessary\",\n                  type: ACTION_TYPES.REQ,\n                  feedbackAbsent: [\"Exposure is necessary to properly inspect the patient for injuries. Only the area being inspected should be uncovered and then recovered to prevent heat loss and hypothermia.\"],\n                  feedbackOutOfOrder: [\"It is important to expose your patient to ensure that your secondary survey can be performed efficiently -- especially in trauma scenarios where there may be more unknown injuries. Exposing the patient allows the provider to more carefully examine the patient during assessment.\"],\n                  feedbackErrors: [\"\"],\n                  examineIfAbsent: false,\n                  examineIfErrors: false,\n                  promptsIfAbsent: \"\",\n                  promptsIfErrors: \"\",\n                  subActionsList: false,\n                  subActions: [],\n              },],\n              },\n          ],\n        },\n        {\n          id: \"history-taking\",\n          label: \"Obtain or direct a partner to obtain a patient history\",\n          type: ACTION_TYPES.REQ,\n          feedbackAbsent: [\"Vital signs will help you decide how to manage your patient, as will a history. Even if you cannot obtain a history from the patient directly, you should still try to get as much information as you can (e.g., from a bystander).\"],\n          feedbackOutOfOrder: [\"\"],\n          feedbackErrors: [\"\"],\n          examineIfAbsent: false,\n          examineIfErrors: false,\n          promptsIfAbsent: \"\",\n          promptsIfErrors: \"\",\n          subActionsList: true,\n          subActions: [\n            {\n                id: \"required-action-obtains-vitals\",\n                label: \"Baseline vital signs\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Baseline vitals are critical; they will help you assess, manage, and continue to monitor your patient.\", \"You would have found that this patient was tachycardic, tachypneic, and hypoxic on room air, prompting you to think about possible causes for these symptoms (such as pain, pneumothorax, hemothorax, shock).\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"required-action-attempt-obtain-sample\",\n                label: \"SAMPLE (if possible)\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Take an efficient but thorough history from the patient or the witnesses: symptoms, allergies, medications, past medical history, last oral intake, events preceding.\", \"You would have learned that the patient was stabbed in the R chest after having had beer, most recently 20 minutes ago.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"required-action-obtain-OPQRST\",\n                label: \"OPQRST (if possible)\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Assess the patient's pain: in this case the patient is not able to tell you, but you should have considered getting more information from bystanders if necessary.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n          ],\n        },\n        {\n          id: \"secondary-assessment\",\n          label: \"Perform a Secondary Survey (rapid trauma assessment)\",\n          type: ACTION_TYPES.REQ,\n          feedbackAbsent:[\"The Secondary Survey is a thorough exam of your patient to ensure you have a complete understanding of what is going on and how you need to manage your patient.\"],\n          feedbackOutOfOrder: [\"\"],\n          feedbackErrors: [\"\"],\n          examineIfAbsent: false,\n          examineIfErrors: false,\n          promptsIfAbsent: \"\",\n          promptsIfErrors: \"\",\n          subActionsList: true,\n          subActions: [\n            {\n                id: \"head\",\n                label: \"examine the patient's head\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"You would have noted a 1.5 inch laceration on the R side of the patient's head, above his ear.\", \"Inspecting the face for bruising and palpating for facial deformity may indicate facial fractures.\", \"Abnormal eye movement or pupils, which this patient fortunately did not have, suggest intracranial injury and should prompt you to rapidly transfer your patient to a trauma center. Additionally, bruising around the eyes may be caused by basilar skull fracture, though this aspect of the exam was normal in this patient.\", \"Bleeding or CF from the ear may be indicative of a basilar skull fracture. Additionally, although not found in this case, bruising behind the ear suggests a basilar skull fracture (Battle's sign).\", \"This patient had no drainage from the nose but consider CSF leak from a basilar skull fracture if you see clear drainage.\", \"If the patient had had secretions or blood in the mouth, you would have needed to apply suction to clear the airway. Additionally, any visualized foreign bodies in the mouth should be removed. A blind finger sweep is never indicated, as you could lodge a foreign body deeper into the airway. There were no obstructions in this patient’s mouth.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"assessment-inspects-skull\",\n                        label: \"Inspect and palpate the scalp and skull\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"You would have noted a 1.5 inch laceration on the R side of the patient's head, above his ear.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"assessment-inspects-facial-bones\",\n                        label: \"Inspect and palpate the facial bones\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Inspecting the face for bruising and palpating for facial deformity may indicate facial fractures.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"inspects-eyes\",\n                        label: \"Inspect the eyes for PERRLA and bruising (\\\"raccoon eyes\\\")\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Abnormal eye movement or pupils, which this patient fortunately did not have, suggest intracranial injury and should prompt you to rapidly transfer your patient to a trauma center. Additionally, bruising around the eyes may be caused by basilar skull fracture, though this aspect of the exam was normal in this patient.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          {id: \"inspects-eyes-PERRLA\",\n                           feedbackAbsent: [\"Abnormal eye movement or pupils, which this patient fortunately did not have, suggest intracranial injury and should prompt you to rapidly transfer your patient to a trauma center.\"], \n                           subActions: []},\n                          {id: \"inspects-eyes-racoon\",\n                           feedbackAbsent: [\"This aspect of the exam was normal in this patient, but bruising around the eyes may be caused by basilar skull fracture.\"], \n                           subActions: []}\n                        ],\n                      },\n                      {\n                        id: \"inspects-ears\",\n                        label: \"Inspect the ears for blood, other fluids, and bruising (\\\"battle signs\\\")\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Bleeding or CF from the ear may be indicative of a basilar skull fracture. Additionally, although not found in this case, bruising behind the ear suggests a basilar skull fracture (Battle's sign).\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          {id: \"inspects-ears-blood\",\n                           feedbackAbsent: [\"Bleeding or CF from the ear may be indicative of a basilar skull fracture.\"],\n                           subActions: []},\n                          {id: \"inspects-ears-bruising\",\n                           feedbackAbsent: [\"Although not found in this case, bruising behind the ear suggests a basilar skull fracture (Battle's sign).\"], \n                           subActions: []}\n                        ],\n                      },\n                      {\n                        id: \"inspects-nose\",\n                        label: \"Inspect the nose for blood and other fluids\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"This patient had no drainage from the nose but consider CSF leak from a basilar skull fracture if you see clear drainage.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"inspects-mouth\",\n                        label: \"Inspect the mouth for blood, other secretions, and obstructions (teeth, foreign objects, etc.)\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"If the patient had had secretions or blood in the mouth, you would have needed to apply suction to clear the airway.\", \"Additionally, any visualized foreign bodies in the mouth should be removed. A blind finger sweep is never indicated, as you could lodge a foreign body deeper into the airway. There were no obstructions in this patient’s mouth.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"neck\",\n                label: \"examine the patient's neck\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"This patient's neck exam was normal, but remember, tracheal deviation suggests unequal intrathoracic pressure (for example, a pneumothorax). The trachea will be deviated away from the side with increased pressure.\", \"This patient's neck exam was normal, but remember, JVD suggests that the heart is not adequately pushing out blood. Consider obstructive processes like a tension pneumothorax or hemothorax.\", \"This patient's neck exam was normal, but remember, a palpable step-off suggests a fracture.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"assessment-neck-injury\",\n                        label: \"injury\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"assessment-tracheal-deviation\",\n                        label: \"tracheal deviation\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"This patient's neck exam was normal, but remember, tracheal deviation suggests unequal intrathoracic pressure (for example, a pneumothorax). The trachea will be deviated away from the side with increased pressure.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"assessment-JVD\",\n                        label: \"jugular venous distension (JVD)\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"This patient's neck exam was normal, but remember, JVD suggests that the heart is not adequately pushing out blood. Consider obstructive processes like a tension pneumothorax or hemothorax.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"assessment-stepoffs\",\n                        label: \"step-offs\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"This patient's neck exam was normal, but remember, a palpable step-off suggests a fracture.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"chest\",\n                label: \"examine the patient's chest\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"The presence and quality of breath sounds can clue you into underlying problems (e.g., pneumothorax, asthma, fluid build-up in the lungs). Additionally, this patient had diminished sounds on the right, suggesting a possible pneumothorax or hemothorax.\", \"Inspecting the shoulders for discoloration symmetry or deformity may identify dislocation or fracture of the shoulder (clavicle, humerus and scapula).\", \"This patient had a 1 inch wound to the R chest at the sixth intercostal space with minor external bleeding.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"assessment-check-breath-sounds\",\n                        label: \"Listen for breath sounds\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"The presence and quality of breath sounds can clue you into underlying problems (e.g., pneumothorax, asthma, fluid build-up in the lungs).\", \"This patient had diminished sounds on the right, suggesting a possible pneumothorax or hemothorax.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                       },\n                       {\n                        id: \"assessment-inspect-shoulders\",\n                        label: \"Inspect and palpate shoulders\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Inspecting the shoulders for discoloration symmetry or deformity may identify dislocation or fracture of the shoulder (clavicle, humerus and scapula)\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"assessment-inspect-clavicles\",\n                        label: \"Inspect and palpates clavicles\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"The clavicles should be inspected for any evidence of fractures. Though rare, clavicle fractures can cause a pneumothorax. This patient’s clavicles were normal.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"inspects-palpates-anterior-thorax\",\n                        label: \"Inspect and palpate anterior thorax for injury, crepitation, and paradoxial motion (or flail segments)\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"This patient had a 1 inch wound to the R chest at the sixth intercostal space with minor external bleeding.\", \"If the patient had had anterior thorax and rib crepitation, you should suspect air outside of the lungs, which would raise your suspicion for a pneumothorax.\", \"Recall that paradoxical chest wall motion suggests flail chest, where multiple rib fractures lead to an unstable portion of the chest wall.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          {id: \"inspects-chest-injury\",\n                           feedbackAbsent: [\"\"],\n                           subActions: [],},\n                          {id: \"inspects-palpates-anterior-thorax-crepitation\",\n                           feedbackAbsent: [\"If the patient had had anterior thorax and rib crepitation, you should suspect air outside of the lungs, which would raise your suspicion for a pneumothorax.\"],\n                           subActions: []},\n                          {id: \"inspects-anterior-thorax-paradoxical-motion\",\n                           feedbackAbsent: [\"Recall that paradoxical chest wall motion suggests flail chest, where multiple rib fractures lead to an unstable portion of the chest wall.\"],\n                           subActions: []},\n                        ],\n                      },\n                ],\n              },\n              {\n                id: \"abdomen-pelvis\",\n                label: \"examine the patient's abdomen\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"A distended or rigit abdomen suggests trauma and internal bleeding. Fortunately, the patient's abdominal exam was normal.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"inspects-abdomen-injury\",\n                        label: \"inspect and palpate for injury\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"inspects-palpates-abdomen-distension\",\n                        label: \"inspect and palpate for distension\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"A distended abdomen suggests trauma and internal bleeding. Fortunately, the patient's abdominal exam was normal.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"inspects-palpates-abdomen-rigidity\",\n                        label: \"inspect and palpate for rigidity\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"A rigid abdomen suggests trauma and internal bleeding. Fortunately, the patient's abdominal exam was normal.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"assess-pelvis\",\n                label: \"examine the patient's pelvis\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Be sure to do a thorough exam of the pelvis as the pelvis can be a source of life-threatening bleeding. The presence of blood or other fluids may indicate urethral, vaginal or rectal injury.Fortunately, the patient's pelvis exam was normal.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"assessment-checks-pelvis\",\n                        label: \"Inspect and compress the pelvis\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Be sure to do a thorough exam of the pelvis as the pelvis can be a source of life-threatening bleeding. Fortunately, the patient's pelvis exam was normal.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"inspects-genitalia-perineum-blood\",\n                        label: \"Inspect the genitalia/perineum for blood and other fluids.\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"The presence of blood or other fluids may indicate urethral, vaginal or rectal injury.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"extremities\",\n                label: \"examine the patient's upper and lower extremities\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Extremity pulses may be weak or non-palpable if your patient is in shock. This patient had normal extremity pulses.\", \"Diminished or absent mobility may suggest spinal cord or other nervous system injury. This patient was moving his extremities normally.\", \"Diminished or absent sensation may suggest spinal cord or other nervous system injury. This patient's sensation was intact in his extremities.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"inspects-extremities-injury\",\n                        label: \"Inspect and palpate each extremity for injury\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"You would have observed superficial lacerations to the hands.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          { id: \"inspects-right-arm-injury\",\n                            feedbackAbsent: [\"You would have observed superficial lacerations to the hands.\"],\n                            subActions: []},\n                           {id: \"inspects-left-arm-injury\",\n                            feedbackAbsent: [\"You would have observed superficial lacerations to the hands.\"],\n                            subActions: []},\n                           {id: \"inspects-right-leg-injury\",\n                            subActions: []},\n                           {id: \"inspects-left-leg-injury\",\n                            subActions: []},\n                        ],\n                      },\n                      {\n                        id: \"inspects-extremities-pulse\",\n                        label: \"Inspect and palpate each extremity for pulse\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Extremity pulses may be weak or non-palpable if your patient is in shock. This patient had normal extremity pulses\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          { id: \"inspects-right-arm-pulse\",\n                            feedbackAbsent: [\"Extremity pulses may be weak or non-palpable if your patient is in shock. This patient had normal extremity pulses\"],\n                            subActions: []},\n                           {id: \"inspects-left-arm-pulse\",\n                            feedbackAbsent: [\"Extremity pulses may be weak or non-palpable if your patient is in shock. This patient had normal extremity pulses\"],\n                            subActions: []},\n                           {id: \"inspects-right-leg-pulse\",\n                            feedbackAbsent: [\"Extremity pulses may be weak or non-palpable if your patient is in shock. This patient had normal extremity pulses\"],\n                            subActions: []},\n                           {id: \"inspects-left-leg-pulse\",\n                            feedbackAbsent: [\"Extremity pulses may be weak or non-palpable if your patient is in shock. This patient had normal extremity pulses\"],\n                            subActions: []},\n                        ],\n                      },\n                      {\n                        id: \"inspects-extremities-motor-function\",\n                        label: \"Inspect and palpate each extremity for motor function\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Diminished or absent mobility may suggest spinal cord or other nervous system injury. This patient was moving his extremities normally.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          { id: \"inspects-right-arm-motor-ability\",\n                            feedbackAbsent: [\"Diminished or absent mobility may suggest spinal cord or other nervous system injury. This patient was moving his extremities normally.\"],\n                            subActions: []},\n                           {id: \"inspects-left-arm-motor-ability\",\n                            feedbackAbsent: [\"Diminished or absent mobility may suggest spinal cord or other nervous system injury. This patient was moving his extremities normally.\"],\n                            subActions: []},\n                           {id: \"inspects-right-leg-motor-ability\",\n                            feedbackAbsent: [\"Diminished or absent mobility may suggest spinal cord or other nervous system injury. This patient was moving his extremities normally.\"],\n                            subActions: []},\n                           {id: \"inspects-left-leg-motor-ability\",\n                            feedbackAbsent: [\"Diminished or absent mobility may suggest spinal cord or other nervous system injury. This patient was moving his extremities normally.\"],\n                            subActions: []},\n                        ],\n                      },\n                      {\n                        id: \"inspects-extremities-sensory-function\",\n                        label: \"Inspect and palpate each extremity for sensory function\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Diminished or absent sensation may suggest spinal cord or other nervous system injury. This patient's sensation was intact in his extremities.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          { id: \"inspects-right-arm-sensory-function\",\n                            feedbackAbsent: [\"Diminished or absent sensation may suggest spinal cord or other nervous system injury. This patient's sensation was intact in his extremities.\"],\n                            subActions: []},\n                           {id: \"inspects-left-arm-sensory-function\",\n                            feedbackAbsent: [\"Diminished or absent sensation may suggest spinal cord or other nervous system injury. This patient's sensation was intact in his extremities.\"],\n                            subActions: []},\n                           {id: \"inspects-right-leg-sensory-function\",\n                            feedbackAbsent: [\"Diminished or absent sensation may suggest spinal cord or other nervous system injury. This patient's sensation was intact in his extremities.\"],\n                            subActions: []},\n                           {id: \"inspects-left-leg-sensory-function\",\n                            feedbackAbsent: [\"Diminished or absent sensation may suggest spinal cord or other nervous system injury. This patient's sensation was intact in his extremities.\"],\n                            subActions: []},\n                        ],\n                      }, \n                ],\n              },\n              {\n                id: \"posterior\",\n                label: \"inspect and palpate the posterior thorax, lumbar, and buttocks for injury and step-offs\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"You will need a partner to help you roll the patient safely in order to do a thorough exam of the posterior thorax, lumbar, and buttocks for injury and step-offs. A palpable step-off, which the patient did not have, would suggest a fracture.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [\n                    { \n                      id: \"inspects-posterior-other-injury\",\n                      label: \"injury\",\n                      feedbackAbsent: [\"\"],\n                      subActions: []\n                    },\n                    {\n                      id: \"inspects-posterior-step-offs\",\n                      labe: \"step-offs\",\n                      feedbackAbsent:[\"A palpable step-off, which the patient did not have, would suggest a fracture.\"],\n                      subActions: []\n                    },\n                ],\n              },\n          ],\n        },\n        {\n          id: \"ongoing-mgmt-plan\",\n          label: \"Continue to provide adequate prehospital care until arriving at the receiving facility\",\n          type: ACTION_TYPES.REQ,\n          feedbackAbsent: [\"It is important to reassess your patient after every intervention and every clinical change. This includes repeating the primary survey, secondary survey, and vital signs. A critically ill patient should be reassessed more frequently to ensure he or she is still stable--approximately every 5 minutes.\"],\n          feedbackOutOfOrder: [\"\"],\n          feedbackErrors: [\"\"],\n          examineIfAbsent: false,\n          examineIfErrors: false,\n          promptsIfAbsent: \"\",\n          promptsIfErrors: \"\",\n          subActionsList: true,\n          subActions: [\n            {\n                id: \"intv-apply-sterile-dressings\",\n                label: \"Apply sterile dressings to lacerations over the ear and on hands\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Once the patient has been stabilized, dress his superficial wounds with sterile dressings.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: []\n              },\n              {\n                id: \"intv-place-on-immobilization-device\",\n                label: \"Place the patient on an a transfer or immobilization device, taking care not to compress puncture wounds and to move him to the ambulance with minimal spinal motion.\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Since this patient has a penetrating chest wound, you need to be careful while strapping him onto a transfer or immobilization device, since doing so may cause further injury.  A scoop stretcher would be an appropriate way to safely transfer the patient.  If unavailable, a longboard or other device could be used (with straps carefully placed) and then removed once the patient is on the stretcher.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"Since this patient has a penetrating chest wound, you need to be careful while strapping him onto a transfer or immobilization device, since doing so may cause further injury.  A scoop stretcher would be an appropriate way to safely transfer the patient.  If unavailable, a longboard or other device could be used (with straps carefully placed) and then removed once the patient is on the stretcher.\", \"In addition, this patient should be kept in a supine position. Remember that shock occurs when the body is unable to adequately perfuse the body's vital organs and periphery. When a patient is kept upright while in shock, cerebral perfusion is further hindered by gravity. Lying the patient down takes gravity out of the equation.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-spinal-immobilization-technique-attach-cid\",\n                label: \"applied padding (e.g., CID, towels) to keep head inline with spine\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Once the patient is transferred to a scoop stretcher (or another immobilization device), padding should be utilized to maintain cervical spine precautions. This will reduce cervical motion and prevent further injury.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"Reassess the patient\",\n                label: \"Reassess the patient\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"reassess-vitals-plus-frequency\",\n                        label: \"Recheck vital signs every 5 minutes\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Vitals should be reassessed after every intervention and every clinical change, and a critically ill patient should be reassessed every 5 minutes since their condition could deteriorate rapidly.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          {\n                            id: \"reassess-vital-signs\",\n                            label: \"Recheck vital signs every 5 minutes\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"Vitals should be reassessed after every intervention and every clinical change, and a critically ill patient should be reassessed more frequently to ensure he or she is still stable.\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [], \n                          },\n                          {\n                            id: \"decision-vitals-frequency\",\n                            label: \"decision vitals frequency\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"Critical patients' vital signs should be reassessed every 5 minutes, since their condition could deteriorate rapidly.\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"Critical patients' vital signs should be reassessed every 5 minutes, since their condition could deteriorate rapidly.\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [], \n                          },\n                        ],\n                      },\n                      {\n                        id: \"repeat-primary-survey\",\n                        label: \"Repeat the Primary Survey\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"It is important to reassess your patient after every intervention and every clinical change, which includes the primary survey. For example, a patient with a neck injury whose breathing was initially non-labored may develop stridor as the airway becomes swollen.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"repeat-secondary-survey\",\n                        label: \"Repeat the Secondary Survey\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"It is important to reassess your patient after every intervention and every clinical change, which includes your secondary survey. For example, a patient may lose their pulses if you initially failed to notice and treat a source of hemorrhage.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"intv-control-shock-technique-keep-patient-warm\",\n                label: \"keeping the patient warm, using some of the following methods: a) applying heat packs to the patient's groin or armpits, b) covering the patient with blankets, c) turning the heat up in the ambulance.\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"This patient is hypotensive with a fast heart rate, suggesting possible shock. Patients in shock have trouble maintaining their body temperatures, so they should be kept warm. It is important to keep this patient warm because hypothermia can cause additional problems or worsening of the patient's current problems, including worsening hypotension, arrhythmias, or even cardiac arrest.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-establish-iv\",\n                label: \"Establish at least one large bore IV en route\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"All trauma patients should have at least one, ideally two, large-bore IVs placed, even if they do not require fluid resuscitation.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"With a critical patient, you should ideally establish two large bore IV's while en route to the receiving facility, so as not to delay transfer to definitive care.  While this patient does not require fluid resuscitation at this time, you want to ensure you are prepared should this change.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: []\n              },\n              {\n                id: \"intv-contact-receiving-facility\",\n                label: \"Provide a patient report and ETA to the receiving facility\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"The hospital requires notification for all incoming patients 5 -15 prior to arrival, which is especially important for critical patients as the receiving team needs time to prepare equipment and space.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: []\n              },\n              \n              {\n                id: \"intv-control-shock-technique-administer-iv-boluses\", /* unnecessary intervention */\n                label: \"Bolus normal saline or Lactated Ringers to a maintain BP of 90mm Hg systolic en route, if time allows\",\n                type: ACTION_TYPES.UNNEC,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"While it is true the patient was hypotensive, the reason for his hypotension was because of obstructive shock, not hypovolemia. Appropriate management of the patient's tension pneumothorax would allow resumption of adequate cardiac output, resulting in an improved BP and exam. This patient does have a penetrating chest wound, however, so should he remain hypotensive after you successfully treated his tension pneumothorax, you should consider hemorrhagic shock; at this point, fluid resuscitation may be appropriate.\"],\n                examineIfAbsent: false,\n                examineIfErrors: true,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"Thought that hypotension should be treated with fluid boluses regardless of etiology\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-place-directly-on-stretcher\", /* contraindicated intervention */\n                label: \"Place patient directly on stretcher\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"This patient should be transferred with a device given his altered mental status, hypotension and penetrating chest wound.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: []\n              },\n              {\n                id: \"intv-walk-patient-to-ambulance\", /* contraindicated intervention */\n                label: \"Walk patient to ambulance\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"This patient should be transferred given his altered mental status, hypotension and penetrating chest wound.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: []\n              },\n              {\n                id: \"intv-splint-fracture\", /* contraindicated intervention */\n                label: \"Splint fractures\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"The patient did not have any fractures.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: []\n              },\n              {\n                id: \"intv-sling\", /* contraindicated intervention */\n                label: \"Apply sling\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"This patient did not have any injuries to the upper extremities.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: []\n              },\n              {\n                id: \"intv-prepare-amputated-part\", /* contraindicated intervention */\n                label: \"Prepare amputated part for transport\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"The patient did not have an amputation.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: []\n              },\n              {\n                id: \"intv-prepare-and-administer-pain-nausea-vomiting-medications\", /* contraindicated intervention */\n                label: \"Prepare and administer medications\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"A pain level for this patient is not available, and there is no evidence of nausea, vomiting, or need for sedation.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: []\n              },\n          ],\n        },     \n    ],\n},\n}\n","/* Bogus data for testing Collin's algorithm\nI made the scenario M2CA since that scenario has some corresponding log analysis files that can be used\nfor testing\nIds need to be added to correspond to those in the analysis log*/\n\nexport const M2CA_PhaseIE = {\n    Action: {\n      id: \"top\",\n      label: \"Top most node -level 0\",\n      feedbackAbsent: \"Nothing done. Start scenario again.\", /*feedback if the action was not performed*/\n      feedbackOutOfOrder: \"\", /*feedback if the action was done late (e.g., if the action is Scene Size-up \n        and it was done after Primary Survey)*/\n      feedbackError: \"All wrong. Please start scenario again.\", /*feedback if the action was performed incorrectly (e.g. wrong Ventilation rate)*/\n      subActions: [ /*array with the corresponding subactions (to form the tree)*/\n        {\n          id: \"scene-size-up\",\n          label: \"Child1 -level1\",\n          feedbackAbsent: \"absent -Child1 level 1\",\n          feedbackOutOfOrder: \"late -Child1 level 1\",\n          feedbackErrors: \"wrong -Child1 level 1\",\n          subActions: [\n            {\n                id: \"assess-scene-safety\",\n                label: \"Child1 of Child1 -level 2\",\n                feedbackAbsent: \"absent -Child1 of Child1 -level2\",\n                feedbackOutOfOrder: \"late -Child1 of Child1 -level2\",\n                feedbackErrors: \"wrong -Child1 of Child1 -level2\",\n                subActions: [],\n                examine: \"N\",\n                prompts: \"\",\n              },\n              {\n                id: \"required-action-BSI\",\n                label: \"Child2 of Child1 -level 2\",\n                feedbackAbsent: \"absent -Child2 of Child1 -level 2\",\n                feedbackOutOfOrder: \"late -Child2 of Child1 -level 2\",\n                feedbackErrors: \"wrong -Child2 of Child1 -level 2\",\n                subActions: [],\n                examine: \"Y\",\n                prompts: \"prompts -Child2 of Child1 -level2\",\n              },\n          ],\n          examine: \"Y\",\n          prompts: \"prompts -Child1 level 1\",\n        },\n        {\n          id: \"primary-survey\",\n          label: \"Child 2 -level1\",\n          feedbackAbsent: \"absent -Child 2 level1\",\n          feedbackOutOfOrder: \"late -Child 2 level1\",\n          feedbackErrors: \"wrong -Child 2 level1\",\n          subActions: [\n            {\n                id: \"general-impression\",\n                label: \"Child1 of Child2 -level2\",\n                feedbackAbsent: \"absent -Child1 of Child2 -level2\",\n                feedbackOutOfOrder: \"late -Child1 of Child2 -level2\",\n                feedbackErrors: \"wrong -Child1 of Child2 -level2\",\n                subActions: [],\n                examine: \"N\",\n                prompts: \"\",\n              },\n              {\n                id: \"airway\",\n                label: \"Child2 of child2 -level2\",\n                feedbackAbsent: \"absent -Child2 of Child2 -level2\",\n                feedbackOutOfOrder: \"late -Child2 of Child2 -level2\",\n                feedbackErrors: \"wrong -Child2 of Child2 -level2\",\n                subActions: [\n                    {\n                        id: \"airway-is-open\",\n                        label: \"Child1 of (Child2 of Child2) -level3\",\n                        feedbackAbsent: \"absent -Child1 of (Child2 of Child2) -level3\",\n                        feedbackOutOfOrder: \"late -Child1 of (Child2 of Child2) -level3\",\n                        feedbackErrors: \"wrong -Child1 of (Child2 of Child2) -level3\",\n                        subActions: [],\n                        examine: \"N\",\n                        prompts: \"\",\n                      },\n                      {\n                        id: \"airway-is-clear-substances\",\n                        label: \"Child2 of (Child2 of Child2) -level3\",\n                        feedbackAbsent: \"absent -Child2 of (Child2 of Child2) -level3\",\n                        feedbackOutOfOrder: \"late -Child2 of (Child2 of Child2) -level3\",\n                        feedbackErrors: \"wrong -Child2 of (Child2 of Child2) -level3\",\n                        subActions: [],\n                        examine: \"Y\",\n                        prompts: \"prompts -Child2 of (Child2 of Child2) -level3\",\n                      }\n                ],\n                examine: \"N\",\n                prompts: \"\",\n              },\n              {\n                id: \"breathing\",\n                label: \"Child3 of Child2 -level2\",\n                feedbackAbsent: \"absent -Child3 of Child2 -level2\",\n                feedbackOutOfOrder: \"late -Child3 of Child2 -level2\",\n                feedbackErrors: \"wrong -Child3 of Child2 -level2\",\n                subActions: [],\n                examine: \"N\",\n                prompts: \"\",\n              } \n          ],\n          examine: \"N\",\n          prompts: \"\",\n        },\n        {\n          id: \"Manage a potential head and/or spinal injury\",\n          label: \"Child 3 -level1\",\n          feedbackAbsent: \"absent -Child 3 level1\",\n          feedbackOutOfOrder: \"late -Child 3 level1\",\n          feedbackErrors: \"wrong -Child 3 level1\",\n          subActions: [\n            {\n              id: \"intv-spinal-immobilization-technique-cervical-collar\",\n              label: \"Cervical Collar\",\n              feedbackAbsent: \"absent - cervical collar\",\n              feedbackOutOfOrder: \"late - cervical collar\",\n              feedbackErrors: \"wrong - cervical collar\",\n              subActions: [],\n              examine: \"Y\",\n              prompts: \"prompts - cervical collar\",\n            }\n\n\n          ],\n          examine: \"N\",\n          prompts: \"\",\n        },\n        {\n          id: \"ongoing-mgmt-plan\",\n          label: \"Child 4 -level1\",\n          feedbackAbsent: \"absent -Child 4 level1\",\n          feedbackOutOfOrder: \"late -Child 4 level1\",\n          feedbackErrors: \"wrong -Child 4 level1\",\n          subActions: [\n            {\n                id: \"reassess-vital-signs\",\n                label: \"Child1 of Child4 -level 2\",\n                feedbackAbsent: \"absent -Child1 of Child4 -level2\",\n                feedbackOutOfOrder: \"late -Child1 of Child4 -level2\",\n                feedbackErrors: \"wrong -Child1 of Child4 -level2\",\n                subActions: [],\n                examine: \"Y\",\n                prompts: \"prompts -Child1 of Child4 -level2\",\n              },\n              {\n                id: \"repeat-primary-survey\",\n                label: \"Child2 of Child4 -level 2\",\n                feedbackAbsent: \"absent -Child2 of Child4 -level 2\",\n                feedbackOutOfOrder: \"late -Child2 of Child4 -level 2\",\n                feedbackErrors: \"wrong -Child2 of Child4 -level 2\",\n                subActions: [],\n                examine: \"N\",\n                prompts: \"\",\n              },  \n          ],\n          examine: \"Y\",\n          prompts: \"prompts -Child4 level1\",\n        },\n      ],\n      examine: \"N\", /*Boolean that says whether the action needs to be examined*/\n      prompts: \"\" /*prompts to hint the student as to how to reflect on the action*/\n    },\n  }","// type Phase_D = {\n//     step:  string;\n//     title: string;\n//     text:  string[];\n// };\n\n// type Phase_E = {\n//     step:        string;\n//     title:       string;\n//     description: string;\n//     text:        string[];\n// };\n\n// type Phase_B = {\n//     step: string;\n//     expectations:\n//         {\n//             id:      string;\n//             heading: string;\n//             benchmarks:\n//                 {\n//                     id:   string;\n//                     text: string;\n//                     subBenchmarks: \n//                         {\n//                             id:              string;\n//                             phase:           object;\n//                             checklistItems:  string[];\n//                             feedback:        string;\n//                             type:            string;\n//                         }[];\n//                 }[];\n//         }[];\n// };\n\n// type Phase_R = {\n//     step:    string;\n//     slides:  string[] | { text: { __html: string; linkHoverText: object; }}[];\n// };\n\n// type Phase_F = {\n//     step:      string;\n//     title:     string;\n//     heading:   string;\n//     questions: string;\n// };\n\n// type Step_Data = [Phase_D, Phase_E, Phase_B, Phase_R, Phase_F];\n\n// export const STEP_DATA: Step_Data = [\n\n    import {link, para, text} from \"./utils\";\n\n    export const C5CA_PhaseDEBRF = [\n        {\n            step: \"D\",\n            title: \"Define Rules:\",\n            text: [\"The purpose of this debriefing is to reflect on the scenario you have just completed in order to help you improve your skills as a paramedic.  It is not meant to assess your overall abilities as a paramedic.\", \"This debriefing will summarize the learning objectives of this scenario and the performance benchmarks (standards) for achieving each objective.  The system will then prompt you to examine differences between the treatment actions that you performed and those indicated by the clinical findings revealed during the scenario, or that would have been revealed by a more thorough assessment and reassessment of this patient.  Finally, it will prompt you to state some 'take home points' to improve your performance.\"]\n        },\n        {\n            step: \"E\",\n            title: \"Explain the learning objectives:\",\n            description: \"This scenario was designed to give you practice with:\",\n            text: [\n                \"Conducting a thorough trauma patient assessment\",\n                \"Managing a potential head or spinal injury\",\n                \"Managing severe external bleeding\",\n                \"Managing inadequate breathing\",\n                \"Managing hemorrhagic shock\",\n                \"Making appropriate transport decisions\",\n                \"Performing ongoing patient management and assessment\",\n            ]\n        },\n        {\n            step: \"B\",\n            expectations: [\n                {\n                    expectationText: \"Conduct a thorough trauma assessment\",\n                    benchmarks: [\n                        {\n                            benchmarkText: \"Before approaching patient, apply PPE, check that the scene is safe, determine the number of patients, and request additional help if necessary\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"On initial patient contact, form a general impression of the patient's condition, assess patient's level of consciousness, and identify apparent life threats\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"During the Primary Survey:\",\n                            subBenchmarks: \n                            [\n                                \"Check that airway is open, clear of fluids and foreign bodies, and has intact physical structures\", \n                                \"Listen for abnormal breath sounds and check breathing rate, rhythm, and quality\", \n                                \"Check circulation: pulse rate/rhythm/quality; skin color/temperature/condition; perform gross blood sweep\",\n                                \"Determine the need for rapid transport\",\n                                \"Trauma expose patient\"\n                            ]\n                        },\n                        {\n                            benchmarkText: \"Take baseline vitals and, if possible, obtain SAMPLE history and OPQRST\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Perform a rapid head-to-toe assessment (Secondary Survey), looking/listening/feeling for DCAP-BTLS and abnormal conditions at each body part (e.g., check neck for tracheal deviation and JVD).\",\n                            subBenchmarks: []\n                        },\n                    ]\n                },\n                {\n                    expectationText: \"Manage a potential spinal injury\",\n                    benchmarks: [\n                        {\n                            benchmarkText: \"Take (or direct a partner to take) manual c-spine precautions.\",\n                            subBenchmarks: []\n                        },\n                    ]\n                },\n                {\n                    expectationText: \"Manage severe external bleeding\",\n                    benchmarks: [\n                        {\n                            benchmarkText: \"Apply a tourniquet during the primary survey as far proximal to the wound as possible\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Confirm that bleeding has stopped and pulses are absent\",\n                            subBenchmarks: []\n                        },\n                    ]\n                },\n                {\n                    expectationText: \"Manage inadequate breathing\",\n                    benchmarks: [\n                        {\n                            benchmarkText: \"Ventilate the patient using a BVM at a rate of 10-12 BPM\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Titrate oxygen to SpO2 of 95-99%\",\n                            subBenchmarks: []\n                        },\n                    ]\n                },\n                {\n                    expectationText: \"Manage hemorrhagic shock\",\n                    benchmarks: [\n                        {\n                            benchmarkText: \"Administer high flow oxygen\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Place two large-bore IVs en route\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Bolus normal saline or Lactated Ringers to a goal BP of 90 mm Hg systolic as soon as possible\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Keep the patient warm by covering him with blankets, turning the heat up in the ambulance, applying heat packs, etc.\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Maintain patient in supine position\",\n                            subBenchmarks: []\n                        },\n                    ]\n                },\n                {\n                    expectationText: \"Make appropriate transport decisions\",\n                    benchmarks: [\n                        {\n                            benchmarkText: \"Rapid transport to the Level 2 trauma facility by ground ambulance, using lights and sirens\",\n                            subBenchmarks: []\n                        },\n                    ]\n                },\n                {\n                    expectationText: \"Perform ongoing patient management and assessment\",\n                    benchmarks: [\n                        {\n                            benchmarkText: \"Reassess vitals every 5 minutes; repeat primary and secondary survey\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Dress wounds with minor bleeding (e.g., gun shot wound to abdomen)\",\n                            subBenchmarks: []\n                        },\n                        {\n                            benchmarkText: \"Contact receiving facility.  Provide complete report on patient's condition and ETA\",\n                            subBenchmarks: []\n                        },\n                    ]\n                }\n            ]\n        },\n        {\n            step: \"R\",\n            slides: [\n                {\n                    paragraphs: [\n                        para(\n                            text(\"In an idealized scenario, you arrive on scene and find a young man lying on the ground in a parking lot surrounded by police officers and bystanders. Your initial assessment reveals a conscious but lethargic patient who has significant bleeding from a gunshot wound to his left upper anterior mid-thigh despite a bystander holding pressure.\")\n                        ),\n                        para(\n                            text(\"You immediately direct your partner to provide manual c-spine stabilization, while you\"),\n                            link(\"apply a tourniquet\", \"The patient is hemorrhaging from his upper leg, which is an immediate life threat and should be addressed before progressing on with your exam, including before assessing the patient’s ABCs \"),\n                            text(\"to the patient’s left upper leg, proximal to the injury, and confirm that this has stopped the bleeding.\")\n                        )\n                    ]\n                },\n                {\n                    paragraphs: [\n                        para(\n                            text(\"Next, you find the patient’s airway to be patent but his breathing is rapid and shallow so you assist his ventilations with a\"),\n                            link(\"bag valve mask\", \"This patient was not adequately ventilating (rapid, shallow breaths) so O2 delivered via nasal canula or non-rebreather mask alone would not have been adequate.\"),\n                            text(\"and turn the O2 up to 15L. His extremity pulses are absent and skin is pale and diaphoretic. You instruct another responder to obtain a set of baseline vitals and obtain a SAMPLE history from a bystander while you perform a rapid head-to-toe assessment.\")\n                        ),\n                        para(\n                            text(\"You and your partners then place the patient\"),\n                            link(\"on a scoop stretcher,\", \"Spinal immobilization is contraindicated in this patient with a penetrating abdominal wound; immobilization on a spine board may cause further injury.\"),\n                            text(\"cover him with a blanket, and transfer him to the ambulance. Worried for\"),\n                            link(\"hemorrhagic shock,\", \"This GSW victim with a known source of significant bleeding is hypotensive, most likely from hemorrhagic shock, which should be managed with rapid fluid resuscitation, keeping the patient supine, administering O2, and keeping the patient warm\"),\n                            text(\"you place two large-bore IVs en route and start fluid resuscitation to a goal systolic BP >90.  You notify the Level 2 trauma center you are on the way, reassess the patient\"),\n                            link(\"every five minutes,\", \"Critically ill patients should be reassessed every 5 minutes\"),\n                            text(\"and confirm that all interventions are working properly, modifying any as necessary.\")\n\n                        )\n                    ]\n                }\n            ]\n        },\n        {\n            step: \"F\",\n            title: \"Formalize learning\",\n            heading: \"Please take a few minutes to think and reply to these questions\",\n            questions: \"What are your key take-home points from this scenario? What is something you want to continue working on or do differently in the future?\"\n        }\n    ];","/* Data for scenario C5CA phase IE \nThis data structure holds all the information to create the slides to present during the IE phase.\nIt mirrors the tree structure that is presented in the Excel file. All nodes in the tree are called actions whether \nthey are assessments or interventions. Subactions are the children of the actions in the tree.\nFields:\nid: identifies the action-node in the tree. It is a string since it is unique.\nlabel: text for the action as it will appear on the slide\ntype: indicates whether the action is Required, Contraindicated, Unnecessary, Irrelevant, Optional, Alternative.\n    Required, it will be listed in the left side of the slide so that students are asked if they performed it.\n    Contraindicated: it will be listed on the right side under a list of contraindicated actions that the student performed\n    accompanied by the feedback on the feedbackErrors field.\n    Unnecessary: it will be listed on the right side under a list of unnecessary actions that the student performed\n    accompanied by the feedback on the feedbackErrors field.\n    Irrelevent: it will be listed on the right side under a list of irrelevant actions that the student performed\n    accompanied by the feedback on the feedbackErrors field.\n    Optional: it will be accepted as correct if performed. We are considering it the same as Unnecessary.\n    Alternative: will be used for those interventions that can be performed as alternative to required ones.\nAlternativeToIntv: indicates the intervention for which the current one is an alternative. It will only have a value if\nthe type is Alternative.\nfeedbackAbsent: feedback given if the action was no performed\nfeedbackOutOfOrder: feedback given if the action was done late (e.g., if the action is Scene size-up and it was done \n    after Primary Survey)\nfeedbackErrors: feedback if the action was performed incorrectly (e.g., wrong ventilation rate)\nexamineIfAbsent: boolean to indicate if this Action needs to be examined when it is Absent (phase E)\nexamineIfErrors: boolean to indicate if this Action needs to be examined when there are performance errors (phase E)\npromptsIfAbsent: prompts to be included in question headers in phase E, to hint on how to reflect when Action was Absent\npromptsIfErrors: prompts to be included in question headers in phase E, to hint on how to reflect when Action was performed incorrectly\nsubActionsList: boolean that indicates whether the subActions need to be listed as bullet points on the slide. If they\n    don't need to be listed it is usually because they have been grouped however, the subActions still need to be \n    included in the subActions field because they are used by the analysis to give a summary of their status.\nsubActions: array with the corresponding subactions (to form the tree)\n*/\n\nimport {ACTION_TYPES, WAIT_TIFF, WAIT_SANDY, SUM_NODE_NO_FEEDBACK, NO_FEEDBACK, SUM_NODE_FBCK_CHILDREN} from \"./constants\";\n\nexport const C5CA_PhaseIE = {\n    Action: {\n      id: \"top\",\n      label: \"fully assess and manage the patient in this scenario\", /* the way it will appear on the slide */\n      type: ACTION_TYPES.REQ, /*indicates whether the action was Required, Contraindicated, Unnecessary, or Irrelevant\" */\n      feedbackAbsent: [\"Your log indicates you didn't complete any of these assessment or managment goal. Please restart the scenario and try again\"], /*feedback if the action was not performed*/\n      feedbackOutOfOrder: [\"\"], /*feedback if the action was done late (e.g., if the action is Scene Size-up \n        and it was done after Primary Survey)*/\n      feedbackErrors: [\"\"], /*feedback if the action was performed incorrectly (e.g. wrong Ventilation rate)*/\n      examineIfAbsent: false, /* boolean to indicate if this Action needs to be examined (phase E) */\n      examineIfErrors: false,\n      promptsIfAbsent: \"\", /* prompts to the included in question in phase E to hint on how to reflect */\n      promptsIfErrors: \"\",\n      subActionsList: true, /* boolean that indicates if subActions need to be listed as bullet points on slide */\n      subActions: [ /*array with the corresponding subactions (to form the tree)*/\n        {\n          id: \"scene-size-up\",\n          label: \"Put on BSI and do a complete Scene Size-up before entering the scene\",\n          type: ACTION_TYPES.REQ,\n          feedbackAbsent: [\"Your first steps should have been to don your protective wear, including eye protection, and to ensure the scene is safe. You cannot assist a patient if you are not safe yourself.\", \"Your scene size up gives you a big-picture view of what is going on before you even begin examining the patient and includes determining the mechanism of injury and number of patients, requesting additional help if necessary, and considering stabilization of the spine.\", \"In this case, you would have learned that your patient has been shot multiple times, so you know that controlling bleeding will be one of your top priorities.\"],\n          feedbackOutOfOrder: [\"Your first steps should have been to don your protective wear, including eye protection, and to ensure the scene is safe. You cannot assist a patient if you are not safe yourself.\", \"Your scene size up also gives you a big-picture view of what is going on before you even begin examining the patient. This includes determining the mechanism of injury and number of patients, requesting additional help if necessary, and considering stabilization of spine.\"],\n          feedbackErrors: [\"\"],\n          examineIfAbsent: false,\n          examineIfErrors: false,\n          promptsIfAbsent: \"\",\n          promptsIfErrors: \"\",\n          subActionsList: true,\n          subActions: [\n            {\n                id: \"required-action-BSI\",\n                label: \"Apply BSI\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Your first steps should have been to don your protective wear, including eye protection, and to ensure the scene is safe. You cannot assist a patient if you are not safe yourself.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"assess-scene-safety\",\n                label: \"Determine the scene/situation is safe\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Your first steps should have been to don your protective wear, including eye protection, and to ensure the scene is safe. You cannot assist a patient if you are not safe yourself.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"assess-injury-mechanism\",\n                label: \"Determine the mechanism of injury (MOI) or nature of illness (NOI)\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Knowing what caused the patient's injury or illness can allow you to start developing a plan of action before you even assess your patient.\", \"By determining the mechanism of injury, you would have learned that your patient has been shot multiple times, so you know that controlling bleeding will be one of your top priorities.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"assess-num-patients\",\n                label: \"Determine the number of patients\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Usually you will have one patient, but if there is more than one you will need to plan accordingly.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"required-action-requests-additional-help\",\n                label: \"Request additional help if necessary\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Consider the need for extra help based on number of patients, mechanism of injury, and your patient's status.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"required-action-considers-stabilize-spine\",\n                label: \"Consider stabilization of spine\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Be sure to consider the need for spinal immobilization in this trauma patient. In this case, you have a low level of concern for a spinal injury; further, know that spinal stabilization is contraindicated in patients with penetrating abdominal wounds.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n          ],\n        },\n        {\n          id: \"primary-survey\",\n          label: \"Perform a Primary Survey and manage all identified life threats\",\n          type: ACTION_TYPES.REQ,\n          feedbackAbsent: [\"The primary survey is an assessment of mental status, life-threats, and the patient's ABCs. It is where you will identify and address the patient's most serious injuries.\", \"In this case, the Primary Survey would have revealed a patient who is lethargic, bleeding profusely from the L upper leg, and breathing rapidly.\"],\n          feedbackOutOfOrder: [\"You should have started your Primary Survey after the Scene Size-up and completed it before starting the Secondary Survey. Only interrupt your assessment to control life-threats: (1) Conditions that compromise a patent airway (2) Conditions that compromise breathing or respirations, such as a tension pneumothorax, (3) Conditions that compromise circulation, such as severe bleeding, (4) Cardiac arrest, and any  other potentially life threatening injuries or conditions.  Your patient's condition will deteriorate if these conditions are not addressed before continuing on with your assessment and history taking.\"],\n          feedbackErrors: [\"\"],\n          examineIfAbsent: false,\n          examineIfErrors: false,\n          promptsIfAbsent: \"\",\n          promptsIfErrors: \"\",\n          subActionsList: true,\n          subActions: [\n            {\n                id: \"general-impression\",\n                label: \"Conduct an Initial Assessment\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"You should have performed an Initial Assessment: gathered a general impression, identified any apparent life threats, and determined your patient's level of consciousness.  Your Initial assessment would have revealed a patient who is lethargic and bleeding profusely from the L leg.\"],\n                feedbackOutOfOrder: [\"While you may be tempted to jump straight into your ABCs, apparent life threats (i.e., uncontrolled bleeding) should be addressed first, as they can cause a patient to deteriorate quickly. Also, be sure to assess the patient's level of consciousness as an unconscious patient will need a pulse check first to ensure he or she does not require CPR.\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"assess-patient-condition\",\n                        label: \"State or request a general impression\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Your general impression allows you to start developing a plan of action before you even assess your patient.\", \"In this case, your general impression would have been of a man with multiple gunshot wounds.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"assess-loc\",\n                        label: \"Assess the patient's level of consciousness\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"The patient's level of consciousness alters how you progress through your assessment.\", \"The patient is lethargic with a GCS of 12. This rules out the need for immediate CPR, so you would start your primary survey with an assessment of the patient's airway.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"assess-life-threats\",\n                        label: \"Determine the chief complaint/apparent life-threats\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"If you had determined apparent life threats, you would have noticed that the patient had life-threatening bleeding from his leg that should be addressed immediately.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"intv-spinal-immobilization-technique-manual-c-spine\",\n                label: \"Apply (or direct a partner to apply) manual c-spine stabilization\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"This patient has been shot in the abdomen and leg. While this may not directly suggest an injury to the spine, if you are unable to definitively rule out the possibility of a spinal injury (e.g., could he have fallen and hit his head after being shot?), you should have taken manual c-spine stabilization. You should have maintained it throughout until you were able to definitively rule out an injury to the spine.\"],\n                feedbackOutOfOrder: [\"During trauma situations it is necessary to stabilize the c-spine before continuing as not doing so may cause further injury to the patient.\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"Manage severe external bleeding\",\n                label: \"Manage severe external bleeding\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"This patient has severe bleeding from his left upper thigh. There are large vessels in the leg (including the femoral artery) that can bleed rapidly and quickly lead to hemorrhagic shock and death. Remember, that even if you don't see significant bleeding, any significant injury to the upper leg (ex. GSW, femur fracture) has the potential to lead to hemorrhagic shock.\"],\n                feedbackOutOfOrder: [\"Severe bleeding is a life threatening injury that should be considered and dealt with prior to the rest of the ABCs. For extremity injuries, this means a tourniquet is likely needed while other injuries may require direct pressure and bandaging or an occlusive dressing (e.g., for a severe neck bleed).\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: true,\n                examineIfErrors: false,\n                promptsIfAbsent: \"Didn't realize that the patient's bleeding could be life-threatening; didn't know the best way to manage the patient's bleeding\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"intv-control-bleeding-direct-pressure-and-tourniquet\",\n                        label: \"applying direct pressure and a tourniquet as far proximal to the gun shot wound on the patient's left thigh as possible\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"When you recognize the patient's life-threatening bleed, the first thing you should do is apply direct pressure or direct someone else to do so.\", \"While the ultimate management of this patient's life-threatening bleed is surgical, it is critical that you stop the bleeding as soon as possible. To do this, you should use a tourniquet and place it as far proximally as possible.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"Be sure to place the tourniquet as far proximally to the wound as possible.\"],\n                        examineIfAbsent: true,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"Didn't realize that the patient's bleeding could be life-threatening; didn't know the best way to manage the patient's bleeding was with a tourniquet\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                            {\n                                id: \"intv-control-severe-bleeding-technique-direct-pressure\",\n                                label: \"manage severe external bleeding by applying direct pressure\",\n                                type: ACTION_TYPES.REQ,\n                                feedbackAbsent: [\"When you recognize the patient's life-threatening bleed, the first thing you should do is apply direct pressure or direct someone else to do so. In instances of limb injury with significant bleeding a tourniquet may be appropriate first-line management is apply direct pressure or direct someone else to do so.\"],\n                                feedbackOutOfOrder: [\"\"],\n                                feedbackErrors: [\"\"],\n                                examineIfAbsent: false,\n                                examineIfErrors: false,\n                                promptsIfAbsent: \"\",\n                                promptsIfErrors: \"\",\n                                subActionsList: false,\n                                subActions: [],\n                              },\n                              {\n                                id: \"intv-control-severe-bleeding-technique-tourniquet\",\n                                label: \"manage severe external bleeding by applying tourniquet as far proximal to the wound as possible\",\n                                type: ACTION_TYPES.REQ,\n                                feedbackAbsent: [\"While the ultimate management of this patient's life-threatening bleed is surgical, it is critical that you stop the bleeding as soon as possible. To do this, you should use a tourniquet and place it as far proximally as possible.\"],\n                                feedbackOutOfOrder: [\"\"],\n                                feedbackErrors: [\"Be sure to place the tourniquet as far proximally to the wound as possible.\"],\n                                examineIfAbsent: false,\n                                examineIfErrors: false,\n                                promptsIfAbsent: \"\",\n                                promptsIfErrors: \"\",\n                                subActionsList: false,\n                                subActions: [],\n                              },\n                        ],\n                      },\n                      {\n                        id: \"check-bleeding\",\n                        label: \"Confirm that bleeding stopped and pulses are absent\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"After you apply direct pressure and place your tourniquet, you should ensure that the bleeding has stopped and check to ensure that pulses are absent. If this is not the cause, you may need a second tourniquet.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: true,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"Thought that one tourniquet was enough; did not realize a second tourniquet could be used if necessary\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          {\n                            id: \"request-intervention-status-intv-control-severe-bleeding-technique-direct-pressure\",\n                            label: \"Request status of direct pressure technique\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"After you apply direct pressure and place your tourniquet, you should ensure that the bleeding has stopped and check to ensure that pulses are absent. If this is not the cause, you may need a second tourniquet.\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [],\n                          },\n                          {\n                            id: \"request-intervention-status-intv-control-severe-bleeding-technique-tourniquet\",\n                            label: \"\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"After you place your tourniquet, you should ensure that the bleeding has stopped\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [],\n                          },\n                        ],\n                      },\n                      {\n                        id: \"intv-control-severe-bleeding-technique-2nd-tourniquet\", /* contraindicated intervention */\n                        label: \"Second tourniquet\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"You achieved hemostasis with the first tourniquet; a second tourniquet is not necessary.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-control-severe-bleeding-technique-pack-wound-with-gauze\", /* contraindicated intervention */\n                        label: \"Pack wound with gauze or hemostatic gauze\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"This patient's gun shot wounds to the abdomen and thigh are shallow and therefore can't be packed with gauze.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-control-severe-bleeding-technique-pressure-bandage\", /* optional intervention */\n                        label: \"Pressure dressing\",\n                        type: ACTION_TYPES.OPT,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"After dressing the patient's GSWs, a pressure dressing could be placed to maintain bleeding control.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-control-severe-bleeding-technique-load-and-go\", /* contraindicated intervention */\n                        label: \"Load and go due to uncontrolled bleeding.\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"You achieved hemostasis with the first tourniquet.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"airway\",\n                label: \"Assess the patient's airway\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Be sure to assess the airway for patency and intact physical structures.\", \"You would have found this patient's airway to be patent, as evidenced by the fact that you hear him moaning in pain.\"],\n                feedbackOutOfOrder: [\"If your patient is conscious, you should examine the airway before breathing and circulation. If a patient is unconscious, you should assess the pulse first to evaluate for possible cardiac arrest, then go through your ABCs.\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                      {\n                        id: \"airway-is-open\",\n                        label: \"Check if the airway is patent\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"The first step of your airway assessment is to see if the patient's airway is open. This patient's moaning indicates he has an open airway. Signs like stridor or gasping may indicate an airway obstruction.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"airway-has-intact-physical-structures\",\n                        label: \"Check if the airway has intact physical structures\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Though this patient did not have any facial trauma, be sure to look for injuries such as gun-shot wounds or facial fractures, as these may affect what basic or advanced airways you can use.  Avoid using a nasopharyngeal airway in patients with a suspected basilar skull fracture or nasal injury.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-open-airway-method-head-tilt\", // unnecessary intervention\n                        label: \"Head tilt chin lift\",\n                        type: ACTION_TYPES.UNNEC,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"A modified jaw thrust could make it easier to perform bag-valve mask ventilation, since it opens the airway.  However, doing so is not always necessary.  In this case, the patient's airway was patent.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-manual-finger-sweep\", /* contraindicated intervention */\n                        label: \"Manual (finger sweep)\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"If there is a visible foreign body in the mouth, it should be removed. However, a blind finger sweep is contraindicated as it could lodge a foreign body deeper into the airway. Further, there is no evidence of foreign body in this patient's mouth.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-magill-forceps-assisted\", /* contraindicated intervention */\n                        label: \"Magill forceps assisted removal\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"If there is a visible foreign body in the mouth, it should be removed. However, there is no evidence of a foreign body in this patient's mouth.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-heimlich-maneuver\", /* contraindicated intervention */\n                        label: \"Heimlich Maneuver\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"You have no evidence the patient is choking on an object so the Heimlich maneuver is not appropriate at this time.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-back-blows-and-chest-thrusts\", /* contraindicated intervention */\n                        label: \"Back blows and chest thrusts\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"You have no evidence the patient is choking on an object so back blows and chest thrusts are not appropriate at this time.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-oropharyngeal-airway\", /* contraindicated intervention */\n                        label: \"Oropharyngeal airway (OPA)\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"While an airway adjunct may be helpful in this case, the patient is conscious and he would likely refuse an oral airway.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-orotracheal-intubation\", /* contraindicated intervention */\n                        label: \"Orotracheal intubation\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"This patient's respiratory status can be stabilized with a BVM. There is no airway injury or lung injury and the patient's GCS is 12. More invasive airway support is unnecessary and dangerous.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: true,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"Thought this patient needed to be intubated\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-nasotracheal-intubation\", /* contraindicated intervention */\n                        label: \"Nasotracheal intubation\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"This patient's respiratory status can be stabilized with a BVM. There is no airway injury or lung injury and the patient's GCS is 12. More invasive airway support is unnecessary and dangerous.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: true,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"Thought this patient needed to be intubated\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-insert-advanced-airway\", /* contraindicated intervention */\n                        label: \"Insert advanced/rescue airway\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"This patient's respiratory status can be stabilized with a BVM. There is no airway injury or lung injury and the patient's GCS is 12. More invasive airway support is unnecessary and dangerous.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: true,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"Thought this patient needed to be intubated\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-rapid-sequence-intubation\", /* contraindicated intervention */\n                        label: \"Rapid-sequence intubation\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"RSI is not in the paramedic's scope of practice in Pennsylvania. This patient's respiratory status can be stabilized with a BVM. There is no airway injury or lung injury and the patient's GCS is 12. More invasive airway support is unnecessary and dangerous.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: true,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"Thought this patient needed to be intubated\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-sedation-assisted-intubation\", /* contraindicated intervention */\n                        label: \"Sedation-assisted intubation\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"This patient's respiratory status can be stabilized with a BVM. There is no airway injury or lung injury and the patient's GCS is 12. More invasive airway support is unnecessary and dangerous.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: true,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"Thought this patient needed to be intubated\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-needle-cricothyrotomy\", /* contraindicated intervention */\n                        label: \"Needle cricothyrotomy\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"A cricothyrotomy is indicated when there is an upper airway obstruction that cannot be removed. This patient has a patent airway.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: true,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"thought the patient had an upper airway obstruction\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-surgical-cricothyrotomy\", /* contraindicated intervention */\n                        label: \"Surgical cricothyrotomy\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"A cricothyrotomy is indicated when there is an upper airway obstruction that cannot be removed. This patient has a patent airway.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: true,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"thought the patient had an upper airway obstruction\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"breathing\",\n                label: \"Assess the patient's breathing\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"After assessing the patient's airway, assess their breathing by listening for breath sounds and observing their respiratory rate, rhythm, and effort.\", \"You would have found shallow and rapid breaths, but with clear and equal bilateral lungs sounds.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"breathing-checks-rate\",\n                        label: \"rate\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"A significantly elevated or depressed respiratory rate can suggest impending respiratory failure.\", \"This patient's tachypnea suggests the need for some respiratory support.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"breathing-checks-rhythm\",\n                        label: \"rhythm\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Although not found in this case, a patient who is breathing irregularly needs ventilatory support.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"breathing-checks-quality\",\n                        label: \"quality\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Sounds like stridor, crackles, or wheezing will help you diagnose and manage your patient's respiratory problems.\", \"This patient had rapid breathing but had clear lung sounds, suggesting that his lungs were likely uninjured.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        examineIfErrors: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"Manage inadequate breathing\",\n                label: \"Manage inadequate breathing\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Despite not being able to detect an SpO2 when obtaining vitals, your primary survey would have revealed a patient in respiratory distress with rapid, shallow breaths. This patient requires help with both ventilation and oxygenation.\"],\n                feedbackOutOfOrder: [\"Problems with ventilation and oxygenation are life threatening and should be addressed before you move on to your secondary survey. Repeat your exam and check vitals to ensure your interventions have worked as you expected. If not, your patient may deteriorate as you continue on with your examination.\", \"Additionally, problems with ventilation and oxygenation are life threatening and should be addressed by oxygen administration and BVM ventilation before you move on to your secondary survey. Repeat your exam and check vitals to ensure your interventions have worked as you expected. If not, your patient may deteriorate as you continue on with your examination.\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: true,\n                examineIfErrors: false,\n                promptsIfAbsent: \"Didn't realize that the patient's respiratory status was threatened; didn't know the best way to support this patient's breathing\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"intv-manage-breathing-NPA-and-BVM\",\n                        label: \"insert an NPA and ventilate the patient at a rate of 20 BPM while titrating oxygen at a flow rate of 15 L/min to a target SpO2 >= 90%\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"This patient requires respiratory support and responds by groaning in pain. This is a patient who may benefit from an NPA to help you best oxygenate and ventilate him. He has a gag reflex, so you would want to avoid an OPA.\",\"When you are assessing the patient's airway and breathing, you should have noticed that the patient's respiratory rate is fast and shallow, and his mental status is waning (GCS 12). This patient would benefit from ventilatory support, not just oxygenation. Further, this patient is in hemorrhagic shock. Remember that shock is the inadequate delivery of oxygen, so a key part of the management of shock includes administration of oxygen regardless of the patient's SpO2 or respiratory exam.\"],\n                        feedbackOutOfOrder: [\"In the event of a potentially compromised airway (including patients who are unconscious), the patient needs to have an airway adjunct for airway support prior to the secondary survey.\", \"Additionally, problems with ventilation and oxygenation are life threatening and should be addressed by oxygen administration and BVM ventilation before you move on to your secondary survey. Repeat your exam and check vitals to ensure your interventions have worked as you expected. If not, your patient may deteriorate as you continue on with your examination.\"],\n                        feedbackErrors: [\"This patient should be ventilated using a BVM hooked up to O2, turned up to 15LPM.\"],\n                        examineIfAbsent: true,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"Didn't realize that the patient's respiratory status was threatened; thought this patient only needed oxygenation; didn't remember that oxygen was part of the management of shock\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                            {\n                                id: \"intv-nasopharyngeal-airway\",\n                                label: \"Insert a basic airway adjunct\",\n                                type: ACTION_TYPES.REQ,\n                                feedbackAbsent: [\"This patient requires respiratory support and responds by groaning in pain. This is a patient who may benefit from an NPA to help you best oxygenate and ventilate him. He has a gag reflex, so you would want to avoid an OPA.\"],\n                                feedbackOutOfOrder: [\"In the event of a potentially compromised airway (including patients who are unconscious), the patient needs to have an airway adjunct for airway support prior to the secondary survey.\"],\n                                feedbackErrors: [\"\"],\n                                examineIfAbsent:false,\n                                examineIfErrors: false,\n                                promptsIfAbsent: \"\",\n                                promptsIfErrors: \"\",\n                                subActionsList: false,\n                                subActions: [],\n                              },\n                              {\n                                id: \"intv-ventilation-technique-bag-valve-mask\",\n                                label: \"ventilating the patient at a rate of 20 BPM, while titrating oxygen at a flow rate of 15 L/min to a target SpO2 >= 90%\",\n                                type: ACTION_TYPES.REQ,\n                                feedbackAbsent: [\"When you are assessing the patient's airway and breathing, you should have noticed that the patient's respiratory rate is fast and shallow, and his mental status is waning (GCS 12). This patient would benefit from ventilatory support, not just oxygenation. Further, this patient is in hemorrhagic shock. Remember that shock is the inadequate delivery of oxygen, so a key part of the management of shock includes administration of oxygen regardless of the patient's SpO2 or respiratory exam.\"],\n                                feedbackOutOfOrder: [\"Problems with ventilation and oxygenation are life threatening and should be addressed by oxygen administration and BVM ventilation before you move on to your secondary survey. Repeat your exam and check vitals to ensure your interventions have worked as you expected. If not, your patient may deteriorate as you continue on with your examination.\"],\n                                feedbackErrors: [\"This patient should be ventilated using a BVM hooked up to O2, turned up to 15LPM.\"],\n                                examineIfAbsent: true,\n                                examineIfErrors: false,\n                                promptsIfAbsent: \"Didn't realize that the patient's respiratory status was threatened; thought this patient only needed oxygenation; didn't remember that oxygen was part of the management of shock\",\n                                promptsIfErrors: \"\",\n                                subActionsList: false,\n                                subActions: [],\n                              },\n                        ],\n                      },\n                      {\n                        id: \"reassess-AB\",\n                        label: \"Check that airway/breathing interventions are working by checking relevant vitals--in particular, SpO2\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"When you decide your patient needs a treatment, you must ensure your treatment had the intended outcomes. In this case, after performing a needle decompression, you will listen for a rush of air and look for improvement in the patient's exam: is he breathing more comfortably, do you hear breath sounds bilaterally? You will also assess his vitals: how do his HR, RR, and BP look? If your intervention does not yield the expected results, ask yourself: was my diagnosis correct? Was my intervention correct? What else should I consider?\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          {\n                            id: \"request-vitals-Spo2\",\n                            label: \"check Spo2\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"You should have checked Spo2\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [],\n                          },\n                        ],\n                      },\n                      {\n                        id: \"intv-supplemental-oxygen-device-nasal-cannula\", /* optional intervention */\n                        label: \"Nasal cannula\",\n                        type: ACTION_TYPES.OPT,\n                        feedbackAbsent: [\"This patient was tachypneic and taking shallow breaths. Paired with your inability to capture his SpO2, this suggests that he needs assistance with both ventilation and oxygenation. While the use of nasal canula would help with oxygenation, it would have been more effective to move directly toward BVM ventilation.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"This patient was tachypneic and taking shallow breaths. Paired with your inability to capture his SpO2, this suggests that he needs assistance with both ventilation and oxygenation. While the use of nasal canula would help with oxygenation, it would have been more effective to move directly toward BVM ventilation.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-supplemental-oxygen-device-non-rebreather-mask\", /* optional intervention */\n                        label: \"Non-rebreather mask\",\n                        type: ACTION_TYPES.OPT,\n                        feedbackAbsent: [\"This patient was tachypneic and taking shallow breaths. Paired with your inability to capture his SpO2, this suggests that he needs assistance with both ventilation and oxygenation. While the use of a non-rebreather mask would help with oxygenation, it would have been more effective to move directly toward BVM ventilation.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"This patient was tachypneic and taking shallow breaths. Paired with your inability to capture his SpO2, this suggests that he needs assistance with both ventilation and oxygenation. While the use of a non-rebreather mask would help with oxygenation, it would have been more effective to move directly toward BVM ventilation.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-occlusive-dressing\", /* contraindicated intervention */\n                        label: \"Occlusive dressing\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"The patient did not have a penetrating chest wound.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-pleural-decompression\", /* contraindicated intervention */\n                        label: \"Needle decompression\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"The patient did not have a penetrating chest wound.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"circulation\",\n                label: \"Assess the patient's circulation\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Evaluate the patient's pulse and skin to assess the patient for shock.  Be sure to also perform a gross blood sweep.\", \"You would have noticed that your patient had absent radial pulses and a rapid, weak central pulse, concerning for poor peripheral perfusion and shock.\"],\n                feedbackOutOfOrder: [\"All unconscious patients should have a pulse check before starting the ABCs. If the patient is pulseless, you will start high-quality CPR immediately.\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"pulse-checks\",\n                        label: \"check pulse\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"First check for a radial pulse. However, if you don't feel one, you want to check a carotid pulse.\", \"This patient's radial pulses were absent, but he did have a weak carotid pulse, which would prompt you to worry about shock.\", \"Checking this patient's pulse rate would have revealed that he was tachycardic. A significantly elevated or depressed pulse rate can suggest shock or respiratory failure.\", \"While this patient's heart had a regular rhythm, remember that an irregular rhythm can suggest impending cardiac arrest or arrhythmia.\", \"A patient in shock may have weak or absent pulses distally, such as this patient, suggestive of shock.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: true,\n                        subActions: [\n                          {\n                            id: \"prompt-to-specify-pulse\",\n                            label: \"check the appropriate pulse(s)\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"First check for a radial pulse. However, if you don't feel one, you want to check a carotid pulse.\", \"This patient's radial pulses were absent, but he did have a weak carotid pulse, which would prompt you to worry about shock.\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"First check for a radial pulse. However, if you don't feel one, you want to check a carotid pulse.\", \"This patient's radial pulses were absent, but he did have a weak carotid pulse, which would prompt you to worry about shock.\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [],\n                          },\n                          {\n                            id: \"checks-pulse-rate-rhythm-quality\",\n                            label: \"check pulse rate, rhythm, and quality\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"Checking this patient's pulse rate would have revealed that he was tachycardic. A significantly elevated or depressed pulse rate can suggest shock or respiratory failure.\", \"While this patient's heart had a regular rhythm, remember that an irregular rhythm can suggest impending cardiac arrest or arrhythmia.\", \"A patient in shock may have weak or absent pulses distally, such as this patient, suggestive of shock.\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [\n                              {\n                                id: \"checks-pulse-rate\",\n                                label: \"rate\",\n                                type: ACTION_TYPES.REQ,\n                                feedbackAbsent: [\"Checking this patient's pulse rate would have revealed that he was tachycardic. A significantly elevated or depressed pulse rate can suggest shock or respiratory failure.\"],\n                                feedbackOutOfOrder: [\"\"],\n                                feedbackErrors: [\"\"],\n                                examineIfAbsent: false,\n                                examineIfErrors: false,\n                                promptsIfAbsent: \"\",\n                                promptsIfErrors: \"\",\n                                subActionsList: false,\n                                subActions: [],\n                              },\n                              {\n                                id: \"checks-pulse-rhythm\",\n                                label: \"rhythm\",\n                                type: ACTION_TYPES.REQ,\n                                feedbackAbsent: [\"While this patient's heart had a regular rhythm, remember that an irregular rhythm can suggest impending cardiac arrest or arrhythmia.\"],\n                                feedbackOutOfOrder: [\"\"],\n                                feedbackErrors: [\"\"],\n                                examineIfAbsent: false,\n                                examineIfErrors: false,\n                                promptsIfAbsent: \"\",\n                                promptsIfErrors: \"\",\n                                subActionsList: false,\n                                subActions: [],\n                              },\n                              {\n                                id: \"checks-pulse-quality\",\n                                label: \"quality\",\n                                type: ACTION_TYPES.REQ,\n                                feedbackAbsent: [\"A patient in shock may have weak or absent pulses distally, such as this patient, suggestive of shock.\"],\n                                feedbackOutOfOrder: [\"\"],\n                                feedbackErrors: [\"\"],\n                                examineIfAbsent: false,\n                                examineIfErrors: false,\n                                promptsIfAbsent: \"\",\n                                promptsIfErrors: \"\",\n                                subActionsList: false,\n                                subActions: [],\n                              },\n                            ],\n                          },\n                        ],\n                      },\n                      {\n                        id: \"checks-skin\",\n                        label: \"check skin\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Pallor, which you would have noted on this patient, is a sign of inadequate oxygenation and may be caused by shock or respiratory failure. Additionally, this patient's cold skin suggests decompensated shock. Moreover, this patient had diaphoretic skin, which in this case is non-specific, but should prompt you to think about shock.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: true,\n                        subActions: [\n                          {\n                            id: \"checks-skin-color\",\n                            label: \"color\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"Pallor, which you would have noted on this patient, is a sign of inadequate oxygenation and may be caused by shock or respiratory failure.\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [],\n                          },\n                          {\n                            id: \"checks-skin-temperature\",\n                            label: \"temperature\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"This patient's cold skin suggests decompensated shock.\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [],\n                          },\n                          {\n                            id: \"checks-skin-condition\",\n                            label: \"condition\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"This patient had diaphoretic skin, which in this case is non-specific, but should prompt you to think about shock.\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [],\n                          },\n                        ],\n                      },\n                      {\n                        id: \"assess-major-bleeding\",\n                        label: \"Perform a gross blood sweep\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"A gross blood sweep, which was negative in this patient, will help you identify any life-threatening bleeding you may have missed earlier when forming your general impression.\", \"Beyond the life-threatening bleeding from his left leg, the patient also has minor bleeding from his left upper abdomen.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"transport-decision\",\n                label: \"Make appropriate transport decisions based on your findings so far\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Your ABCs and evaluation for life threats and level of consciousness will dictate where you transfer your patient.\", \"Because of the patient's life-threatening bleeding, he should be quickly transferred to the level II trauma center for definitive management.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"decision-is-load-and-go\",\n                        label: \"Determine that this is a critical patient\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"This patient is in hemorrhagic shock and needs to get to definitive management as soon as possible. You will not be able to fix him in the field.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"This patient is in hemorrhagic shock and needs to get to definitive management as soon as possible. You will not be able to fix him in the field.\"],\n                        examineIfAbsent: true,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"Didn't realize this was a critically ill patient; felt this patient should be further stabilized on site prior to transfer\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-transport\",\n                        label: \"Decide to transport this patient to the Level 2 trauma center by ground ambulance.\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"This patient should be evaluated at the level II trauma center that is 18 minutes away, where they can provide definitive care for his injuries. He should be taken by ambulance with lights and sirens.\"],\n                        feedbackOutOfOrder: [\"Initial transport decisions should be made following the 'Primary Survey' (ABCs) because that is when the provider decides whether the patient can be further stabilized on scene or taken directly to a hospital in a 'load and go' scenario. The secondary assessment is only performed on scene if the situation is NOT a 'load and go.' Making transport decisions early is especially important if you are calling for an air ambulance to account for the time it takes for them to arrive.\"],\n                        feedbackErrors: [\"This patient should be evaluated at the level II trauma center that is 18 minutes away, where they can provide definitive care for his injuries. He should be taken by ambulance with lights and sirens.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-call-for-air-ambulance\", /* contraindicated intervention */\n                        label: \"Call for air ambulance\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"Air ambulance was not available.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"trauma-expose\",\n                label: \"Trauma expose the patient\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Exposure is necessary to properly inspect the patient for injuries. Only the area being inspected should be uncovered and then recovered to prevent heat loss and hypothermia.\"],\n                feedbackOutOfOrder: [\"It is important to expose your patient to ensure that your secondary survey can be performed efficiently -- especially in trauma scenarios where there may be more unknown injuries. Exposing the patient allows the provider to more carefully examine the patient during assessment.\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                subActionsList: false,\n                subActions: [\n                  {\n                  id: \"exposes-body-parts\",\n                  label: \"Exposed (and recovered) anatomical areas as necessary\",\n                  type: ACTION_TYPES.REQ,\n                  feedbackAbsent: [\"Exposure is necessary to properly inspect the patient for injuries. Only the area being inspected should be uncovered and then recovered to prevent heat loss and hypothermia.\"],\n                  feedbackOutOfOrder: [\"It is important to expose your patient to ensure that your secondary survey can be performed efficiently -- especially in trauma scenarios where there may be more unknown injuries. Exposing the patient allows the provider to more carefully examine the patient during assessment.\"],\n                  feedbackErrors: [\"\"],\n                  examineIfAbsent: false,\n                  examineIfErrors: false,\n                  promptsIfAbsent: \"\",\n                  promptsIfErrors: \"\",\n                  subActionsList: false,\n                  subActions: [],\n                  },\n                ],\n              },\n              {\n                id: \"intv-spinal-immobilization-technique-cervical-collar\", /* unnecessary intervention */\n                label: \"Apply an appropriately sized cervical collar\",\n                type: ACTION_TYPES.UNNEC,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"This patient has no evidence of neck injury. Placing a collar and/or CID will make your examination more difficult and should only be done if you suspect an injury to the neck, whether by history or exam.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n          ],\n        },\n        {\n          id: \"history-taking\",\n          label: \"Obtain or direct a partner to obtain a patient history\",\n          type: ACTION_TYPES.REQ,\n          feedbackAbsent: [\"Vital signs will help you decide how to manage your patient, as will a history. Even if you cannot obtain a history from the patient directly, you should still try to get as much information as you can (e.g., from a bystander).\"],\n          feedbackOutOfOrder: [\"\"],\n          feedbackErrors: [\"\"],\n          examineIfAbsent: false,\n          examineIfErrors: false,\n          promptsIfAbsent: \"\",\n          promptsIfErrors: \"\",\n          subActionsList: true,\n          subActions: [\n            {\n                id: \"required-action-obtains-vitals\",\n                label: \"Baseline vital signs\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Baseline vitals are critical; they will help you assess, manage, and continue to monitor your patient.\", \"You would have found that this patient was tachycardic, tachypneic and hypotensive, prompting you to worry about shock, most likely hemorrhagic given the rapid bleeding from the leg.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"required-action-attempt-obtain-sample\",\n                label: \"SAMPLE (if possible)\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Take an efficient but thorough history from the patient or the witnesses: symptoms, allergies, medications, past medical history, last oral intake, events preceding.\", \"You would have learned that the patient was shot in his abdomen and leg while arguing with a group of people.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"required-action-obtain-OPQRST\",\n                label: \"OPQRST (if possible)\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"In this case the patient is unable to tell you about his pain. Instead, you should ask bystanders for any information they have.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n          ],\n        },\n        {\n          id: \"secondary-assessment\",\n          label: \"Perform a Secondary Survey (rapid trauma assessment)\",\n          type: ACTION_TYPES.REQ,\n          feedbackAbsent:[\"The Secondary Survey is a thorough exam of your patient to ensure you have a complete understanding of what is going on and how you need to manage your patient.\"],\n          feedbackOutOfOrder: [\"\"],\n          feedbackErrors: [\"\"],\n          examineIfAbsent: false,\n          examineIfErrors: false,\n          promptsIfAbsent: \"\",\n          promptsIfErrors: \"\",\n          subActionsList: true,\n          subActions: [\n            {\n                id: \"head\",\n                label: \"examine the patient's head\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Inspecting the face for bruising and palpating for facial deformity may indicate facial fractures.\", \"Abnormal eye movement or pupils, which this patient fortunately did not have, suggest intracranial injury and should prompt you to rapidly transfer your patient to a trauma center. Additionally, bruising around the eyes may be caused by basilar skull fracture, though this aspect of the exam was normal in this patient.\", \"Although not found in this case, bleeding from the ear may be indicative of a basilar skull fracture and bruising behind the ear suggests a basilar skull fracture (Battle's sign).\", \"This patient had no drainage from the nose but consider CSF leak from a basilar skull fracture if you see clear drainage.\", \"If the patient had had secretions or blood in the mouth, you would have needed to apply suction to clear the airway. Additionally, any visualized foreign bodies in the mouth should be removed. A blind finger sweep is never indicated, as you could lodge a foreign body deeper into the airway. There were no obstructions in this patient’s mouth.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"assessment-inspects-skull\",\n                        label: \"Inspect and palpate the scalp and skull\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"assessment-inspects-facial-bones\",\n                        label: \"Inspect and palpate the facial bones\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Inspecting the face for bruising and palpating for facial deformity may indicate facial fractures.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"inspects-eyes\",\n                        label: \"Inspect the eyes for PERRLA and bruising (\\\"raccoon eyes\\\")\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Abnormal eye movement or pupils, which this patient fortunately did not have, suggest intracranial injury and should prompt you to rapidly transfer your patient to a trauma center.\", \"Additionally, bruising around the eyes may be caused by basilar skull fracture, though this aspect of the exam was normal in this patient.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          {\n                           id: \"inspects-eyes-PERRLA\",\n                           feedbackAbsent: [\"Abnormal eye movement or pupils, which this patient fortunately did not have, suggest intracranial injury and should prompt you to rapidly transfer your patient to a trauma center.\"], \n                           subActions: []\n                          },\n                          {\n                           id: \"inspects-eyes-racoon\",\n                           feedbackAbsent: [\"This aspect of the exam was normal in this patient, but bruising around the eyes may be caused by basilar skull fracture.\"], \n                           subActions: []\n                          }\n                        ],\n                      },\n                      {\n                        id: \"inspects-ears\",\n                        label: \"Inspect the ears for blood, other fluids, and bruising (\\\"battle signs\\\")\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Although not found in this case, bleeding from the ear may be indicative of a basilar skull fracture and bruising behind the ear suggests a basilar skull fracture (Battle's sign).\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          {\n                           id: \"inspects-ears-blood\",\n                           feedbackAbsent: [\"Although not found in this case, bleeding from the ear may be indicative of a basilar skull fracture.\"],\n                           subActions: []\n                          },\n                          {\n                           id: \"inspects-ears-bruising\",\n                           feedbackAbsent: [\"Although not found in this case, bruising behind the ear suggests a basilar skull fracture (Battle's sign).\"], \n                           subActions: []\n                          }\n                        ],\n                      },\n                      {\n                        id: \"inspects-nose\",\n                        label: \"Inspect the nose for blood and other fluids\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"This patient had no drainage from the nose but consider CSF leak from a basilar skull fracture if you see clear drainage.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"inspects-mouth\",\n                        label: \"Inspect the mouth for blood, other secretions, and obstructions\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"If the patient had had secretions or blood in the mouth, you would have needed to apply suction to clear the airway.\", \"Additionally, any visualized foreign bodies in the mouth should be removed. A blind finger sweep is never indicated, as you could lodge a foreign body deeper into the airway. There were no obstructions in this patient’s mouth.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"neck\",\n                label: \"examine the patient's neck\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"This patient's neck exam was normal, but remember, tracheal deviation suggests unequal intrathoracic pressure (for example, a pneumothorax). The trachea will be deviated away from the side with increased pressure.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"assessment-neck-injury\",\n                        label: \"injury\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"assessment-tracheal-deviation\",\n                        label: \"tracheal deviation\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"This patient's neck exam was normal, but remember, tracheal deviation suggests unequal intrathoracic pressure (for example, a pneumothorax). The trachea will be deviated away from the side with increased pressure. Additionally, a palpable step-off suggests a fracture.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"assessment-JVD\",\n                        label: \"jugular venous distension (JVD)\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"This patient's neck exam was normal, but remember, JVD suggests that the heart is not adequately pushing out blood. Consider obstructive processes like a tension pneumothorax or hemothorax.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"assessment-stepoffs\",\n                        label: \"step-offs\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"This patient's neck exam was normal, but remember, a palpable step-off suggests a fracture.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"chest\",\n                label: \"examine the patient's chest\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"The presence and quality of breath sounds can clue you into underlying problems (e.g., pneumothorax, asthma). This patient's breath sounds were normal and equal bilaterally.\", \"Inspecting the shoulders for discoloration symmetry or deformity may identify dislocation or fracture of the shoulder (clavicle, humerus and scapula).  This patient's shoulders were normal.\", \"The clavicles should be inspected for any evidence of fractures. Though rare, clavicle fractures can cause a pneumothorax. This patient’s clavicles were normal.\", \"If the patient had had anterior thorax and rib crepitation, you should suspect air outside of the lungs, which would raise your suspicion for a pneumothorax. The patient had symmetric movement of his chest. Recall that paradoxical chest wall motion suggests flail chest, where multiple rib fractures lead to an unstable portion of the chest wall.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"assessment-check-breath-sounds\",\n                        label: \"Listen for breath sounds\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"The presence and quality of breath sounds can clue you into underlying problems (e.g., pneumothorax, asthma). This patient's breath sounds were normal and equal bilaterally.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                       },\n                       {\n                        id: \"assessment-inspect-shoulders\",\n                        label: \"Inspect and palpate shoulders\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Inspecting the shoulders for discoloration symmetry or deformity may identify dislocation or fracture of the shoulder (clavicle, humerus and scapula).  This patient's shoulders were normal.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"assessment-inspect-clavicles\",\n                        label: \"Inspect and palpates clavicles\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"The clavicles should be inspected for any evidence of fractures. Though rare, clavicle fractures can cause a pneumothorax. This patient’s clavicles were normal.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"inspects-palpates-anterior-thorax\",\n                        label: \"Inspect and palpate anterior thorax for injury, crepitation, and paradoxial motion or flail segments\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"If the patient had had anterior thorax and rib crepitation, you should suspect air outside of the lungs, which would raise your suspicion for a pneumothorax.\", \"The patient had symmetric movement of his chest. Recall that paradoxical chest wall motion suggests flail chest, where multiple rib fractures lead to an unstable portion of the chest wall.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          {id: \"inspects-chest-injury\",\n                           feedbackAbsent: [\"\"],\n                           subActions: [],},\n                          {id: \"inspects-palpates-anterior-thorax-crepitation\",\n                           feedbackAbsent: [\"If the patient had had anterior thorax and rib crepitation, you should suspect air outside of the lungs, which would raise your suspicion for a pneumothorax.\"],\n                           subActions: []},\n                          {id: \"inspects-anterior-thorax-paradoxical-motion\",\n                           feedbackAbsent: [\"The patient had symmetric movement of his chest. Recall that paradoxical chest wall motion suggests flail chest, where multiple rib fractures lead to an unstable portion of the chest wall.\"],\n                           subActions: []},\n                        ],\n                      },\n                ],\n              },\n              {\n                id: \"abdomen-pelvis\",\n                label: \"examine the patient's abdomen\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"You should have noticed two gunshot wounds with minimal external bleeding in the left upper quadrant. Despite minimal external bleeding, penetrating abdominal wounds can have significant internal bleeding.\",\"Additionally, on palpation, you should have noticed that the patient's abdomen was rigid, suggesting intra-abdominal blood, likely related to the gunshot wounds.\",\"Finally, a distended abdomen suggests trauma and internal bleeding. Fortunately, the patient's abdomen was non-distended.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"inspects-abdomen-injury\",\n                        label: \"inspect and palpate for injury\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"You should have noticed two gunshot wounds with minimal external bleeding in the left upper quadrant. Despite minimal external bleeding, penetrating abdominal wounds can have significant internal bleeding.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"inspects-palpates-abdomen-distension\",\n                        label: \"inspect and palpate for distension\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"A distended abdomen suggests trauma and internal bleeding. Fortunately, the patient's abdomen was non-distended.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"inspects-palpates-abdomen-rigidity\",\n                        label: \"inspect and palpate for rigidity\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"On palpation, you should have noticed that the patient's abdomen was rigid, suggesting intra-abdominal blood, likely related to the gunshot wounds.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"assess-pelvis\",\n                label: \"examine the patient's pelvis\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Be sure to do a thorough exam of the pelvis as the pelvis can be a source of life-threatening bleeding. The presence of blood or other fluids may indicate urethral, vaginal or rectal injury. Fortunately, your exam of this patient’s pelvis and genitalia would have been normal.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"assessment-checks-pelvis\",\n                        label: \"Inspect and compress the pelvis\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Be sure to do a thorough exam of the pelvis as the pelvis can be a source of life-threatening bleeding. Fortunately, the patient's pelvis exam was normal.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"inspects-genitalia-perineum-blood\",\n                        label: \"Inspect the genitalia/perineum for blood, other fluids.\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"The presence of blood or other fluids may indicate urethral, vaginal or rectal injury.\",\"Your exam of this patient’s pelvis and genitalia would have been normal.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"extremities\",\n                label: \"examine the patient's upper and lower extremities\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Because the patient was in shock, you would have been unable to appreciate any distal pulses.\", \"Diminished or absent mobility may suggest spinal cord or other nervous system injury. The patient was shot in the left leg. You may have noted an abnormal motor exam related to either pain or neurovascular injury.\", \"Diminished or absent sensation may suggest spinal cord or other nervous system injury. This patient's sensation was intact in his extremities.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"inspects-extremities-injury\",\n                        label: \"Inspect and palpate each extremity for injury\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          { id: \"inspects-right-arm-injury\",\n                            feedbackAbsent: [\"\"],\n                            subActions: []},\n                           {id: \"inspects-left-arm-injury\",\n                            feedbackAbsent: [\"\"],\n                            subActions: []},\n                           {id: \"inspects-right-leg-injury\",\n                            feedbackAbsent: [\"\"],\n                            subActions: []},\n                           {id: \"inspects-left-leg-injury\",\n                            feedbackAbsent: [\"\"],\n                            subActions: []},\n                        ],\n                      },\n                      {\n                        id: \"inspects-extremities-pulse\",\n                        label: \"Inspect and palpate each extremity for pulse\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Because the patient was in shock, you would have been unable to appreciate any distal pulses.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          { id: \"inspects-right-arm-pulse\",\n                            feedbackAbsent: [\"Because the patient was in shock, you would have been unable to appreciate any distal pulses.\"],\n                            subActions: []},\n                           {id: \"inspects-left-arm-pulse\",\n                            feedbackAbsent: [\"Because the patient was in shock, you would have been unable to appreciate any distal pulses.\"],\n                            subActions: []},\n                           {id: \"inspects-right-leg-pulse\",\n                            feedbackAbsent: [\"Because the patient was in shock, you would have been unable to appreciate any distal pulses.\"],\n                            subActions: []},\n                           {id: \"inspects-left-leg-pulse\",\n                            feedbackAbsent: [\"Because the patient was in shock, you would have been unable to appreciate any distal pulses.\"],\n                            subActions: []},\n                        ],\n                      },\n                      {\n                        id: \"inspects-extremities-motor-function\",\n                        label: \"Inspect and palpate each extremity for motor function\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Diminished or absent mobility may suggest spinal cord or other nervous system injury. The patient was shot in the left leg. You may have noted an abnormal motor exam related to either pain or neurovascular injury.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          { id: \"inspects-right-arm-motor-ability\",\n                            feedbackAbsent: [\"Diminished or absent mobility may suggest spinal cord or other nervous system injury. This patient was moving his extremities normally.\"],\n                            subActions: []},\n                           {id: \"inspects-left-arm-motor-ability\",\n                            feedbackAbsent: [\"Diminished or absent mobility may suggest spinal cord or other nervous system injury. This patient was moving his extremities normally.\"],\n                            subActions: []},\n                           {id: \"inspects-right-leg-motor-ability\",\n                            feedbackAbsent: [\"Diminished or absent mobility may suggest spinal cord or other nervous system injury. This patient was moving his extremities normally.\"],\n                            subActions: []},\n                           {id: \"inspects-left-leg-motor-ability\",\n                            feedbackAbsent: [\"The patient was shot in the left leg. You may have noted an abnormal motor exam related to either pain or neurovascular injury.\"],\n                            subActions: []},\n                        ],\n                      },\n                      {\n                        id: \"inspects-extremities-sensory-function\",\n                        label: \"Inspect and palpate each extremity for sensory function\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Diminished or absent sensation may suggest spinal cord or other nervous system injury. This patient's sensation was intact in his extremities.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          { id: \"inspects-right-arm-sensory-function\",\n                            feedbackAbsent: [\"Diminished or absent sensation may suggest spinal cord or other nervous system injury. This patient's sensation was intact in his extremities.\"],\n                            subActions: []},\n                           {id: \"inspects-left-arm-sensory-function\",\n                            feedbackAbsent: [\"Diminished or absent sensation may suggest spinal cord or other nervous system injury. This patient's sensation was intact in his extremities.\"],\n                            subActions: []},\n                           {id: \"inspects-right-leg-sensory-function\",\n                            feedbackAbsent: [\"Diminished or absent sensation may suggest spinal cord or other nervous system injury. This patient's sensation was intact in his extremities.\"],\n                            subActions: []},\n                           {id: \"inspects-left-leg-sensory-function\",\n                            feedbackAbsent: [\"Diminished or absent sensation may suggest spinal cord or other nervous system injury. This patient's sensation was intact in his extremities.\"],\n                            subActions: []},\n                        ],\n                      }, \n                ],\n              },\n              {\n                id: \"posterior\",\n                label: \"You will need a partner to help you roll the patient safely in order to do a thorough exam of the posterior thorax, lumbar, and buttocks for injury and step-offs. A palpable step-off, which the patient did not have, would suggest a fracture.\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"A palpable step-off, which the patient did not have, would suggest a fracture.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                      id: \"inspects-posterior-other-injury\",\n                      feedbackAbsent: [\"\"],\n                      subActions: []\n                    },\n                    {\n                      id: \"inspects-posterior-step-offs\",\n                      feedbackAbsent:[\"A palpable step-off, which the patient did not have, would suggest a fracture.\"],\n                      subActions: []\n                    },\n                ],\n              },\n          ],\n        },\n        {\n          id: \"ongoing-mgmt-plan\",\n          label: \"Continue to provide adequate prehospital care until arriving at the receiving facility\",\n          type: ACTION_TYPES.REQ,\n          feedbackAbsent: [\"Full spinal immobilization on a longboard is contraindicated for a patient such as this, with a penetrating abdominal injury.  It would be best to transfer him with a scoop stretcher, or carefully strap him onto a longboard and then move him to the ambulance gurney.\", \"Even if you don't place a collar on this patient, he needs padding in place to protect his head and neck during transfer, and allow for release of manual c-spine stabilization.\", \"Even if you had no imminent plans to administer fluids, it is beneficial to preemptively place IVs in case your patient were to deteriorate. Keep in mind that if your patient is bleeding and becoming more and more hypotensive, inserting an IV will become increasingly difficult.\", \"This patient is in shock as evidenced by his lack of peripheral pulses, pale and diaphoretic skin exam, waning mental status, and hypotension. The mostly likely cause of this is the GSW to the leg. Stopping the bleeding and restoring his intravascular volume will help get him to definitive management: surgery.\", ],\n          feedbackOutOfOrder: [\"\"],\n          feedbackErrors: [\"\"],\n          examineIfAbsent: false,\n          examineIfErrors: false,\n          promptsIfAbsent: \"\",\n          promptsIfErrors: \"\",\n          subActionsList: true,\n          subActions: [\n            {\n                id: \"intv-place-on-immobilization-device\",\n                label: \"Place the patient on a scoop stretcher or other transfer/immobilization device and move him to the ambulance stretcher\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Full spinal immobilization on a longboard is contraindicated for a patient such as this, with a penetrating abdominal injury.  It would be best to transfer him with a scoop stretcher, or carefully strap him onto a longboard and then move him to the ambulance gurney.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"Full spinal immobilization on a longboard is contraindicated for a patient such as this, with a penetrating abdominal injury.  It would be best to transfer him with a scoop stretcher, or carefully strap him onto a longboard and then move him to the ambulance gurney.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-spinal-immobilization-technique-attach-cid\",\n                label: \"apply padding (e.g., CID, towels) to keep head inline with spine\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Even if you don't place a collar on this patient, he needs padding in place to protect his head and neck during transfer, and allow for release of manual c-spine stabilization.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-establish-iv\",\n                label: \"Establish at lease one large bore IV en route\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Even if you had no imminent plans to administer fluids, it is beneficial to preemptively place IVs in case your patient were to deteriorate. Keep in mind that if your patient is bleeding and becoming more and more hypotensive, inserting an IV will become increasingly difficult.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"Even if you had no imminent plans to administer fluids, it is beneficial to preemptively place IVs in case your patient were to deteriorate. Keep in mind that if your patient is bleeding and becoming more and more hypotensive, inserting an IV will become increasingly difficult.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: []\n              },\n              {\n                id: \"intv-manage-hemorrhagic-shock\",\n                label: \"Manage hemorrhagic shock\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"This patient is in shock as evidenced by his lack of peripheral pulses, pale and diaphoretic skin exam, waning mental status, and hypotension. The mostly likely cause of this is the GSW to the leg. Stopping the bleeding and restoring his intravascular volume will help get him to definitive management: surgery.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: true,\n                examineIfErrors: false,\n                promptsIfAbsent: \"didn't recognize hemorrhagic shock; didn't remember all the steps in the management of hemorrhagic shock\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                  {\n                    id: \"intv-control-shock-technique-administer-iv-boluses\",\n                    label: \"Bolusing normal saline or Lactated Ringers to a goal BP of 90mm Hg systolic as soon as possible\",\n                    type: ACTION_TYPES.REQ,\n                    feedbackAbsent: [\"This patient has been bleeding and requires intravascular support to restore and maintain his blood pressure. Administer an isotonic fluid as rapidly as possible (maximizing the size and number of IVs will help you with this) to a goal BP of 90 systolic.\"],\n                    feedbackOutOfOrder: [\"\"],\n                    feedbackErrors: [\"You want to establish at least 2 IVs as soon as possible. As your patient deteriorates and his blood pressure drops further, IV placement becomes more difficult.\", \"You should use as large of an IV as possible; this will allow you to administer fluids rapidly. Remember that the pressure of the flow of a fluid is inversely proportional to the radius to the 4th power.\", \"Always use an isotonic fluid without dextrose for volume resuscitation. This can be either normal saline or Lactated Ringers.  Given this patient's weight, you could titrate 1360 mL of fluids.\", \"Your goal of fluid administration is to re-establish an adequate, if not normal BP to ensure adequate oxygenation to the patient's end-organs. If you give too much fluid, you risk creating new problems, such as pulmonary edema.\"],\n                    examineIfAbsent: true,\n                    examineIfErrors: false,\n                    promptsIfAbsent: \"Didn't know how much fluid to give; didn't know what kind of fluid to give\",\n                    promptsIfErrors: \"\",\n                    subActionsList: false,\n                    subActions: [],\n                  },\n                  {\n                    id: \"intv-control-shock-technique-keep-patient-warm\",\n                    label: \"keeping the patient warm, using some of the following methods: a) applying heat packs to the patient's groin or armpits, b) covering the patient with blankets, c) turning the heat up in the ambulance.\",\n                    type: ACTION_TYPES.REQ,\n                    feedbackAbsent: [\"It is important to keep this patient warm because hypothermia can cause additional problems or worsening of the patient's current problems, including hypotension, arrhythmias, or even cardiac arrest.\"],\n                    feedbackOutOfOrder: [\"\"],\n                    feedbackErrors: [\"\"],\n                    examineIfAbsent: false,\n                    examineIfErrors: false,\n                    promptsIfAbsent: \"\",\n                    promptsIfErrors: \"\",\n                    subActionsList: false,\n                    subActions: [],\n                  },\n                  {\n                    id: \"intv-control-shock-technique-place-patient-supine-position\",\n                    label: \"maintaining the patient in supine position\",\n                    type: ACTION_TYPES.REQ,\n                    feedbackAbsent: [\"When you keep a patient in a supine position, you make it easier for the heart to pump blood to the brain. A patient in shock is already not delivering adequate oxygen to the brain; fighting gravity will not make this any easier.\"],\n                    feedbackOutOfOrder: [\"\"],\n                    feedbackErrors: [\"\"],\n                    examineIfAbsent: false,\n                    examineIfErrors: false,\n                    promptsIfAbsent: \"\",\n                    promptsIfErrors: \"\",\n                    subActionsList: false,\n                    subActions: []\n                  },\n                  {\n                    id: \"reassess-shock\",\n                    label: \"Check that shock management interventions are working by checking relevant vitals--in particular, BP and P\",\n                    type: ACTION_TYPES.REQ,\n                    feedbackAbsent: [\"When you decide your patient needs a treatment, you must ensure your treatment had the intended outcomes. In this case, after bolusing fluids, you should check to see if the patient's blood pressure and HR have improved. If not, you will want to reflect on why you did not see the expected improvements? Did you select an incorrect intervention? Do you need to escalate your therapies?\"],\n                    feedbackOutOfOrder: [\"\"],\n                    feedbackErrors: [\"\"],\n                    examineIfAbsent: false,\n                    examineIfErrors: false,\n                    promptsIfAbsent: \"\",\n                    promptsIfErrors: \"\",\n                    subActionsList: false,\n                    subActions: [\n                      {\n                        id: \"request-vitals-BP\",\n                        label: \"vital BP\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"You should have checked BP\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"request-vitals-P\",\n                        label: \"check P\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"You should have checked P\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                    ]\n                  },\n                ],\n              },\n              {\n                id: \"intv-apply-sterile-dressings\",\n                label: \"Manage non-life-threatening injuries--in particular apply sterile dressings to the gun shot wounds on the patient's abdomen\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"This patient has GSWs to the LUQ of his abdomen, which should be dressed once the patient is stabilized.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: []\n              },\n              {\n                id: \"Reassess the patient\",\n                label: \"Reassess the patient\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"It is important to reassess your patient after every intervention and every clinical change. This includes repeating the primary survey, secondary survey, and vital signs. A critically ill patient should be reassessed more frequently to ensure he or she is still stable--approximately every 5 minutes.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                  {\n                        id: \"reassess-vitals-plus-frequency\",\n                        label: \"Recheck vital signs every 5 minutes\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Vitals should be reassessed after every intervention and every clinical change, and a critically ill patient should be reassessed every 5 minutes since their condition could deteriorate rapidly.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                            {\n                              id: \"reassess-vital-signs\",\n                              label: \"Recheck vital signs every 5 minutes\",\n                              type: ACTION_TYPES.REQ,\n                              feedbackAbsent: [\"Vitals should be reassessed after every intervention and every clinical change, and a critically ill patient should be reassessed more frequently to ensure he or she is still stable.\"],\n                              feedbackOutOfOrder: [\"\"],\n                              feedbackErrors: [\"\"],\n                              examineIfAbsent: false,\n                              examineIfErrors: false,\n                              promptsIfAbsent: \"\",\n                              promptsIfErrors: \"\",\n                              subActionsList: false,\n                              subActions: [], \n                            },\n                            {\n                              id: \"decision-vitals-frequency\",\n                              label: \"decision vitals frequency\",\n                              type: ACTION_TYPES.REQ,\n                              feedbackAbsent: [\"Critical patients' vital signs should be reassessed every 5 minutes, since their condition could deteriorate rapidly.\"],\n                              feedbackOutOfOrder: [\"\"],\n                              feedbackErrors: [\"Critical patients' vital signs should be reassessed every 5 minutes, since their condition could deteriorate rapidly.\"],\n                              examineIfAbsent: false,\n                              examineIfErrors: false,\n                              promptsIfAbsent: \"\",\n                              promptsIfErrors: \"\",\n                              subActionsList: false,\n                              subActions: [], \n                            },\n                        ],\n                      },\n                      {\n                        id: \"repeat-primary-survey\",\n                        label: \"Repeat the Primary Survey\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"It is important to reassess your patient after every intervention and every clinical change, which includes the primary survey. For example, a patient with a neck injury whose breathing was initially non-labored may develop stridor as the airway becomes swollen.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"repeat-secondary-survey\",\n                        label: \"Repeat the Secondary Survey\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"It is important to reassess your patient after every intervention and every clinical change, which includes your secondary survey. For example, a patient may lose their pulses if you initially failed to notice and treat a source of hemorrhage.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"intv-contact-receiving-facility\",\n                label: \"Provide a patient report and ETA to the receiving facility\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"The hospital requires notification for all incoming patients 5 -15 prior to arrival, which is especially important for critical patients as the receiving team needs time to prepare equipment and space.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: []\n              },\n              {\n                id: \"intv-splint-fracture\", /* contraindicated intervention */\n                label: \"Splint fractures\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"The patient did not have any fractures.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: []\n              },\n              {\n                id: \"intv-sling\", /* contraindicated intervention */\n                label: \"Apply sling\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"The patient did not have any injuries requiring a sling.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: []\n              },\n              {\n                id: \"intv-prepare-amputated-part\", /* contraindicated intervention */\n                label: \"Prepare amputated part for transport\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"The patient did not have an amputation.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: []\n              },\n              {\n                id: \"intv-prepare-and-administer-pain-nausea-vomiting-medications\", /* contraindicated intervention */\n                label: \"Prepare and administer medications\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"You are unable to assess pain or nausea in this patient so he should not be given any medicines. Instead, you should focus on stabilizing the patient.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n            },\n            {\n                id: \"intv-contact-medical-command\", /* optional intervention */\n                label: \"Contact Medical Command\",\n                type: ACTION_TYPES.OPT,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n            }\n          ],\n        },     \n    ],\n},\n}\n","// type Phase_D = {\n//     step:  string;\n//     title: string;\n//     text:  string[];\n// };\n\n// type Phase_E = {\n//     step:        string;\n//     title:       string;\n//     description: string;\n//     text:        string[];\n// };\n\n// type Phase_B = {\n//     step: string;\n//     expectations:\n//         {\n//             id:      string;\n//             heading: string;\n//             benchmarks:\n//                 {\n//                     id:   string;\n//                     text: string;\n//                     subBenchmarks: \n//                         {\n//                             id:              string;\n//                             phase:           object;\n//                             checklistItems:  string[];\n//                             feedback:        string;\n//                             type:            string;\n//                         }[];\n//                 }[];\n//         }[];\n// };\n\n// type Phase_R = {\n//     step:    string;\n//     slides:  string[] | { text: { __html: string; linkHoverText: object; }}[];\n// };\n\n// type Phase_F = {\n//     step:      string;\n//     title:     string;\n//     heading:   string;\n//     questions: string;\n// };\n\n// type Step_Data = [Phase_D, Phase_E, Phase_B, Phase_R, Phase_F];\n\n// export const STEP_DATA: Step_Data = [\n\nimport {link, para, text} from \"./utils\";\n\nexport const SC8CP_PhaseDEBRF = [\n    {\n        step: \"D\",\n        title: \"Define Rules:\",\n        text: [\"The purpose of this debriefing is to reflect on the scenario you have just completed in order to help you improve your skills as a paramedic.  It is not meant to assess your overall abilities as a paramedic.\", \"This debriefing will summarize the learning objectives of this scenario and the performance benchmarks (standards) for achieving each objective.  The system will then prompt you to examine differences between the treatment actions that you performed and those indicated by the clinical findings revealed during the scenario, or that would have been revealed by a more thorough assessment and reassessment of this patient.  Finally, it will prompt you to state some 'take home points' to improve your performance.\"]\n    },\n    {\n        step: \"E\",\n        title: \"Explain the learning objectives:\",\n        description: \"This scenario was designed to give you practice with:\",\n        text: [\n            \"Conducting a thorough trauma patient assessment\",\n            \"Managing a potential head and/or spinal injury\",\n            \"Managing a compromised airway\",\n            \"Managing inadequate breathing\",\n            \"Making appropriate transport decisions\",\n            \"Performing ongoing patient management and assessment\",\n        ]\n    },\n    {\n        step: \"B\",\n        expectations: [\n            {\n                expectationText: \"Conduct a thorough trauma assessment\",\n                benchmarks: [\n                    {\n                        benchmarkText: \"Before approaching patient, apply PPE, check that the scene is safe, determine the number of patients, and request additional help if necessary\",\n                        subBenchmarks: []\n                    },\n                    {\n                        benchmarkText: \"On initial patient contact, form a general impression of the patient's condition, assess patient's level of consciousness, and identify apparent life threats\",\n                        subBenchmarks: []\n                    },\n                    {\n                        benchmarkText: \"During the Primary Survey:\",\n                        subBenchmarks: \n                        [\n                            \"Check that airway is open, clear of fluids and foreign bodies, and has intact physical structures\", \n                            \"Listen for abnormal breath sounds and check breathing rate, rhythm, and quality\", \n                            \"Check circulation: pulse rate/rhythm/quality; skin color/temperature/condition; perform gross blood sweep\",\n                            \"Determine the need for rapid transport and call for an air ambulance asap (i.e., before conducting your Secondary Survey)\",\n                            \"Trauma expose patient\"\n                        ]\n                    },\n                    {\n                        benchmarkText: \"Take baseline vitals and, if possible, obtain SAMPLE history and OPQRST\",\n                        subBenchmarks: []\n                    },\n                    {\n                        benchmarkText: \"Perform a rapid head-to-toe assessment (Secondary Survey), looking/listening/feeling for DCAP-BTLS and abnormal conditions at each body part (e.g., check neck for tracheal deviation and JVD).\",\n                        subBenchmarks: []\n                    },\n                ]\n            },\n            {\n                expectationText: \"Manage a potential head or spinal injury\",\n                benchmarks: [\n                    {\n                        benchmarkText: \"Identify the potential for head or spinal injury during your initial assessment\",\n                        subBenchmarks: []\n                    },\n                    {\n                        benchmarkText: \"Direct manual stabilization of the cervical spine before checking airway, breathing and circulation\",\n                        subBenchmarks: []\n                    },\n                    {\n                        benchmarkText: \"Apply an appropriately sized cervical collar\",\n                        subBenchmarks: []\n                    },\n                ]\n            },\n            {\n                expectationText: \"Manage a compromised airway\",\n                benchmarks: [\n                    {\n                        benchmarkText: \"Open the patient's airway via jaw-thrust instead of head-tilt\",\n                        subBenchmarks: []\n                    },\n                    {\n                        benchmarkText: \"Suction the patient's mouth using a Yankauer or Long multi-use catheter\",\n                        subBenchmarks: []\n                    },\n                    {\n                        benchmarkText: \"Insert an oropharyngeal airway\",\n                        subBenchmarks: []\n                    },\n                    {\n                        benchmarkText: \"Ultimately, intubate the patient.  Pre-oxygenate with a nasal cannula or BVM and then place a size 4.5 or 5.0 ET tube inserted at the correct depth. Alternatively, insert an appropriately sized advanced/rescue airway.\",\n                        subBenchmarks: []\n                    },\n                    {\n                        benchmarkText: \"Confirm placement of the tube by checking ETCO2 capnography, listening for bilateral lung sounds and absence of gastric sounds. Additional checks include visualizing the tube passing through the vocal cords (if an ET tube) and re-evaluating vital signs.\",\n                        subBenchmarks: []\n                    },\n                ]\n            },\n            {\n                expectationText: \"Manage inadequate breathing\",\n                benchmarks: [\n                    {\n                        benchmarkText: \"Ventilate the patient at a rate of 20 breaths per minute\",\n                        subBenchmarks: []\n                    },\n                    {\n                        benchmarkText: \"Titrate oxygen at a flow rate of 15 L/min to a target SpO2 > = 90%\",\n                        subBenchmarks: []\n                    },\n                ]\n            },\n            {\n                expectationText: \"Make appropriate transport decisions\",\n                benchmarks: [\n                    {\n                        benchmarkText: \"Transport patient to Level 1 pediatric tauma center by air ambulance\",\n                        subBenchmarks: []\n                    },\n                ]\n            },\n            {\n                expectationText: \"Perform ongoing patient management and assessment\",\n                benchmarks: [\n                    {\n                        benchmarkText: \"Assist air crew in providing a patient report and ETA to the receiving facility\",\n                        subBenchmarks: []\n                    },\n                    {\n                        benchmarkText: \"Establish at least one IV en route\",\n                        subBenchmarks: []\n                    },\n                    {\n                        benchmarkText: \"Reassess vitals every 5 minutes; repeat primary and secondary survey\",\n                        subBenchmarks: []\n                    },\n                ]\n            }\n        ]\n    },\n    {\n        step: \"R\",\n        slides: [\n            {\n                paragraphs: [\n                    para(\n                        text(\"In an idealized scenario, you arrive on scene and find a 4-year-old boy lying supine beside a pool in the backyard of a suburban house. Other EMS responders have arrived on site to assist you.  Your initial assessment reveals that the boy is unconscious and cyanotic.  A quick pulse check shows that it is slow and weak. Given that the patient is in\"),\n                        link(\"critical condition,\", \"This patient is unresponsive and is therefore considered a critical patient.\"),\n                        text(\"you direct a responder to call for air transport to the\"),\n                        link(\"nearest pediatric trauma center.\", \"Because this patient is under 14 years of age, he should be transported to the nearest level 1 or 2 pediatric trauma center that is less than 45 minutes away.\")\n                    ),\n                    para(\n                        text(\"You direct another partner to take\"),\n                        link(\"manual c-spine precautions\", \"Any near-drowning or drowning, especially if unwitnessed, should be considered a risk for possible cervical and spinal injury as the patient may have been involved in a diving accident.\"),\n                        text(\"and apply a cervical collar. You open the patient’s airway, using a jaw thrust maneuver.  Finding a substantial amount of water and vomit in the boy’s mouth, you apply suction. After the patient’s airway is cleared, you assess breathing and find it to be slow with gurgling sounds. You direct your partner to insert an OPA and ventilate the patient with 100% oxygen delivered through a\"),\n                        link(\"bag-valve mask\", \"This patient was not adequately ventilating (slow, gurgling breaths) or oxygenating (low SpO2) so O2 delivered via nasal cannula or non-rebreather mask would not have been adequate.\")\n                    )\n                ]\n            }, \n            {\n                paragraphs: [\n                    para(\n                        text(\"You then\"),\n                        link(\"intubate the patient\", \"The patient was unresponsive with a GCS of 3 so should be intubated to safely get the patient to the pediatric trauma center (remember, generally with a GCS <8, you should intubate).\"),\n                        text(\"and direct your partner to resume BVM ventilation all while maintaining c-spine precautions. You have another responder obtain a set of baseline vitals and obtain a SAMPLE and OPQRST history from the babysitter while you perform a rapid head-to-toe assessment.  On completion of your secondary survey, you secure him onto a long back board.\")\n                    ),\n                    para(\n                        text(\"You and your partners then place the patient on a stretcher and transfer him to the helicopter as soon as it arrives.  You cover him with blankets and ask the pilot to turn up the heat. While en route to the pediatric trauma center, you contact the facility to alert them to the patient’s condition and your ETA.  You establish two large bore IVs, reassess the patient\"),\n                        link(\"every five minutes,\", \"Critically ill patients should be reassessed every 5 minutes.\"),\n                        text(\"and confirm that all interventions are working properly, modifying any as necessary.\")\n                    )\n                ]\n            }\n        ]\n    },\n    {\n        step: \"F\",\n        title: \"Formalize learning\",\n        heading: \"Please take a few minutes to think and reply to these questions\",\n        questions: \"What are your key take-home points from this scenario? What is something you want to continue working on or do differently in the future?\"\n    }\n];","/* Data for scenario SC8CP phase IE \nThis data structure holds all the information to create the slides to present during the IE phase.\nIt mirrors the tree structure that is presented in the Excel file. All nodes in the tree are called actions whether \nthey are assessments or interventions. Subactions are the children of the actions in the tree.\nFields:\nid: identifies the action-node in the tree. It is a string since it is unique.\nlabel: text for the action as it will appear on the slide\ntype: indicates whether the action is Required, Contraindicated, Unnecessary or Irrelevant.\n    Required, it will be listed in the left side of the slide so that students are asked if they performed it.\n    Contraindicated: it will be listed on the right side under a list of contraindicated actions that the student performed\n    accompanied by the feedback on the feedbackErrors field.\n    Unnecessary: it will be listed on the right side under a list of unnecessary actions that the student performed\n    accompanied by the feedback on the feedbackErrors field.\n    Irrelevent: it will be listed on the right side under a list of irrelevant actions that the student performed\n    accompanied by the feedback on the feedbackErrors field.\n    Alternative: will be used for those interventions that can be performed as alternative to required ones.\nalternativeToIntv: indicates the intervention for which the current one is an alternative. It will only have a value if\nthe type is Alternative.\nfeedbackAbsent: feedback given if the action was no performed\nfeedbackOutOfOrder: feedback given if the action was done late (e.g., if the action is Scene size-up and it was done \n    after Primary Survey)\nfeedbackErrors: feedback if the action was performed incorrectly (e.g., wrong ventilation rate)\nexamineIfAbsent: boolean to indicate if this Action needs to be examined when it is Absent (phase E)\nexamineIfErrors: boolean to indicate if this Action needs to be examined when there are performance errors (phase E)\npromptsIfAbsent: prompts to be included in question headers in phase E, to hint on how to reflect when Action was Absent\npromptsIfErrors: prompts to be included in question headers in phase E, to hint on how to reflect when Action was performed incorrectly\nsubActionsList: boolean that indicates whether the subActions need to be listed as bullet points on the slide. If they\n    don't need to be listed it is usually because they have been grouped however, the subActions still need to be \n    included in the subActions field because they are used by the analysis to give a summary of their status.\nsubActions: array with the corresponding subactions (to form the tree)\n*/\n\nimport { ACTION_TYPES, WAIT_TIFF, WAIT_SANDY, SUM_NODE_NO_FEEDBACK, NO_FEEDBACK, SUM_NODE_FBCK_CHILDREN } from \"./constants\";\n\nexport const SC8CP_PhaseIE = {\n    Action: {\n      id: \"top\",\n      label: \"fully assess and manage the patient in this scenario\", /* the way it will appear on the slide */\n      type: ACTION_TYPES.REQ, /*indicates whether the action was Required, Contraindicated, Unnecessary, or Irrelevant\" */\n      feedbackAbsent: [\"Your log indicates you didn't complete any of these assessment or managment goal. Please restart the scenario and try again\"], /*feedback if the action was not performed*/\n      feedbackOutOfOrder: [\"\"], /*feedback if the action was done late (e.g., if the action is Scene Size-up \n        and it was done after Primary Survey)*/\n      feedbackErrors: [\"\"], /*feedback if the action was performed incorrectly (e.g. wrong Ventilation rate)*/\n      examineIfAbsent: false, /* boolean to indicate if this Action needs to be examined when it is Absent (phase E) */\n      examineIfErrors: false, /* boolean to indicate if this Action needs to be examined when there are performance errors */\n      promptsIfAbsent: \"\", /* prompts to the included in question in phase E to hint on how to reflect */\n      promptsIfErrors: \"\",\n      subActionsList: true, /* boolean that indicates if subActions need to be listed as bullet points on slide */\n      subActions: [ /*array with the corresponding subactions (to form the tree)*/\n        {\n          id: \"scene-size-up\",\n          label: \"Put on BSI and do a complete Scene Size-up before entering the scene\",\n          type: ACTION_TYPES.REQ,\n          feedbackAbsent: [\"Your first steps should have been to don your protective wear, including eye protection, and to ensure the scene is safe. You cannot assist a patient if you are not safe yourself.\", \"Your scene size up gives you a big-picture view of what is going on before you even begin examining the patient and includes determining the mechanism of injury and number of patients, requesting additional help if necessary, and considering stabilization of the spine.\", \"In this case, you would have learned that this is a near drowning incident, which should have prompted you to think about potential head or spinal injury, and the need for rescue breaths and/or CPR.\"],\n          feedbackOutOfOrder: [\"Your first steps should have been to don your protective wear, including eye protection, and to ensure the scene is safe. You cannot assist a patient if you are not safe yourself.\", \"Your scene size up also gives you a big-picture view of what is going on before you even begin examining the patient. This includes determining the mechanism of injury and number of patients, requesting additional help if necessary, and considering stabilization of spine.\"],\n          feedbackErrors: [\"\"],\n          examineIfAbsent: false,\n          examineIfErrors: false,\n          promptsIfAbsent: \"\",\n          promptsIfErrors: \"\",\n          subActionsList: true,\n          subActions: [\n            {\n                id: \"required-action-BSI\",\n                label: \"Apply BSI\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Your first steps should have been to don your protective wear, including eye protection, and to ensure the scene is safe. You cannot assist a patient if you are not safe yourself.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"assess-scene-safety\",\n                label: \"Determine the scene/situation is safe\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Your first steps should have been to don your protective wear, including eye protection, and to ensure the scene is safe. You cannot assist a patient if you are not safe yourself.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"assess-injury-mechanism\",\n                label: \"Determine the mechanism of injury (MOI) or nature of illness (NOI)\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Knowing what caused the patient's injury or illness can allow you to start developing a plan of action before you even assess your patient.\", \"By determining the mechanism of injury, you would have learned that this is a near drowning incident, which should have prompted you to think about potential head or spinal injury, and the need for rescue breaths and/or CPR.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"assess-num-patients\",\n                label: \"Determine the number of patients\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Usually you will have one patient, but if there is more than one you will need to plan accordingly.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"required-action-requests-additional-help\",\n                label: \"Request additional help if necessary\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Consider the need for extra help based on number of patients, mechanism of injury, and your patient's status.\", \"Although police and fire personnel were already on scene, you should have considered the need for additional ALS support.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"required-action-considers-stabilize-spine\",\n                label: \"Consider stabilization of spine\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"All trauma patients are at risk for spinal injury, including drowning or near drowning patients, which could be caused by a diving accident. Take this into consideration before initial contact with the patient to prevent unintentional injury.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n          ],\n        },\n        {\n          id: \"primary-survey\",\n          label: \"Perform a Primary Survey and manage all identified life threats\",\n          type: ACTION_TYPES.REQ,\n          feedbackAbsent: [\"The primary survey is an assessment of mental status, life-threats, and the patient's ABCs. It is where you will identify and address the patient's most serious injuries.\", \"In this case, the Primary Survey would have revealed an unconscious patient with respiratory failure and a weak and slow pulse.\"],\n          feedbackOutOfOrder: [\"You should have started your Primary Survey after the Scene Size-up and completed it before starting the Secondary Survey. Only interrupt your assessment to control life-threats: (1) Conditions that compromise a patent airway (2) Conditions that compromise breathing or respirations, such as a tension pneumothorax, (3) Conditions that compromise circulation, such as severe bleeding, (4) Cardiac arrest, and any  other potentially life threatening injuries or conditions.  Your patient's condition will deteriorate if these conditions are not addressed before continuing on with your assessment and history taking.\"],\n          feedbackErrors: [\"\"],\n          examineIfAbsent: false,\n          examineIfErrors: false,\n          promptsIfAbsent: \"\",\n          promptsIfErrors: \"\",\n          subActionsList: true,\n          subActions: [\n            {\n                id: \"general-impression\",\n                label: \"Conduct an Initial Assessment\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"You should have performed an Initial Assessment: gathered a general impression, identified any apparent life threats, and determined your patient's level of consciousness.  Your Initial Assessment  would have revealed a patient who is unconscious.\"],\n                feedbackOutOfOrder: [\"While you may be tempted to jump straight into your ABCs, apparent life threats (i.e., uncontrolled bleeding) should be addressed first, as they can cause a patient to deteriorate quickly. Also, be sure to assess the patient's level of consciousness as an unconscious patient will need a pulse check first to ensure he or she does not require CPR.\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"assess-patient-condition\",\n                        label: \"State or request a general impression\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Your general impression allows you to start developing a plan of action before you even assess your patient.\", \"In this case, your general impression would have been of a child who nearly drowned.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"assess-loc\",\n                        label: \"Assess the patient's level of consciousness\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"The patient's level of consciousness alters how you progress through your assessment.\", \"This patient was unresponsive with sluggish pupils.  This should have prompted you to consider him a critical patient, check his pulse prior to airway and breathing, and plan for urgent transfer to a nearby trauma center.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"assess-life-threats\",\n                        label: \"Determine the chief complaint/apparent life-threats\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"If you had determined apparent life threats, you would have noticed that the patient was unresponsive, indicating a critical patient.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"circulation\",\n                label: \"follow a 'CAB' protocol, given that this patient is unconscious, and first assess the patient's pulse, followed by other aspects of circulation\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Since this patient is unconscious, be sure to check the carotid pulse first, or simultaneously with the radial pulse, to determine if CPR is needed.  Also assess the skin to check for shock and be sure to perform a gross blood sweep.\", \"You would have noticed that your patient had weak slow pulses and dry cyanotic skin, indicating impending respiratory failure.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                  {\n                    id: \"pulse-checks\",\n                    label: \"check pulse\",\n                    type: ACTION_TYPES.REQ,\n                    feedbackAbsent: [\"First check for a radial pulse. However, if you don't feel one, you want to check a carotid pulse.\", \"This patient's radial pulses were absent, but he did have a weak carotid pulse, which would prompt you to worry about shock.\", \"Checking this patient's pulse rate would have revealed that he was tachycardic. A significantly elevated or depressed pulse rate can suggest shock or respiratory failure.\", \"While this patient's heart had a regular rhythm, remember that an irregular rhythm can suggest impending cardiac arrest or arrhythmia.\", \"A patient in shock may have weak or absent pulses distally, such as this patient, suggestive of shock.\"],\n                    feedbackOutOfOrder: [\"All unconscious patients should have a pulse check before starting the ABCs. However, paramedics often check breathing while doing a pulse check.  If the patient is pulseless, you will start high-quality CPR immediately.\", \"An acronym used by some providers for unconscious patients is CABC, which refers to a pulse check (while simultaneously feeling for breathing) before the assessment of the rest of the ABCs.)\"],\n                    feedbackErrors: [\"\"],\n                    examineIfAbsent: false,\n                    examineIfErrors: false,\n                    promptsIfAbsent: \"\",\n                    promptsIfErrors: \"\",\n                    subActionsList: true,\n                    subActions: [\n                      {\n                        id: \"prompt-to-specify-pulse\",\n                        label: \"check the appropriate pulse(s)\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"First check for a radial pulse. However, if you don't feel one, you want to check a carotid pulse.\", \"This patient's radial pulses were absent, but he did have a weak carotid pulse, which would prompt you to worry about shock.\"],\n                        feedbackOutOfOrder: [\"All unconscious patients should have a pulse check before starting the ABCs. However, paramedics often check breathing while doing a pulse check.  If the patient is pulseless, you will start high-quality CPR immediately.\", \"An acronym used by some providers for unconscious patients is CABC, which refers to a pulse check (while simultaneously feeling for breathing) before the assessment of the rest of the ABCs.)\"],                        \n                        feedbackErrors: [\"First check for a radial pulse. However, if you don't feel one, you want to check a carotid pulse.\", \"This patient's radial pulses were absent, but he did have a weak carotid pulse, which would prompt you to worry about shock.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"checks-pulse-rate-rhythm-quality\",\n                        label: \"check pulse rate, rhythm, and quality\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Checking this patient's pulse rate would have revealed that he was tachycardic. A significantly elevated or depressed pulse rate can suggest shock or respiratory failure.\", \"While this patient's heart had a regular rhythm, remember that an irregular rhythm can suggest impending cardiac arrest or arrhythmia.\", \"A patient in shock may have weak or absent pulses distally, such as this patient, suggestive of shock.\"],\n                        feedbackOutOfOrder: [\"All unconscious patients should have a pulse check before starting the ABCs. However, paramedics often check breathing while doing a pulse check.  If the patient is pulseless, you will start high-quality CPR immediately.\", \"An acronym used by some providers for unconscious patients is CABC, which refers to a pulse check (while simultaneously feeling for breathing) before the assessment of the rest of the ABCs.)\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          {\n                            id: \"checks-pulse-rate\",\n                            label: \"rate\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"Checking this patient's pulse rate would have revealed that he was tachycardic. A significantly elevated or depressed pulse rate can suggest shock or respiratory failure.\"],\n                            feedbackOutOfOrder: [\"All unconscious patients should have a pulse check before starting the ABCs. However, paramedics often check breathing while doing a pulse check.  If the patient is pulseless, you will start high-quality CPR immediately.\", \"An acronym used by some providers for unconscious patients is CABC, which refers to a pulse check (while simultaneously feeling for breathing) before the assessment of the rest of the ABCs.)\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [],\n                          },\n                          {\n                            id: \"checks-pulse-rhythm\",\n                            label: \"rhythm\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"While this patient's heart had a regular rhythm, remember that an irregular rhythm can suggest impending cardiac arrest or arrhythmia.\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [],\n                          },\n                          {\n                            id: \"checks-pulse-quality\",\n                            label: \"quality\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"A patient in shock may have weak or absent pulses distally, such as this patient, suggestive of shock.\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [],\n                          },\n                        ],\n                      },\n                    ],\n                  },\n                      {\n                        id: \"checks-skin\",\n                        label: \"check skin\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: true,\n                        subActions: [\n                          {\n                            id: \"checks-skin-color\",\n                            label: \"color\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"By checking this patient's skin color, you would have noticed he had dry, cyanotic skin. Pallor and cyanosis are signs of inadequate oxygenation and may be caused by respiratory failure or shock.\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [],\n                          },\n                          {\n                            id: \"checks-skin-temperature\",\n                            label: \"temperature\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"By checking skin temperature, you would have noticed cold skin, which could be because of inadequate perfusion (decompensated shock) or environmental factors.\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [],\n                          },\n                          {\n                            id: \"checks-skin-condition\",\n                            label: \"condition\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"In this case, the patient had been pulled from a pool, making a skin exam challenging, but remember that clammy, diaphoretic skin suggests shock.\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [],\n                          },\n                        ],\n                      },\n                      {\n                        id: \"assess-major-bleeding\",\n                        label: \"Perform a gross blood sweep\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"A gross blood sweep, which was negative in this patient, will help you identify any life-threatening bleeding you may have missed earlier when forming your general impression.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"Manage a potential head or spinal injury\",\n                label: \"Manage a potential head or spinal injury\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Although the exact MOI is unknown, you should suspect possible head and/or spinal injury with any near drowning incident as diving may have been involved. You should have taken manual c-spine stabilization before performing your ABC assessment and maintained it throughout and applied an appropriately sized cervical collar.\"],\n                feedbackOutOfOrder: [\"Managing the cervical spine is one of the first things you should do for any trauma patient, as you must ensure you do not cause any further injury during the remainder of your assessment and management.\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: true,\n                examineIfErrors: false,\n                promptsIfAbsent: \"didn't recall that spinal injury should be considered in every near drowning incident; did not consider risk for cervical spine injury based on provided information\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"intv-spinal-immobilization-technique-manual-c-spine\",\n                        label: \"Apply (or direct a partner to apply) manual c-spine stabilization\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Part of managing a head and/or spinal injury includes manual stabilization of the cervical spine before beginning your assessment, as movement may further injure the patient.\"],\n                        feedbackOutOfOrder: [\"The cervical spine needs to be manually supported before and after the application of a cervical collar. Manual support can be stopped after the CID is applied on the long backboard.\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-spinal-immobilization-technique-cervical-collar\",\n                        label: \"Apply an appropriately sized cervical collar\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"A cervical collar will help you maintain stability while you continue with your exam.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"airway\",\n                label: \"Assess the patient's airway\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Be sure to assess the airway for patency and intact physical structures.\", \"You would have found this patient's airway to be partially obstructed with vomit and water, indicating the need for suctioning.\"],\n                feedbackOutOfOrder: [\"If your patient is conscious, you should examine the airway before breathing and circulation. If a patient is unconscious, you should assess the pulse first to evaluate for possible cardiac arrest, then go through your ABCs.\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                      {\n                        id: \"airway-is-open\",\n                        label: \"Check if the airway is patent\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"The first step of your airway assessment is to see if the patient's airway is open. If the patient is speaking normally, it is open. Signs like stridor or gasping may indicate an airway obstruction.\", \"This patient's airway was partially obstructed with vomit and water, which should have been suctioned.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"airway-has-intact-physical-structures\",\n                        label: \"Check if the airway has intact physical structures\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Though this patient did not have any facial trauma, be sure to look for injuries such as gun-shot wounds or facial fractures, as these may affect what basic or advanced airways you can use.  Avoid using a nasopharyngeal airway in patients with a suspected basilar skull fracture or nasal injury.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"Manage a compromised airway\",\n                label: \"Manage the patient’s compromised airway\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"This patient was unable to protect his airway, as evidenced by his being unconscious and having an obstructed airway. You should have managed this airway with suctioning, ventilating with a BVM, and ultimately intubating him.\"],\n                feedbackOutOfOrder: [\"You should identify any airway obstructions, including blood, vomiting, and secretions while checking the patency of your patient's airway. Any obstruction should be addressed at that time.\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: true,\n                examineIfErrors: false,\n                promptsIfAbsent: \"didn't recognize that being unconscious was an indication for intubation; didn't recognize that the patient's airway was obstructed and needed suctioning\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                      {\n                        id: \"intv-open-airway-method-modified-jaw-thrust\",\n                        label: \"Open the patient's airway with a jaw thrust maneuver\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Opening the airway is a necessary precursor to inserting a basic adjunct.  The patient is at risk for a cervical spine injury, so opening the airway via head tilt can compromise spinal stability. Instead, you use the jaw-thrust technique to open the airway while maintaining the cervical spine.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-airway-patency-technique-suction-airway\",\n                        label: \"Suction the patient's mouth using a Yankauer (rigid)  or Long multi-use catheter\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"This patient had water and vomit in his airway, which should have been suctioned to establish a patent airway and allow you to insert a basic airway and, ultimately, to intubate this patient.\"],\n                        feedbackOutOfOrder: [\"Suctioning falls under 'A' in the ABCs. Airway obstructions are a potentially life threatening condition and require immediate intervention. Thus, debris in the airway or obstructions need to be identified and fixed during the primary assessment.\", \"In critical patients (especially those that are unconscious), the airway requires frequent reassessment. Be even more cautious when the patient has vomited recently or may lose consciousness very quickly.\", \"The patient's own tongue can be an obstruction, as well (when unconscious).\"],\n                        feedbackErrors: [\"Both Yankauer (rigid) and Long multi-use catheters are appropriate for oral suctioning; however, Yankauer would be more effective for suctioning large volumes of blood, vomit, etc.  A soft tip suction catheter should be used for deep suctioning with the ET tube.\"],\n                        examineIfAbsent: true,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"didn't ensure the airway was clear; did not think the vomit or water needed to be suctioned prior to intubation\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"request-intervention-status-intv-airway-patency-technique-suction-airway\",\n                        label: \"Reassess airway patency\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"After every intervention, it is vital to reassess the patient to observe the effect of that intervention. If suctioning is performed but gurgling still occurs on respirations, then further suctioning is required. Furthermore, if suctioning was performed and the airway remains clear, yet the patient continues to desaturate (SPO2), the provider should assess and think about other likely problems that caused the patient condition to worsen.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                     {\n                        id: \"intv-oro-or-naso-airway\",\n                        label: \"Insert a basic airway adjunct\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Remember: 'basic before advanced'. This patient is unconscious and therefore unable to maintain his airway (e.g. without an OPA, the tongue could obstruct the airway.)  Insert a basic airway adjunct to maintain airway patency and allow you to pre-oxygenate the patient prior to intubation.\"],\n                        feedbackOutOfOrder: [\"In the event of a potentially compromised airway (including patients who are unconscious), the patient needs to have an airway adjunct for airway support prior to the secondary survey.\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          {\n                            id: \"intv-oropharyngeal-airway\",\n                            label: \"Insert a basic airway adjunct\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"Remember: 'basic before advanced'. This patient is unconscious and therefore unable to maintain his airway (e.g. without an OPA, the tongue could obstruct the airway.)  Insert a basic airway adjunct to maintain airway patency and allow you to pre-oxygenate the patient prior to intubation.\"],\n                            feedbackOutOfOrder: [\"In the event of a potentially compromised airway (including patients who are unconscious), the patient needs to have an airway adjunct for airway support prior to the secondary survey.\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: []\n                          },\n                          {\n                            id: \"intv-nasopharyngeal-airway\",\n                            label: \"Insert a basic airway adjunct\",\n                            type: ACTION_TYPES.ALT,\n                            alternativeToIntv: \"intv-oropharyngeal-airway\",\n                            feedbackAbsent: [\"Remember: 'basic before advanced'. This patient is unconscious and therefore unable to maintain his airway (e.g. without an OPA, the tongue could obstruct the airway.)  Insert a basic airway adjunct to maintain airway patency and allow you to pre-oxygenate the patient prior to intubation.\"],\n                            feedbackOutOfOrder: [\"In the event of a potentially compromised airway (including patients who are unconscious), the patient needs to have an airway adjunct for airway support prior to the secondary survey.\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: []\n                          },\n                        ],\n                      },\n                      {\n                        id: \"request-intv-status-NPA-or-OPA\",\n                        label: \"Confirm that the patient accepted the airway adjunct\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Remember: 'basic before advanced'. This patient is unconscious and therefore unable to maintain his airway (e.g. without an OPA, the tongue could obstruct the airway.)  Insert a basic airway adjunct to maintain airway patency and allow you to pre-oxygenate the patient prior to intubation.\"],\n                        feedbackOutOfOrder: [\"In the event of a potentially compromised airway (including patients who are unconscious), the patient needs to have an airway adjunct for airway support prior to the secondary survey.\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          {\n                            id: \"request-intervention-status-intv-nasopharyngeal-airway\",\n                            label: \"Confirm that the patient accepted the NPA\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"Remember: 'basic before advanced'. This patient is unconscious and therefore unable to maintain his airway (e.g. without an OPA, the tongue could obstruct the airway.)  Insert a basic airway adjunct to maintain airway patency and allow you to pre-oxygenate the patient prior to intubation.\"],\n                            feedbackOutOfOrder: [\"In the event of a potentially compromised airway (including patients who are unconscious), the patient needs to have an airway adjunct for airway support prior to the secondary survey.\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: []\n                          },\n                          {\n                            id: \"request-intervention-status-intv-oropharyngeal-airway\",\n                            label: \"Confirm that the patient accepted the OPA\",\n                            type: ACTION_TYPES.ALT,\n                            alternativeToIntv: \"request-intervention-status-intv-nasopharyngeal-airway\",\n                            feedbackAbsent: [\"Remember: 'basic before advanced'. This patient is unconscious and therefore unable to maintain his airway (e.g. without an OPA, the tongue could obstruct the airway.)  Insert a basic airway adjunct to maintain airway patency and allow you to pre-oxygenate the patient prior to intubation.\"],\n                            feedbackOutOfOrder: [\"In the event of a potentially compromised airway (including patients who are unconscious), the patient needs to have an airway adjunct for airway support prior to the secondary survey.\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: []\n                          },\n                        ],\n                      },\n                      {\n                        id: \"intubate-patient\", /* has children intv-preoxygenation and intv-oro-intubation-or-advanced-airway */\n                        label: \"Ultimately, intubate the patient\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Ultimately, this patient should be intubated. This patient has a GCS score of 3; remember, GCS <8, intubate. Since he is unconscious, you need a reliable way to oxygenate and ventilate this patient. While BVM ventilation with an adjunct may be appropriate for a short transport, this near-drowning patient is at increased risk for aspiration, so securing an airway is the best course of action. Orotracheal intubation would be most appropriate because he lacks a gag reflex.\"], /* feedback taken from intv-oro-intubation-or-advanced-airway */\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"Inserting an appropriately sized endotracheal tube (ETT) is the most appropriate method of securing this patient's airway, since he lacks a gag reflex.\", \"Calculate the appropriate size ET tube for a child with the equation age/4 +1. This is the correct size for an uncuffed tube; go down by .5 for a cuffed tube. This child needed a 4.5 cuffed or 5.0 uncuffed tube.  The insertion depth for children is 3cm * (tube size), so about 15cm.\", \"If using a different advanced airway, reference the Broslow Tape for the acceptable size, but remember that Combitubes are not sized for children.\"], /* feedback taken from intv-oro-intubation-or-advanced-airway */\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: true,\n                        subActions: [\n                          {\n                            id: \"intv-preoxygenation\",\n                            label: \"Pre-oxygenating the patient using a NRM, or a BVM alone or coupled with a nasal cannula.\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"This patient has inadequate respirations and requires ventilatory support. Even if you identify immediately that you want to intubate this patient, he would benefit from starting with a bag-valve mask or NRM attached to 15LPM O2 to preoxygenate him prior to intubation. Alternatively, oxygenation with a nasal cannula could be coupled with BVM ventilation.\"],\n                            feedbackOutOfOrder: [\"Problems with ventilation and oxygenation are life threatening and should be addressed by oxygen administration and BVM ventilation before you move on to your secondary survey. Repeat your exam and check vitals to ensure your interventions have worked as you expected. If not, your patient may deteriorate as you continue on with your examination.\"],\n                            feedbackErrors: [\"Use a bag-valve mask or NRM attached to 15LPM O2 or greater to preoxygenate the patient prior to intubation. Alternatively, 25 LPM of O2 via nasal cannula while simultaneously performing BVM ventilations with high-flow oxygen could be used for pre-oxygenation.\"],\n                            examineIfAbsent: true,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"Didn't realize the patient needed ventilatory support; Didn't think the patient needed bagging before intubation\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [\n                              {\n                                id: \"intv-supplemental-oxygen-device-non-rebreather-mask\",\n                                label: \"Ventilate the patient with non-rebreather mask\",\n                                type: ACTION_TYPES.REQ,\n                                feedbackAbsent: [\"This patient has inadequate respirations and requires ventilatory support. Even if you identify immediately that you want to intubate this patient, he would benefit from starting with a bag-valve mask or NRM attached to 15LPM O2 to preoxygenate him prior to intubation. Alternatively, oxygenation with a nasal cannula could be coupled with BVM ventilation.\"],\n                                feedbackOutOfOrder: [\"Problems with ventilation and oxygenation are life threatening and should be addressed by oxygen administration and BVM ventilation before you move on to your secondary survey. Repeat your exam and check vitals to ensure your interventions have worked as you expected. If not, your patient may deteriorate as you continue on with your examination.\"],\n                                feedbackErrors: [\"Use a bag-valve mask or NRM attached to 15LPM O2 or greater to preoxygenate the patient prior to intubation. Alternatively, 25 LPM of O2 via nasal cannula while simultaneously performing BVM ventilations with high-flow oxygen could be used for pre-oxygenation.\"],\n                                examineIfAbsent: false,\n                                examineIfErrors: false,\n                                promptsIfAbsent: \"\",\n                                promptsIfErrors: \"\",\n                                subActionsList: false,\n                                subActions: [],\n                              },\n                              {\n                                id: \"intv-ventilation-technique-bag-valve-mask\",\n                                label: \"Ventilate the patient with bag valve mask\",\n                                type: ACTION_TYPES.ALT,\n                                alternativeToIntv: \"intv-supplemental-oxygen-device-non-rebreather-mask\",\n                                feedbackAbsent: [\"This patient has inadequate respirations and requires ventilatory support. Even if you identify immediately that you want to intubate this patient, he would benefit from starting with a bag-valve or NRM mask attached to 15LPM O2 to preoxygenate him prior to intubation. Alternatively, oxygenation with a nasal cannula could be coupled with BVM ventilation.\"],\n                                feedbackOutOfOrder: [\"Problems with ventilation and oxygenation are life threatening and should be addressed by oxygen administration and BVM ventilation before you move on to your secondary survey. Repeat your exam and check vitals to ensure your interventions have worked as you expected. If not, your patient may deteriorate as you continue on with your examination.\"],\n                                feedbackErrors: [\"Use a bag-valve mask or NRM attached to 15LPM O2 or greater to preoxygenate the patient prior to intubation. Alternatively, 25 LPM of O2 via nasal cannula while simultaneously performing BVM ventilations with high-flow oxygen could be used for pre-oxygenation.\"],\n                                examineIfAbsent: false,\n                                examineIfErrors: false,\n                                promptsIfAbsent: \"\",\n                                promptsIfErrors: \"\",\n                                subActionsList: false,\n                                subActions: [],\n                              },\n                              {\n                                id: \"intv-bvm-and-nasal-cannula\",\n                                label: \"Intubate the patient by pre-oxygenating them with a nasal cannula or BVM\",\n                                type: ACTION_TYPES.ALT,\n                                alternativeToIntv: \"intv-ventilation-technique-bag-valve-mask\",\n                                feedbackAbsent: [\"This patient has inadequate respirations and requires ventilatory support. Even if you identify immediately that you want to intubate this patient, he would benefit from starting with a bag-valve or NRM mask attached to 15LPM O2 to preoxygenate him prior to intubation. Alternatively, oxygenation with a nasal cannula could be coupled with BVM ventilation.\"],\n                                feedbackOutOfOrder: [\"Problems with ventilation and oxygenation are life threatening and should be addressed by oxygen administration and BVM ventilation before you move on to your secondary survey. Repeat your exam and check vitals to ensure your interventions have worked as you expected. If not, your patient may deteriorate as you continue on with your examination.\"],\n                                feedbackErrors: [\"Use a bag-valve mask or NRM attached to 15LPM O2 or greater to preoxygenate the patient prior to intubation. Alternatively, 25 LPM of O2 via nasal cannula while simultaneously performing BVM ventilations with high-flow oxygen could be used for pre-oxygenation.\"],\n                                examineIfAbsent: false,\n                                examineIfErrors: false,\n                                promptsIfAbsent: \"\",\n                                promptsIfErrors: \"\",\n                                subActionsList: false,\n                                subActions: [\n                                  {\n                                    id: \"intv-ventilation-technique-bag-valve-mask\",\n                                    label: \"Ventilate the patient with bag valve mask\",\n                                    type: ACTION_TYPES.REQ,\n                                    feedbackAbsent: [\"This patient has inadequate respirations and requires ventilatory support. Even if you identify immediately that you want to intubate this patient, he would benefit from starting with a bag-valve mask attached to 15LPM O2 to preoxygenate him prior to intubation. Alternatively, oxygenation with a nasal cannula could be coupled with BVM ventilation.\"],\n                                    feedbackOutOfOrder: [\"Problems with ventilation and oxygenation are life threatening and should be addressed by oxygen administration and BVM ventilation before you move on to your secondary survey. Repeat your exam and check vitals to ensure your interventions have worked as you expected. If not, your patient may deteriorate as you continue on with your examination.\"],\n                                    feedbackErrors: [\"Use a bag-valve mask attached to 15LPM O2 or greater to preoxygenate the patient prior to intubation. Alternatively, 25 LPM of O2 via nasal cannula while simultaneously performing BVM ventilations with high-flow oxygen could be used for pre-oxygenation.\"],\n                                    examineIfAbsent: false,\n                                    examineIfErrors: false,\n                                    promptsIfAbsent: \"\",\n                                    promptsIfErrors: \"\",\n                                    subActionsList: false,\n                                    subActions: [],\n                                  },\n                                  {\n                                    id: \"intv-supplemental-oxygen-device-nasal-cannula\",\n                                    label: \"Nasal cannula\",\n                                    type: ACTION_TYPES.REQ,\n                                    feedbackAbsent: [\"This patient has inadequate respirations and requires ventilatory support. Even if you identify immediately that you want to intubate this patient, he would benefit from starting with a bag-valve mask attached to 15LPM O2 to preoxygenate him prior to intubation. Alternatively, oxygenation with a nasal cannula could be coupled with BVM ventilation.\"],\n                                    feedbackOutOfOrder: [\"\"],\n                                    feedbackErrors: [\"Use a bag-valve mask attached to 15LPM O2 or greater to preoxygenate the patient prior to intubation. Alternatively, 25 LPM of O2 via nasal cannula while simultaneously performing BVM ventilations with high-flow oxygen could be used for pre-oxygenation.\"],\n                                    examineIfAbsent: false,\n                                    examineIfErrors: false,\n                                    promptsIfAbsent: \"\",\n                                    promptsIfErrors: \"\",\n                                    subActionsList: false,\n                                    subActions: [],\n                                  },\n                                ],\n                              },\n                            ],\n                          },\n                          {\n                            id: \"intv-oro-intubation-or-advanced-airway\",\n                            label: \"Intubate the patient by placing an appropriately sized endotracheal tube or alternative/rescue airway\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"Ultimately, this patient should be intubated. This patient has a GCS score of 3; remember, GCS <8, intubate. Since he is unconscious, you need a reliable way to oxygenate and ventilate this patient. While BVM ventilation with an adjunct may be appropriate for a short transport, this near-drowning patient is at increased risk for aspiration, so securing an airway is the best course of action. Orotracheal intubation would be most appropriate because he lacks a gag reflex.\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"Inserting an appropriately sized endotracheal tube (ETT) is the most appropriate method of securing this patient's airway, since he lacks a gag reflex.  An advanced airway would be indicated if the airway cannot be secured with an ET tube due to difficulty intubating the patient.\", \"Calculate the appropriate size ET tube for a child with the equation age/4 +1. This is the correct size for an uncuffed tube; go down by .5 for a cuffed tube. This child needed a 4.5 cuffed or 5.0 uncuffed tube.  The insertion depth for children is 3cm * (tube size), so about 15cm.\", \"If using an advanced/rescue airway, reference the Broslow Tape for the acceptable size, but remember that Combitubes are not sized for children.\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: true,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"Didn't recall how to calculate the size of an ET tube for a child; Didn't recall how to calculate the depth of an ET tube for a child\",\n                            subActionsList: false,\n                            subActions: [\n                              {\n                                id: \"intv-orotracheal-intubation\",\n                                label: \"\",\n                                type: ACTION_TYPES.REQ,\n                                feedbackAbsent: [\"Ultimately, this patient should be intubated. This patient has a GCS score of 3; remember, GCS <8, intubate. Since he is unconscious, you need a reliable way to oxygenate and ventilate this patient. While BVM ventilation with an adjunct may be appropriate for a short transport, this near-drowning patient is at increased risk for aspiration, so securing an airway is the best course of action. Orotracheal intubation would be most appropriate because he lacks a gag reflex.\"],\n                                feedbackOutOfOrder: [\"\"],\n                                feedbackErrors: [\"Inserting an appropriately sized endotracheal tube (ETT) is the most appropriate method of securing this patient's airway, since he lacks a gag reflex.  An advanced airway would be indicated if the airway cannot be secured with an ET tube due to difficulty intubating the patient.\", \"Calculate the appropriate size ET tube for a child with the equation age/4 +1. This is the correct size for an uncuffed tube; go down by .5 for a cuffed tube. This child needed a 4.5 cuffed or 5.0 uncuffed tube.  The insertion depth for children is 3cm * (tube size), so about 15cm.\", \"If using an advanced/rescue airway, reference the Broslow Tape for the acceptable size, but remember that Combitubes are not sized for children.\"],\n                                examineIfAbsent: false,\n                                examineIfErrors: false,\n                                promptsIfAbsent: \"\",\n                                promptsIfErrors: \"\",\n                                subActionsList: false,\n                                subActions: [],\n                              },\n                              {\n                                id: \"intv-insert-advanced-airway\",\n                                label: \"\",\n                                type: ACTION_TYPES.ALT,\n                                alternativeToIntv: \"intv-orotracheal-intubation\",\n                                feedbackAbsent: [\"Ultimately, this patient should be intubated. This patient has a GCS score of 3; remember, GCS <8, intubate. Since he is unconscious, you need a reliable way to oxygenate and ventilate this patient. While BVM ventilation with an adjunct may be appropriate for a short transport, this near-drowning patient is at increased risk for aspiration, so securing an airway is the best course of action. Orotracheal intubation would be most appropriate because he lacks a gag reflex.\"],\n                                feedbackOutOfOrder: [\"\"],\n                                feedbackErrors: [\"Inserting an appropriately sized endotracheal tube (ETT) is the most appropriate method of securing this patient's airway, since he lacks a gag reflex.  An advanced airway would be indicated if the airway cannot be secured with an ET tube due to difficulty intubating the patient.\", \"Calculate the appropriate size ET tube for a child with the equation age/4 +1. This is the correct size for an uncuffed tube; go down by .5 for a cuffed tube. This child needed a 4.5 cuffed or 5.0 uncuffed tube.  The insertion depth for children is 3cm * (tube size), so about 15cm.\", \"If using an advanced/rescue airway, reference the Broslow Tape for the acceptable size, but remember that Combitubes are not sized for children.\"],\n                                examineIfAbsent: false,\n                                examineIfErrors: false,\n                                promptsIfAbsent: \"\",\n                                promptsIfErrors: \"\",\n                                subActionsList: false,\n                                subActions: [],\n                              }\n                            ],\n                          },\n                        ],\n                      },\n                      {\n                        id: \"request-intervention-status-intv-orotracheal-intubation\",\n                        label: \"Confirm tube placement by checking ETCO2 capnography, listening for bilateral lung sounds and absence of gastric sounds\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Confirm tube placement by checking ETCO2 capnography, listening for bilateral lung sounds and absence of gastric sounds.  You should visualize the tube passing through the vocal cords as initial confirmation when performing the procedure.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-open-airway-method-head-tilt\", /*contraindicated intervention */\n                        label: \"Head tilt chin lift\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"A head-tilt chin lift is contraindicated for a patient with suspected c-spine injury as tilting the head could cause further damage to the neck. You should have used a modified jaw thrust to check this patient's airway.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },                  \n                      {\n                        id: \"intv-manual-finger-sweep\", /* contraindicated intervention */\n                        label: \"Manual (finger sweep)\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"If there is a visible foreign body in the mouth, it should be removed. However, a blind finger sweep is contraindicated as it could lodge a foreign body deeper into the airway.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-magill-forceps-assisted\", /* contraindicated intervention */\n                        label: \"Magill forceps assisted removal\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"If there is a visible foreign body in the mouth, it should be removed. However, there is no evidence of a foreign body in this patient's mouth.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-heimlich-maneuver\", /* contraindicated intervention */\n                        label: \"Heimlich Maneuver\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"You have no evidence the patient is choking on an object, so the Heimlich maneuver is not appropriate at this time.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-back-blows-and-chest-thrusts\", /* contraindicated intervention */\n                        label: \"Back blows and chest thrusts\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"You have no evidence the patient is choking on an object, so the Heimlich maneuver is not appropriate at this time.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-nasotracheal-intubation\", /* contraindicated intervention */\n                        label: \"Nasotracheal intubation\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"Nasotracheal intubation is only indicated for specific scenarios where access via the mouth is limited, such as profuse angioedema or trismus. It is a blind procedure and much more difficult than orotracheal intubation so in this patient who has a patent and intact oral airway, orotracheal intubation is preferred.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      \n                      {\n                        id: \"intv-rapid-sequence-intubation\", /* contraindicated intervention */\n                        label: \"Rapid-sequence intubation\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"RSI is not in the paramedic's scope of practice in Pennsylvania\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: true,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"didn't know what type of intubation can be performed in pediatric patients in PA.\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-sedation-assisted-intubation\", /* contraindicated intervention */\n                        label: \"Sedation-assisted intubation\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"Sedation assisted intubation is contraindicated for pediatric patients in PA.  Since this patient is unconscious, orotracheal intubation would be the best option for securing the patient's airway.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: true,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"didn't know what type of intubation can be performed in pediatric patients in PA.\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-needle-cricothyrotomy\", /* contraindicated intervention */\n                        label: \"Needle cricothyrotomy\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"A cricothyrotomy is indicated when there is an upper airway obstruction that cannot be removed. This patient has a patent airway.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: true,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"thought the patient had an upper airway obstruction\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-surgical-cricothyrotomy\", /* contraindicated intervention */\n                        label: \"Surgical cricothyrotomy\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"A cricothyrotomy is indicated when there is an upper airway obstruction that cannot be removed. This patient has a patent airway.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: true,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"thought the patient had an upper airway obstruction\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"breathing\",\n                label: \"Assess the patient's breathing\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"After assessing the patient's airway, assess their breathing by listening for breath sounds and observing their respiratory rate, rhythm, and effort.\", \"You would have found bradypnea and heard gurgling.  This should have prompted you to apply BVM ventilation or other ventilatory support.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"breathing-checks-rate\",\n                        label: \"rate\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"A significantly elevated or depressed respiratory rate can suggest impending respiratory failure.\", \"This patient's bradypnea suggests the need for ventilatory support, not just oxygenation.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"breathing-checks-rhythm\",\n                        label: \"rhythm\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Although not found in this case, a patient who is breathing irregularly needs ventilatory support.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"breathing-checks-quality\",\n                        label: \"quality\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Sounds like stridor, crackles, or wheezing will help you diagnose and manage your patient's respiratory problems.\", \"This patient had gurgling and bilateral rhonchi, suggesting the need for ventilatory support, not just oxygenation.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"Manage inadequate breathing\",\n                label: \"Manage inadequate breathing\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"The patient's respiratory rate is 6 with rhonchi appreciable on exam and no SpO2 capture. This patient needs both oxygen and ventilatory support, so O2 via nasal canula or ventimask would be inadequate.\"],\n                feedbackOutOfOrder: [\"Problems with ventilation and oxygenation are life threatening and should be addressed before you move on to your secondary survey. Repeat your exam and check vitals to ensure your interventions have worked as you expected. If not, your patient may deteriorate as you continue on with your examination.\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: true,\n                examineIfErrors: false,\n                promptsIfAbsent: \"didn't realize that the patient's respiratory status was threatened \",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"intv-ventilation-technique-bag-valve-mask\",\n                        label: \"ventilating the patient at a rate of 20 BPM, while titrating oxygen at a flow rate of 15 L/min to a target SpO2 >= 90%\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"The patient's respiratory rate is 6 with rhonchi appreciable on exam and no SpO2 capture. This patient needs both oxygen and ventilatory support, so O2 via nasal canula or Ventimask would be inadequate.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"This patient should have been ventilated at a rate of 20 breaths per minute, which is the recommended rate for a child aged 2-12. When performing BVM ventilation, you use 15LPM O2 in order to both oxygenate and ventilate the patient to a target SpO2 >90%.\"],\n                        examineIfAbsent:false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"reassess-AB\",\n                        label: \"Check that airway/breathing interventions are working by requesting relevant vitals--in particular, BP, HR, and SpO2\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"BVM compliance is necessary during ventilations. This includes proper head positioning (sniffing the morning air position), proper positioning of the body (upper thorax elevated), and a proper BVM seal. If relevant vital signs (e.g., SPO2) do not improve or ventilations do not seem to be working, these factors should be reassessed. Other medical etiologies (choking, pneumothorax, vomitus in the airway, etc. should be considered) in such cases. If the patient continues to fail to improve, you may need to consider more invasive interventions, such as intubation.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          {\n                            id: \"request-vitals-BP\",\n                            label: \"vital BP\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"BP is one of the relevant vitals to check if airway/breathing interventions are working\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [],\n                          },\n                          {\n                            id: \"request-vitals-Spo2\",\n                            label: \"check Spo2\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"Spo2 is one of the relevant vitals to check if airway/breathing interventions are working\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [],\n                          },\n                          {\n                            id: \"request-vitals-P\",\n                            label: \"check P\",\n                            type: ACTION_TYPES.REQ,\n                            feedbackAbsent: [\"P is one of the relevant vitals to check if airway/breathing interventions are working\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: [],\n                          },\n                        ],\n                      },\n                      /*{\n                        id: \"intv-supplemental-oxygen-device-non-rebreather-mask\", // contraindicated intervention\n                        label: \"Non-rebreather mask\",\n                        type: ACTION_TYPE.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"This patient was unresponsive with slow, gurgling breaths, indicating need for ventilation, not just oxygenation. O2 delivery via a non-rebreather mask would not be adequate in this case, as it assists with oxygenation but does not assist with ventilation.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },*/\n                      {\n                        id: \"intv-occlusive-dressing\", /* contraindicated intervention */\n                        label: \"Occlusive dressing\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"The patient did not have a penetrating chest wound.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-pleural-decompression\", /* contraindicated intervention */\n                        label: \"Needle decompression\",\n                        type: ACTION_TYPES.CONTRA,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors:[\"The patient did not have a tension pneumothorax. Notice that the patient had equal lung sounds bilaterally and improved after intubation.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: true,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"thought the child had a tension pneumothorax\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              \n              {\n                id: \"intv-control-severe-bleeding-technique-direct-pressure\", /* contraindicated intervention */\n                label: \"Direct pressure\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"The patient did not have significant bleeding.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-control-severe-bleeding-technique-tourniquet\", /* contraindicated intervention */\n                label: \"Tourniquet\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"The patient did not have significant bleeding.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-control-severe-bleeding-technique-2nd-tourniquet\", /* contraindicated intervention */\n                label: \"Second tourniquet\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"The patient did not have significant bleeding.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-control-severe-bleeding-technique-pack-wound-with-gauze\", /* contraindicated intervention */\n                label: \"Pack wound with gauze or hemostatic gauze\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"The patient did not have significant bleeding.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-control-severe-bleeding-technique-pressure-bandage\", /* contraindicated intervention */\n                label: \"Pressure dressing\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"The patient did not have significant bleeding.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-control-severe-bleeding-technique-load-and-go\", /* contraindicated intervention */\n                label: \"Load and go due to uncontrolled bleeding.\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"The patient did not have significant bleeding.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"transport-decision\",\n                label: \"Make appropriate transport decisions based on your findings so far\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Your ABCs and evaluation for life threats and level of consciousness will dictate where you transfer your patient.\", \"This patient was critically ill so you should have decided to transport him to the level 1 pediatric trauma center.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"decision-is-load-and-go\",\n                        label: \"Determine that this is a critical patient\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"This patient is unconscious and needs ventilatory support. This patient should be considered critical.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"This patient is unconscious and needs ventilatory support. This patient should be considered critical.\"],\n                        examineIfAbsent: true,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"didn't realize this was a critically ill patient; felt this patient should be further stabilized on site prior to transfer\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-transport\",\n                        label: \"Decide to transport this patient to a Level 1 pediatric trauma center by air ambulance\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"This patient requires a pediatric trauma center because of age and physiological criteria. The physiological criteria indicating that the patient requires this type of facility are respiratory rate of less than 10 and GCS <5 (not following commands)\"],\n                        feedbackOutOfOrder: [\"Initial transport decisions should be made following the 'Primary Survey' (ABCs) because that is when the provider decides whether the patient can be further stabilized on scene or taken directly to a hospital in a 'load and go' scenario. The secondary assessment is only performed on scene if the situation is NOT a 'load and go.' Making transport decisions early is especially important if you are calling for an air ambulance to account for the time it takes for them to arrive.\"],\n                        feedbackErrors: [\"This patient requires a pediatric trauma center because of age and physiological criteria. The physiological criteria indicating that the patient requires this type of facility are respiratory rate of less than 10 and GCS <5 (not following commands)\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: true,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"did not realize patient requires higher level of service than level II adult facility\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"intv-call-for-air-ambulance\",\n                        label: \"Call for an air ambulance\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Given the time required for an air ambulance to arrive, you should call for one as soon after you decide to transport the patient by helicopter as possible, after completing your Primary Survey.\"],\n                        feedbackOutOfOrder: [\"Call for an air ambulance before beginning your secondary survey to account for the time it takes for them to arrive.\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"trauma-expose\",\n                label: \"Trauma expose the patient\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Exposure is necessary to properly inspect the patient for injuries. Only the area being inspected should be uncovered and then recovered to prevent heat loss and hypothermia.\"],\n                feedbackOutOfOrder: [\"It is important to expose your patient to ensure that your secondary survey can be performed efficiently -- especially in trauma scenarios where there may be more unknown injuries. Exposing the patient allows the provider to more carefully examine the patient during assessment.\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [{\n                  id: \"exposes-body-parts\",\n                  label: \"Exposed (and recovered) anatomical areas as necessary\",\n                  type: ACTION_TYPES.REQ,\n                  feedbackAbsent: [\"Exposure is necessary to properly inspect the patient for injuries. Only the area being inspected should be uncovered and then recovered to prevent heat loss and hypothermia.\"],\n                  feedbackOutOfOrder: [\"It is important to expose your patient to ensure that your secondary survey can be performed efficiently -- especially in trauma scenarios where there may be more unknown injuries. Exposing the patient allows the provider to more carefully examine the patient during assessment.\"],\n                  feedbackErrors: [\"\"],\n                  examineIfAbsent: false,\n                  examineIfErrors: false,\n                  promptsIfAbsent: \"\",\n                  promptsIfErrors: \"\",\n                  subActionsList: false,\n                  subActions: [],\n              },],\n              },\n          ],\n        },\n        {\n          id: \"history-taking\",\n          label: \"Obtain or direct a partner to obtain a patient history\",\n          type: ACTION_TYPES.REQ,\n          feedbackAbsent: [\"Vital signs will help you decide how to manage your patient, as will a history. Even if you cannot obtain a history from the patient directly, you should still try to get as much information as you can (e.g., from a bystander).\"],\n          feedbackOutOfOrder: [\"You should have obtained a set of vitals or directed a partner to do so before beginning your Secondary Survey. A patient's vital signs may prompt you to repeat parts of your Primary Assessment before moving onto the Secondary Survey.\"],\n          feedbackErrors: [\"\"],\n          examineIfAbsent: false,\n          examineIfErrors: false,\n          promptsIfAbsent: \"\",\n          promptsIfErrors: \"\",\n          subActionsList: true,\n          subActions: [\n            {\n                id: \"required-action-obtains-vitals\",\n                label: \"Baseline vital signs\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Baseline vitals are critical; they will help you assess, manage, and continue to monitor your patient.\", \"You would have found that this patient was bradycardic, bradypnic, hypoxic, and hypotensive, alerting you to a critical patient who needed prompt intervention.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"required-action-attempt-obtain-sample\",\n                label: \"SAMPLE (if possible)\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Take an efficient but thorough history from the baby sitter: symptoms, allergies, medications, past medical history, last oral intake, events preceding.\", \"You would have learned that the child was left unattended on a floating mattress in the pool for 5 minutes, found underwater, and then pulled out of the pool.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"required-action-obtain-OPQRST\",\n                label: \"OPQRST (if possible)\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Assess the patient's pain: onset, provocation/palliation, quality, region/radiation, severity, and time. If the patient cannot tell you his or herself, you should ask a family member or other bystander for whatever information they may have.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n          ],\n        },\n        {\n          id: \"secondary-assessment\",\n          label: \"Perform a Secondary Survey (rapid trauma assessment)\",\n          type: ACTION_TYPES.REQ,\n          feedbackAbsent: [\"The Secondary Survey is a thorough exam of your patient to ensure you have a complete understanding of what is going on and how you need to manage your patient.\"],\n          feedbackOutOfOrder: [\"\"],\n          feedbackErrors: [\"\"],\n          examineIfAbsent: false,\n          examineIfErrors: false,\n          promptsIfAbsent: \"\",\n          promptsIfErrors: \"\",\n          subActionsList: true,\n          subActions: [\n            {\n                id: \"head\",\n                label: \"examine the patient's head\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"assessment-inspects-skull\",\n                        label: \"Inspect and palpate the scalp and skull\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"assessment-inspects-facial-bones\",\n                        label: \"Inspect and palpate the facial bones\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Inspecting the face for bruising and palpating for facial deformity may indicate facial fractures.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"inspects-eyes\",\n                        label: \"Inspect the eyes\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Checking for PERRLA would have revealed that the patient's pupils were equal but sluggish, suggesting possible intracranial injury and a critically ill patient who needed rapid transfer to a trauma center.\", \"Bruising around the eyes may be caused by basilar skull fracture. Fortunately, this aspect of the exam was normal in this patient.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: true,\n                        subActions: [ \n                          {\n                            id: \"inspects-eyes-PERRLA\",\n                            label: \"for PERRLA\",\n                            feedbackAbsent: [\"Checking for PERRLA would have revealed that the patient's pupils were equal but sluggish, suggesting possible intracranial injury and a critically ill patient who needed rapid transfer to a trauma center.\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: []\n                          },\n                          {\n                            id: \"inspects-eyes-racoon\",\n                            label: \"for bruising ('raccoon eyes')\",\n                            feedbackAbsent: [\"This aspect of the exam was normal in this patient but bruising around the eyes may be caused by basilar skull fracture.\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: []\n                          }\n                        ],\n                      },\n                      {\n                        id: \"inspects-ears\",\n                        label: \"Inspect the ears for blood, other fluids, and bruising (\\\"battle signs\\\")\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Although not found in this case, bleeding or CF from the ear may be indicative of a basilar skull fracture. Bruising behind the ear suggests a basilar skull fracture (Battle's sign).\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          {id: \"inspects-ears-blood\",\n                           feedbackAbsent: [\"Although not found in this case, bleeding or CF from the ear may be indicative of a basilar skull fracture.\"],\n                           feedbackOutOfOrder: [\"\"],\n                           feedbackErrors: [\"\"],\n                           examineIfAbsent: false,\n                           examineIfErrors: false,\n                           promptsIfAbsent: \"\",\n                           promptsIfErrors: \"\",\n                           subActionsList: false,\n                           subActions: []\n                          },\n                          {id: \"inspects-ears-bruising\",\n                           feedbackAbsent: [\"Although not found in this case, bruising behind the ear suggests a basilar skull fracture (Battle's sign).\"],\n                           feedbackOutOfOrder: [\"\"],\n                           feedbackErrors: [\"\"],\n                           examineIfAbsent: false,\n                           examineIfErrors: false,\n                           promptsIfAbsent: \"\",\n                           promptsIfErrors: \"\",\n                           subActionsList: false,\n                           subActions: []\n                          }\n                        ],\n                      },\n                      {\n                        id: \"inspects-nose\",\n                        label: \"Inspect the nose for blood and other fluids\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"This patient had no drainage from the nose but consider CSF leak from a basilar skull fracture if you see clear drainage.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"inspects-mouth\",\n                        label: \"Inspect the mouth for blood, other secretions, and obstructions\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"During your primary survey, you should have noticed water and vomit in the patient's mouth; you should have suctioned the patient's airway.  If you had done this, at this stage the patient's airway would be clear of secretions.\", \"Additionally, any visualized foreign bodies in the mouth should be removed. A blind finger sweep is never indicated, as you could lodge a foreign body deeper into the airway. Besides the vomit and water you suctioned, there were no obstructions in this patient’s mouth.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"neck\",\n                label: \"examine the patient's neck\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"assessment-neck-injury\",\n                        label: \"injury\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"assessment-tracheal-deviation\",\n                        label: \"tracheal deviation\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"This patient's neck exam was normal, but remember, tracheal deviation suggests unequal intrathoracic pressure (for example, a pneumothorax). The trachea will be deviated away from the side with increased pressure.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"assessment-JVD\",\n                        label: \"jugular venous distension (JVD)\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"This patient's neck exam was normal, but remember, JVD suggests that the heart is not adequately pushing out blood. Consider obstructive processes like a tension pneumothorax or hemothorax.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"assessment-stepoffs\",\n                        label: \"step-offs\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"This patient's neck exam was normal, but remember, a palpable step-off suggests a fracture.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"chest\",\n                label: \"examine the patient's chest\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"assessment-check-breath-sounds\",\n                        label: \"Listen for breath sounds\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"The presence and quality of breath sounds can clue you into underlying problems (e.g., pneumothorax, asthma, fluid build-up in the lungs).\", \"This patient had rales and crackles, suggesting fluid in the alveoli and interstitium of the lungs and possible pulmonary edema.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                       },\n                       {\n                        id: \"assessment-inspect-shoulders\",\n                        label: \"Inspect and palpate shoulders\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Inspecting the shoulders for discoloration symmetry or deformity may identify dislocation or fracture of the shoulder (clavicle, humerus and scapula).  This patient's shoulders were normal.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"assessment-inspect-clavicles\",\n                        label: \"Inspect and palpates clavicles\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"The clavicles should be inspected for any evidence of fractures. Though rare, clavicle fractures can cause a pneumothorax. This patient’s clavicles were normal.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"inspects-palpates-anterior-thorax\",\n                        label: \"Inspect and palpate anterior thorax for injury, crepitation, and paradoxial motion or flail segments\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"If the patient had had anterior thorax and rib crepitation, you should suspect air outside of the lungs, which would raise your suspicion for a pneumothorax.\", \"The patient had symmetric movement of his chest. Recall that paradoxical chest wall motion suggests flail chest, where multiple rib fractures lead to an unstable portion of the chest wall.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          {\n                            id: \"inspects-chest-injury\",\n                            feedbackAbsent: [\"\"], /* no feedback on excel sheet */\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: []\n                          },\n                          {\n                            id: \"inspects-palpates-anterior-thorax-crepitation\",\n                            feedbackAbsent: [\"If the patient had had anterior thorax and rib crepitation, you should suspect air outside of the lungs, which would raise your suspicion for a pneumothorax.\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: []\n                          },\n                          {\n                            id: \"inspects-anterior-thorax-paradoxical-motion\",\n                            feedbackAbsent: [\"The patient had symmetric movement of his chest. Recall that paradoxical chest wall motion suggests flail chest, where multiple rib fractures lead to an unstable portion of the chest wall.\"],\n                            feedbackOutOfOrder: [\"\"],\n                            feedbackErrors: [\"\"],\n                            examineIfAbsent: false,\n                            examineIfErrors: false,\n                            promptsIfAbsent: \"\",\n                            promptsIfErrors: \"\",\n                            subActionsList: false,\n                            subActions: []\n                          },\n                        ],\n                      },\n                ],\n              },\n              {\n                id: \"abdomen-pelvis\",\n                label: \"examine the patient's abdomen\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"A distended or rigit abdomen suggests trauma and internal bleeding. Fortunately, the patient's abdominal exam was normal.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"inspects-abdomen-injury\",\n                        label: \" inspect and palpate for injury\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"\"], /* no feedback on excel sheet */\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"inspects-palpates-abdomen-distension\",\n                        label: \"inspect and palpate for distension\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"A distended abdomen suggests trauma and internal bleeding. Fortunately, the patient's abdominal exam was normal.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"inspects-palpates-abdomen-rigidity\",\n                        label: \"inspect and palpate for rigidity\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"A rigid abdomen suggests trauma and internal bleeding. Fortunately, the patient's abdominal exam was normal.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"assess-pelvis\",\n                label: \"examine the patient's pelvis\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"Be sure to do a thorough exam of the pelvis as the pelvis can be a source of life-threatening bleeding. The presence of blood or other fluids may indicate urethral, vaginal or rectal injury. Fortunately, your exam of this patient’s pelvis and genitalia would have been normal.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"assessment-checks-pelvis\",\n                        label: \"Inspect and compress the pelvis\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Be sure to do a thorough exam of the pelvis as the pelvis can be a source of life-threatening bleeding. Fortunately, the patient's pelvis exam was normal.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"inspects-genitalia-perineum-blood\",\n                        label: \"Inspect the genitalia/perineum for blood and other fluids\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"The presence of blood or other fluids may indicate urethral, vaginal or rectal injury.\", \"Your exam of this patient’s pelvis and genitalia would have been normal.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"extremities\",\n                label: \"examine the patient's upper and lower extremities\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    {\n                        id: \"inspects-extremities-injury\",\n                        label: \"Inspect and palpate each extremity for injury\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"\"], /* no feedback in excel sheet */\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          { id: \"inspects-right-arm-injury\",\n                            subActions: []},\n                           {id: \"inspects-left-arm-injury\",\n                            subActions: []},\n                           {id: \"inspects-right-leg-injury\",\n                            subActions: []},\n                           {id: \"inspects-left-leg-injury\",\n                            subActions: []},\n                        ],\n                      },\n                      {\n                        id: \"inspects-extremities-pulse\",\n                        label: \"Inspect and palpate each extremity for pulse\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"If you had checked this patient's extremity pulses, you would have noticed weak extremity pulses, due to inadequate cardiac output.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          { id: \"inspects-right-arm-pulse\",\n                            feedbackAbsent: [\"If you had checked this patient's extremity pulses, you would have noticed weak extremity pulses, due to inadequate cardiac output.\"],\n                            subActions: []},\n                           {id: \"inspects-left-arm-pulse\",\n                            feedbackAbsent: [\"If you had checked this patient's extremity pulses, you would have noticed weak extremity pulses, due to inadequate cardiac output.\"],\n                            subActions: []},\n                           {id: \"inspects-right-leg-pulse\",\n                            feedbackAbsent: [\"If you had checked this patient's extremity pulses, you would have noticed weak extremity pulses, due to inadequate cardiac output.\"],\n                            subActions: []},\n                           {id: \"inspects-left-leg-pulse\",\n                            feedbackAbsent: [\"If you had checked this patient's extremity pulses, you would have noticed weak extremity pulses, due to inadequate cardiac output.\"],\n                            subActions: []},\n                        ],\n                      },\n                      {\n                        id: \"inspects-extremities-motor-function\",\n                        label: \"Inspect and palpate each extremity for motor function\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Generally, diminished or absent mobility may suggest spinal cord or other nervous system injury, but you were not able to perform a motor assessment in this unconscious patient.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          { id: \"inspects-right-arm-motor-ability\",\n                            feedbackAbsent: [\"Generally, diminished or absent mobility may suggest spinal cord or other nervous system injury, but you were not able to perform a motor assessment in this unconscious patient.\"],\n                            subActions: []},\n                           {id: \"inspects-left-arm-motor-ability\",\n                            feedbackAbsent: [\"Generally, diminished or absent mobility may suggest spinal cord or other nervous system injury, but you were not able to perform a motor assessment in this unconscious patient.\"],\n                            subActions: []},\n                           {id: \"inspects-right-leg-motor-ability\",\n                            feedbackAbsent: [\"Generally, diminished or absent mobility may suggest spinal cord or other nervous system injury, but you were not able to perform a motor assessment in this unconscious patient.\"],\n                            subActions: []},\n                           {id: \"inspects-left-leg-motor-ability\",\n                            feedbackAbsent: [\"Generally, diminished or absent mobility may suggest spinal cord or other nervous system injury, but you were not able to perform a motor assessment in this unconscious patient.\"],\n                            subActions: []},\n                        ],\n                      },\n                      {\n                        id: \"inspects-extremities-sensory-function\",\n                        label: \"Inspect and palpate each extremity for sensory function\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Generally, diminished or absent sensation may suggest spinal cord or other nervous system injury, but you were not able to perform a motor assessment in this unconscious patient.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [\n                          { id: \"inspects-right-arm-sensory-function\",\n                            feedbackAbsent: [\"Generally, diminished or absent sensation may suggest spinal cord or other nervous system injury, but you were not able to perform a motor assessment in this unconscious patient.\"],\n                            subActions: []},\n                           {id: \"inspects-left-arm-sensory-function\",\n                            feedbackAbsent: [\"Generally, diminished or absent sensation may suggest spinal cord or other nervous system injury, but you were not able to perform a motor assessment in this unconscious patient.\"],\n                            subActions: []},\n                           {id: \"inspects-right-leg-sensory-function\",\n                            feedbackAbsent: [\"Generally, diminished or absent sensation may suggest spinal cord or other nervous system injury, but you were not able to perform a motor assessment in this unconscious patient.\"],\n                            subActions: []},\n                           {id: \"inspects-left-leg-sensory-function\",\n                            feedbackAbsent: [\"Generally, diminished or absent sensation may suggest spinal cord or other nervous system injury, but you were not able to perform a motor assessment in this unconscious patient.\"],\n                            subActions: []},\n                        ],\n                      }, \n                ],\n              },\n              {\n                id: \"posterior\",\n                label: \"inspect and palpate the posterior thorax, lumbar, and buttocks for injury and step-offs\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"You will need a partner to help you roll the patient safely in order to do a thorough exam of the posterior thorax, lumbar, and buttocks for injury and step-offs. A palpable step-off, which the patient did not have, would suggest a fracture.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                    { id: \"inspects-posterior-other-injury\",\n                      feedbackAbsent: [\"\"], /* no feedback in excel sheet */\n                      feedbackOutOfOrder: [\"\"],\n                      feedbackErrors: [\"\"],\n                      examineIfAbsent: false,\n                      examineIfErrors: false,\n                      promptsIfAbsent: \"\",\n                      promptsIfErrors: \"\",\n                      subActionsList: false,\n                      subActions: []\n                    },\n                    {\n                      id: \"inspects-posterior-step-offs\",\n                      feedbackAbsent: [\"A palpable step-off, which the patient did not have, would suggest a fracture.\"],\n                      feedbackOutOfOrder: [\"\"],\n                      feedbackErrors: [\"\"],\n                      examineIfAbsent: false,\n                      examineIfErrors: false,\n                      promptsIfAbsent: \"\",\n                      promptsIfErrors: \"\",\n                      subActionsList: false,\n                      subActions: []\n                    },\n                ],\n              },\n          ],\n        },\n        {\n          id: \"ongoing-mgmt-plan\",\n          label: \"Continue to provide adequate prehospital care until arriving at the receiving facility\",\n          type: ACTION_TYPES.REQ,\n          feedbackAbsent: [\"\"],\n          feedbackOutOfOrder: [\"\"],\n          feedbackErrors: [\"How to transfer your patient to the stretcher depends on your level of concern for spinal injury but you should do so with minimal movement to the spine\", \"Given the low concern for further spinal injury (i.e. the patient was unlikely to have been diving), you could carefully place him directly on the stretcher, with manual c-spine stabilization and a c-collar in place. Alternately, you could use a backboard, scoop stretcher, vacuum mattress, or other device which could be removed after placing the patient on the stretcher.\", \"Supine position will be required for this patient as he is intubated and in order to properly position the airway.\"],\n          examineIfAbsent: false,\n          examineIfErrors: false,\n          promptsIfAbsent: \"\",\n          promptsIfErrors: \"\",\n          subActionsList: true,\n          subActions: [\n            {\n                id: \"intv-place-on-stretcher-OR-immob-device\",\n                label: \"Transfer the patient directly to the stretcher or by first placing him on an immobilization or transfer device.\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"How to transfer your patient to the stretcher depends on your level of concern for spinal injury but you should do so with minimal movement to the spine\", \"Given the low concern for further spinal injury (i.e. the patient was unlikely to have been diving), you could carefully place him directly on the stretcher, with manual c-spine stabilization and a c-collar in place. Alternately, you could use a backboard, scoop stretcher, vacuum mattress, or other device which could be removed after placing the patient on the stretcher.\", \"Supine position will be required for this patient as he is intubated and in order to properly position the airway.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"How to transfer your patient to the stretcher depends on your level of concern for spinal injury but you should do so with minimal movement to the spine\", \"Given the low concern for further spinal injury (i.e. the patient was unlikely to have been diving), you could carefully place him directly on the stretcher, with manual c-spine stabilization and a c-collar in place. Alternately, you could use a backboard, scoop stretcher, vacuum mattress, or other device which could be removed after placing the patient on the stretcher.\", \"Supine position will be required for this patient as he is intubated and in order to properly position the airway.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [\n                  {\n                    id: \"intv-place-directly-on-stretcher\",\n                    label: \"Transfer the patient directly to a stretcher\",\n                    type: ACTION_TYPES.REQ,\n                    feedbackAbsent: [\"\"],\n                    feedbackOutOfOrder: [\"\"],\n                    feedbackErrors: [\"How to transfer your patient to the stretcher depends on your level of concern for spinal injury but you should do so with minimal movement to the spine\", \"Given the low concern for further spinal injury (i.e. the patient was unlikely to have been diving), you could carefully place him directly on the stretcher, with manual c-spine stabilization and a c-collar in place. Alternately, you could use a backboard, scoop stretcher, vacuum mattress, or other device which could be removed after placing the patient on the stretcher.\", \"Supine position will be required for this patient as he is intubated and in order to properly position the airway.\"],\n                    examineIfAbsent: false,\n                    examineIfErrors: false,\n                    promptsIfAbsent: \"\",\n                    promptsIfErrors: \"\",\n                    subActionsList: false,\n                    subActions: [],\n                  },\n                  {\n                    id: \"intv-place-on-immobilization-device\",\n                    label: \"Transfer patient by first placing him on immobilization device\",\n                    type: ACTION_TYPES.ALT,\n                    alternativeToIntv: \"intv-place-directly-on-stretcher\",\n                    feedbackAbsent: [\"\"],\n                    feedbackOutOfOrder: [\"\"],\n                    feedbackErrors: [\"How to transfer your patient to the stretcher depends on your level of concern for spinal injury but you should do so with minimal movement to the spine\", \"Given the low concern for further spinal injury (i.e. the patient was unlikely to have been diving), you could carefully place him directly on the stretcher, with manual c-spine stabilization and a c-collar in place. Alternately, you could use a backboard, scoop stretcher, vacuum mattress, or other device which could be removed after placing the patient on the stretcher.\", \"Supine position will be required for this patient as he is intubated and in order to properly position the airway.\"],\n                    examineIfAbsent: false,\n                    examineIfErrors: false,\n                    promptsIfAbsent: \"\",\n                    promptsIfErrors: \"\",\n                    subActionsList: false,\n                    subActions: [],\n                  },\n                ],\n              },\n              {\n                id: \"intv-spinal-immobilization-technique-transfer-to-device\", /* unnecessary intervention */\n                label: \"Transfer patient to immobilization device\",\n                type: ACTION_TYPES.UNNEC,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"This near-drowning patient who had an unwitnessed event needs cervical spine stabilization and a cervical collar. However, further spinal immobilization is optional, given the low concern for further spinal injury (i.e. the patient was unlikely to have been diving).\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"intv-spinal-immobilization-technique-attach-cid\", /* unnecessary intervention */\n                label: \"Attach cervical immobilization device (CID)\",\n                type: ACTION_TYPES.UNNEC,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"This near-drowning patient who had an unwitnessed event needs cervical spine stabilization and a cervical collar. However, further spinal immobilization is optional, given the low concern for further spinal injury (i.e. the patient was unlikely to have been diving).\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: [],\n              },\n              {\n                id: \"Reassess the patient\",\n                label: \"Reassess the patient\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: true,\n                subActions: [\n                  {\n                    id: \"reassess-vitals-plus-frequency\",\n                    label: \"Recheck vital signs every 5 minutes\",\n                    type: ACTION_TYPES.REQ,\n                    feedbackAbsent: [\"Vitals should be reassessed after every intervention and every clinical change, and a critically ill patient should be reassessed every 5 minutes since their condition could deteriorate rapidly.\"],\n                    feedbackOutOfOrder: [\"\"],\n                    feedbackErrors: [\"\"],\n                    examineIfAbsent: false,\n                    examineIfErrors: false,\n                    promptsIfAbsent: \"\",\n                    promptsIfErrors: \"\",\n                    subActionsList: false,\n                    subActions: [\n                      {\n                        id: \"reassess-vital-signs\",\n                        label: \"Recheck vital signs every 5 minutes\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Vitals should be reassessed after every intervention and every clinical change, and a critically ill patient should be reassessed more frequently to ensure he or she is still stable.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [], \n                      },\n                      {\n                        id: \"decision-vitals-frequency\",\n                        label: \"decision vitals frequency\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"Vitals should be reassessed after every intervention and every clinical change, and a critically ill patient should be reassessed every 5 minutes since their condition could deteriorate rapidly.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"Vitals should be reassessed after every intervention and every clinical change, and a critically ill patient should be reassessed every 5 minutes since their condition could deteriorate rapidly.\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [], \n                      },\n                    ],\n                  },\n                      {\n                        id: \"repeat-primary-survey\",\n                        label: \"Repeat the Primary Survey\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"It is important to reassess your patient after every intervention and every clinical change, which includes the primary survey. For example, a patient with a neck injury whose breathing was initially non-labored may develop stridor as the airway becomes swollen.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                      {\n                        id: \"repeat-secondary-survey\",\n                        label: \"Repeat the Secondary Survey\",\n                        type: ACTION_TYPES.REQ,\n                        feedbackAbsent: [\"It is important to reassess your patient after every intervention and every clinical change, which includes your secondary survey. For example, a patient may lose their pulses if you initially failed to notice and treat a source of hemorrhage.\"],\n                        feedbackOutOfOrder: [\"\"],\n                        feedbackErrors: [\"\"],\n                        examineIfAbsent: false,\n                        examineIfErrors: false,\n                        promptsIfAbsent: \"\",\n                        promptsIfErrors: \"\",\n                        subActionsList: false,\n                        subActions: [],\n                      },\n                ],\n              },\n              {\n                id: \"intv-control-shock-technique-keep-patient-warm\", /* Collin: can you list vertically the items on the list in the field \"label\"? */\n                label: \"Keep the patient warm, using some of the following methods: (1) apply heat packs to the patient's groin or armpits, (2) remove wet clothing, (3) cover the patient with blankets, (4) turn the heat up in the ambulance.\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"It is important to keep this patient warm because hypothermia can cause additional problems or worsening of the patient's current problems, including hypotension, arrhythmias, or even cardiac arrest.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"You could keep the patient warm by removing his wet swimsuit, applying blankets, applying heat packs to his armpits or groin, and turning up the heat in the air ambulance.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: []\n              },\n              {\n                id: \"intv-contact-receiving-facility\",\n                label: \"Assist the air crew with giving a patient report to the receiving facility and ETA\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"The hospital requires notification for all incoming patients 5 -15 prior to arrival, which is especially important for critical patients as the receiving team needs time to prepare equipment and space.  During patient handover to the flight crew, you should relay the information that they need to convey to the receiving facility about the patient.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: []\n              },\n              {\n                id: \"intv-establish-iv\",\n                label: \"Establish at least one large bore IV en route\",\n                type: ACTION_TYPES.REQ,\n                feedbackAbsent: [\"All trauma patients should have at least one, ideally two, large-bore IVs placed, even if they do not require fluid resuscitation.\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"With a critical patient, you should ideally establish two large bore IV's while en route to the receiving facility, so as not to delay transfer to definitive care.  Establish as large an IV as possible. With pediatric patients, this will likely be 18-, 20-, or 22- gauge IVs.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: []\n              },\n              {\n                id: \"intv-control-shock-technique-administer-iv-boluses\", /* unnecessary intervention */\n                label: \"IV fluid resuscitation\",\n                type: ACTION_TYPES.UNNEC,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"While it is true the patient was hypotensive, the reason for his hypotension was his respiratory failure, not hypovolemia. Appropriate management of the patient's airway and breathing would have improved his hypotension without the need for IV fluids. In fact, you should be conservative about fluid resuscitation in a near drowning patient because pulmonary edema would further hinder the patient's respiratory status. In general, when administering fluids to children, you should bolus 20ml/kg at a time to guard against fluid overload.\"],\n                examineIfAbsent: false,\n                examineIfErrors: true,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"thought that hypotension should be treated with fluid boluses regardless of etiology\",\n                subActionsList: false,\n                subActions: []\n              },\n              {\n                id: \"intv-apply-sterile-dressings\", /* contraindicated intervention */\n                label: \"Apply sterile dressings\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"The patient did not have any signifcant injuries to the skin.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: []\n              },\n              {\n                id: \"intv-occlusive-dressing\", /* contraindicated intervention */\n                label: \"Occlusive dressing\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"The patient did not have any penetrating injuries.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: []\n              },\n              {\n                id: \"intv-splint-fracture\", /* contraindicated intervention */\n                label: \"Splint fractures\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors:[\"The patient did not have any fractures.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: []\n              },\n              {\n                id: \"intv-sling\", /* contraindicated intervention */\n                label: \"Apply sling\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"The patient did not have any injuries of the upper extremities.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: []\n              },\n              {\n                id: \"intv-prepare-amputated-part\", /* contraindicated intervention */\n                label: \"Prepare amputated part for transport\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"The patient did not have an amputation.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: []\n              },\n              {\n                id: \"intv-prepare-and-administer-pain-nausea-vomiting-medications\", /* contraindicated intervention */\n                label: \"Prepare and administer medications\",\n                type: ACTION_TYPES.CONTRA,\n                feedbackAbsent: [\"\"],\n                feedbackOutOfOrder: [\"\"],\n                feedbackErrors: [\"This patient is unconscious. Management of life-threatening problems takes precedence, and you should not delay addressing these to manage pain, nausea, vomiting, etc.\"],\n                examineIfAbsent: false,\n                examineIfErrors: false,\n                promptsIfAbsent: \"\",\n                promptsIfErrors: \"\",\n                subActionsList: false,\n                subActions: []\n              },\n          ],\n        },     \n    ],\n},\n}\n","// defines which assessment steps are not required per scenario.  Provides feedback on\n// why the step is not required.\nexport const exceptionDefs = \n[{scenarioName: \"M2CA\", exceptions: [\n    //there is a bystander but wouldn't know about any earlier pain before accident\n    [\"required-action-obtain-OPQRST\", \"This cannot be assessed when GCS < 15\"],\n    [\"assess-opqrst-info\", \"This cannot be assessed when GCS < 15\"]\n    ]},\n    //removed below because there is a bystander who may have info about any pain before accident\n /* {scenarioName: \"SC8CP\", exceptions: [\n        [\"required-action-obtain-OPQRST\", \"This cannot be assessed when GCS < 15\"],\n        [\"assess-opqrst-info\", \"This cannot be assessed when GCS < 15\"]\n        ]} */\n  ]\n  \n/* This starts section on defining temporal constraints, conditional constraints and implications.*/\n\n/*temporal constraints are an\nindex of event labels with two lists as values.\nThe first value is a list of event labels that the indexed event\nshould precede (if any) and the second value is a list of event\nlabels that the indexed event should follow after (if any)\n*/\n\nexport const globalConstraints = {\n    // event < list of other events, > list of other events\n    // lookup by event id to see the list of event ids that it should go before\n    // and after, and the type of constraint. \n    // included constraints type with values of policy, commonSense and both.  These may be used in future to\n    // decide any lead in to feedback about a constraint violation\n    // type policy operators are usually \"ands\", type commonsense operators are ususally \"ors\" because\n    // the ordering is looser than with policy ordering.  An operator can be blank if only one item is listed for the\n    // before or for the after.  No software should be written to expect\n    // this tendency between type and operators to hold.\n\n    //Note that: \n    //- for now the software will use either the label or id to lookup constraints but id\n    // is preferred.\n    //- a key (first item on each line) is the first arg in the constraints and is\n    //  assumed to have just one constraint applicable to\n    //  it but may appear as the second arg in a constraint multiple times (2nd args are\n    //  lists under before or after fields)\n    //- when something is a phase or subphase with multiple actions then we look for the begining\n    //  and ending actions for constraint checking.  If overlap in phases is to be allowed the constraint should\n    //  be amongst lower level items and no higher level constraint should be included\n    //= there is no check to make sure the constraints expressed do not conflict.  For example,\n    //  saying a whole phase should be before another phase and that a particular item in the second\n    //  phase can go before some other item in the first phase are in conflict with one another\n\n\n    // Note: looks like I may need to allow multiple constraints to be listed under an arg1 key.  Shouldn't be\n    // difficult to do but waiting to see if it is truly necessary first.  While most constraints for arg1 could\n    // be combined in the list below, there is an issue with adding in scenario specific conditional constraints\n    // that are expressed in a different structure.\n\n    //\"\": {id: \"T\", before: [\"\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"policy\"},\n    \n    // T1\n    \"scene-size-up\": {id: \"T1\", before: [\"primary-survey\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"nonLeaf\"},\n    // T2\n    \"primary-survey\": {id: \"T2a\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"nonLeaf\"},\n    //listing the below any intervention that I think are always going to address a life threat\n    \"intv-open-airway-method-head-tilt\": {id: \"T2.1\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"},\n    \"intv-open-airway-method-modified-jaw-thrust\": {id: \"T2.2\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"},\n    // T2.3 see T13 \n    \"intv-manual-finger-sweep\": {id: \"T2.4\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"},\n    \"intv-magill-forceps-assisted\": {id: \"T2.5\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"},\n    \"intv-heimlich-maneuver\": {id: \"T2.6\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"},\n    \"intv-back-blows-and-chest-thrusts\": {id: \"T2.7\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"},\n    // T2.8 see T28.a\n    // T2.9 see T28.b\n    \"intv-needle-cricothyrotomy\": {id: \"T2.10\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"},\n    \"intv-surgical-cricothyrotomy\": {id: \"T2.11\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"},\n    // T2.12 see T29 \n    // T2.13 see T30\n    // T2.14 see T17\n    \"intv-control-severe-bleeding-technique-pack-wound-with-gauze\": {id: \"T2.15\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"},\n    \"intv-control-severe-bleeding-technique-load-and-go\": {id: \"T2.16\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"},\n    \"intv-control-shock-technique-place-patient-supine-position\": {id: \"T2.17\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"},\n    \"intv-occlusive-dressing\": {id: \"T2.18\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"},\n    // T2.19 see T34\n    // T2.20 see T10\n    \"intv-control-severe-bleeding-technique-direct-pressure\": {id: \"T2.21\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"},\n    \"intv-control-severe-bleeding-technique-2nd-tourniquet\": {id: \"T2.22\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"},\n    \"intv-control-severe-bleeding-technique-tourniquet\": {id: \"T2.23\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"},\n    \"intv-control-severe-bleeding-technique-pressure-bandage\": {id: \"T2.24\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"},\n    \"intv-insert-advanced-airway\": {id: \"T2.25\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"},\n    \"intv-sedation-assisted-intubation\": {id: \"T2.26\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"},\n    \"intv-nasotracheal-intubation\": {id: \"T2.27\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"},\n    \"intv-orotracheal-intubation\": {id: \"T2.28\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"},\n\n    // T3\n    \"ints-call-for-helicopter\": {id: \"T3.1\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"},\n    \"intv-call-for-air-ambulance\": {id: \"T3.2\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"},\n\n    // T4\n    //\"required-action-obtains-vitals\": {id: \"T4\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafA\"},\n    // T5\n    //\"required-action-attempt-obtain-sample\": {id: \"T5\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafA\"},\n    // T6 \n    //\"required-action-obtain-OPQRST\": {id: \"T6\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafA\"},\n    // T7\n    \"intv-transport\": {id: \"T7\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [\"airway\", \"breathing\", \"circulation\"], afterOp: \"\", type: \"leafI\"},\n    // T8\n    \"trauma-expose\": {id: \"T8\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafA\"},\n    // T9\n    \"general-impression\": {id: \"T9\", before: [\"airway\", \"breathing\", \"circulation\"], beforeOp: \"and\", after: [], afterOp: \"\", type: \"nonLeaf\"},\n    // T10\n    \"intv-spinal-immobilization-technique-manual-c-spine\": {id: \"T10-T27\", before: [\"airway\",\"breathing\", \"circulation\", \"intv-spinal-immobilization-technique-cervical-collar\"], beforeOp: \"and\", after: [], afterOp: \"\", type: \"leafI\"},\n    // T11 was deleted per discussion with Sandy\n    // T12 is in scenario specific constraints\n    // T13 \n    \"intv-airway-patency-technique-suction-airway\": {id: \"T13\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"},\n    // T14  deleted\n    //\"intv-airway-patency-technique-suction-airway\": {id: \"14\", before: [\"intv-oropharyngeal-airway\", \"intv-nasopharyngeal-airway\"], beforeOp: \"\", after: [\"airway\"], afterOp: \"\", type: \"leafI\"},\n    // T15  deleted\n    /* \"intv-oropharyngeal-airway\": {id: \"T15a\", before: [\"intv-nasotracheal-intubation\", \"intv-orotracheal-intubation\", \"intv-sedation-assisted-intubation\", \n                                  \"intv-rapid-sequence-intubation\"], beforeOp: \"or\", after: [], afterOp: \"\", type: \"leafI\"},\n    \"intv-nasopharyngeal-airway\": {id: \"T15b\", before: [\"intv-nasotracheal-intubation\", \"intv-orotracheal-intubation\", \"intv-sedation-assisted-intubation\", \n                                  \"intv-rapid-sequence-intubation\"], beforeOp: \"or\", after: [], afterOp: \"\", type: \"leafI\"},\n */    // T16 awaiting observer interface implementation decisions on how contacting medical command will be recorded\n    // T17\n    \"intv-ventilation-technique-bag-valve-mask\": {id: \"T17\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"},\n    // T18 and T19 are constraints involving interventions that have been deleted\n    // T20 see T2\n    // T27 see T10\n    // T28\n    \"intv-oropharyngeal-airway\": {id: \"T28.1\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"}, \n    \"intv-nasopharyngeal-airway\": {id: \"T28.2\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"},\n     // T29\n    \"intv-supplemental-oxygen-device-nasal-cannula\": {id: \"T29\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"}, \n    // T30\n    \"intv-supplemental-oxygen-device-non-rebreather-mask\": {id: \"T30\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"}, \n    // T34\n    \"intv-pleural-decompression\": {id: \"T34\", before: [\"secondary-assessment\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafI\"},\n    \n    \n    \n    //used during testing\n    //state that ongoing management plan should go after the entirety of everything listed in after\n    //\"ongoing-mgmt-plan\": {id: \"c2\", before: [ ], beforeOp: \"\", after: [\"bsi\", \"scene-size-up\", \"primary-survey\", \"history-taking\",\"secondary-assessment\"], afterOp: \"and\", type: \"commonSense\"},\n    // have two second args in below because some of Observer logs have one of these ids and some have the other\n    //\"assess-injury-mechanism\": {id: \"c7\", before: [\"required-action-consider-stabilization-of-spine\", \"required-action-considers-stabilize-spine\"], beforeOp: \"or\", after: [], afterOp: \"\", type: \"commonSense\"},\n    //\"intv-control-severe-bleeding-technique-direct-pressure\": {id: \"c8\", before: [\"intv-control-severe-bleeding-technique-tourniquet\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"both\"},\n    //\"intv-control-severe-bleeding-technique-tourniquet\": {id: \"c9\", before: [\"intv-control-severe-bleeding-technique-2nd-tourniquet\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"both\"},\n     \n}\n\n//constraints that depend on whether certain conditions hold within a scenario\n//based on the scenario and the constraint ids listed under the scenario in\n//scenarioConstraintIDs, the constaints defined here with the ids for the current\n//scenario will be added to the general constraints about for temporal constraint testing\n\n// Used convention of appended -c and a one up number just to indicate it is a conditional constraint.  No software\n// requires this convention for the ids so it can be changed\n\nexport const conditionalConstraints = {\n    \"checks-pulse-rate\": {id: \"T12-c1\", before: [\"airway\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafA\"},\n    \"checks-pulse-rhythm\": {id: \"T12-c2\", before: [\"airway\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafA\"},\n    \"checks-pulse-quality\": {id: \"T12-c3\", before: [\"airway\"], beforeOp: \"\", after: [], afterOp: \"\", type: \"leafA\"}\n    \n    \n}\n\n//pre-post test problems: M2CA, B7CA, B1CA, M1CA  (need data filled out in order to grade but don't need at time of running experiments w/ students)\n//training problems: B4CA, B5CA, C5CA, SC8CP\n\n\n\n// used to simulate conditional constraints, i.e. we hardcode which conditional constraint ids as\n// defined under conditionalConstraints (above) are relevant to each scenario\n\n// although one could put global constraint ids under scenarios here, it would be redundant and may cause software\n// issues\nexport const scenarioConstraintIDs = {\n    //training\n    \"B4CA\": [],\n    \"B5CA\": [],\n    \"C5CA\": [],\n    \"SC8CP\": [\"T12-c1\"],\n    //test\n    \"B1CA\": [],\n    \"M1CA\": [], \n    \"M2CA\": [\"T12-c1\"],\n    \"B7CA\": [],\n    \n    \n    \n    \n    //\"\": [],\n    //\"\": []\n}\n\n\n//below are examples of interventions in which status should be checked.  The key intvStatusNeeded\n//is true or false.  If true it means should have requested status of this intervention.  If vitals key is\n//not empty then should have checked all of these vitals as well.  Will only check entries after an intervention\n//up until something other than an intervention check is done\n\n//Not currently issuing intervention specific reminders for what vitals need to be checked, so those are all blank right now\n//Instead doing it per scenario\nexport const intvChecks = {\n    \"intv-open-airway-method-head-tilt\": {intvStatusNeeded: true, vitalsNeeded: []},\n    \"intv-open-airway-method-modified-jaw-thrust\": {intvStatusNeeded: true, vitalsNeeded: []},\n    \"intv-airway-patency-technique-suction-airway\": {intvStatusNeeded: true, vitalsNeeded: []},\n    \"intv-manual-finger-sweep\": {intvStatusNeeded: true, vitalsNeeded: []},\n    \"intv-magill-forceps-assisted\": {intvStatusNeeded: true, vitalsNeeded: []},\n    \"intv-heimlich-maneuver\": {intvStatusNeeded: true, vitalsNeeded: []},\n    \"intv-back-blows-and-chest-thrusts\": {intvStatusNeeded: true, vitalsNeeded: []},\n    \"intv-oropharyngeal-airway\": {intvStatusNeeded: true, vitalsNeeded: []},\n    \"intv-nasopharyngeal-airway\": {intvStatusNeeded: true, vitalsNeeded: []},\n    \"intv-orotracheal-intubation\": {intvStatusNeeded: true, vitalsNeeded: []},\n    \"intv-nasotracheal-intubation\": {intvStatusNeeded: true, vitalsNeeded: []},\n    \"intv-insert-advanced-airway\": {intvStatusNeeded: true, vitalsNeeded: []},\n    \"intv-sedation-assisted-intubation\": {intvStatusNeeded: true, vitalsNeeded: []},\n    \"intv-needle-cricothyrotomy\": {intvStatusNeeded: true, vitalsNeeded: []},\n    \"intv-surgical-cricothyrotomy\": {intvStatusNeeded: true, vitalsNeeded: []},\n    \"intv-control-severe-bleeding-technique-direct-pressure\": {intvStatusNeeded: true, vitalsNeeded: []},\n    \"intv-control-severe-bleeding-technique-tourniquet\": {intvStatusNeeded: true, vitalsNeeded: []},\n    \"intv-control-severe-bleeding-technique-2nd-tourniquet\": {intvStatusNeeded: true, vitalsNeeded: []},\n    \"intv-control-severe-bleeding-technique-pack-wound-with-gauze\": {intvStatusNeeded: true, vitalsNeeded: []},\n    \"intv-control-severe-bleeding-technique-pressure-bandage\": {intvStatusNeeded: true, vitalsNeeded: []},\n    \"intv-occlusive-dressing\": {intvStatusNeeded: false, vitalsNeeded: []},\n    \"intv-pleural-decompression\": {intvStatusNeeded: true, vitalsNeeded: []},\n    \"intv-prepare-and-administer-pain-nausea-vomiting-medications\": {intvStatusNeeded: true, vitalsNeeded: []},\n    \"intv-insert-advanced-airway\": {intvStatusNeeded: true, vitalsNeeded: []},\n    \"intv-contact-medical-command\": {intvStatusNeeded: true, vitalsNeeded: []},\n\n    // in general don't need to list if intvStatusNeeded is false but left these in in case want to use the\n    // vitalsNeeded field for these later on to do the reminder intervention by intervention\n    //\"intv-supplemental-oxygen-device-nasal-cannula\": {intvStatusNeeded: false, vitalsNeeded: []},\n    //\"intv-supplemental-oxygen-device-non-rebreather-mask\": {intvStatusNeeded: false, vitalsNeeded: []},\n    //\"intv-ventilation-technique-bag-valve-mask\": {intvStatusNeeded: false, vitalsNeeded: []},\n    \n \n    //\"\": {intvStatusNeeded: true, vitalsNeeded: []},  \n    //\"\": {intvStatusNeeded: true, vitalsNeeded: []},\n    \n        \n    }\n\n// this is the name of the assessment step or phase that will use for inserting global vitals check feedback\n// use one or the other constants below but not both\n// Use this one for inserting in a phase header\nexport const vitalsCheckFeedbackLabel = undefined\n//= \"Ongoing Management & Reassessment\"\n// Use this one for inserting in a step\nexport const vitalsCheckFeedbackID = \"reassess-vital-signs\"\n\n\nexport const vitalChecks = {\n    //pretraining\n    \"B3NA (practice)\": [],\n    //training\n    \"B4CA\": [\"P\", \"R\", \"SpO2\"],\n    \"B5CA\": [\"BP\", \"P\", \"R\", \"SpO2\"],\n    \"C5CA\": [\"BP\", \"P\", \"R\", \"SpO2\"],\n    \"SC8CP\": [\"BP\", \"P\", \"R\", \"SpO2\", \"ETCO2\"],\n    //test\n    \"B1CA\": [\"BP\", \"P\", \"R\", \"SpO2\"],\n    \"M1CA\": [\"BP\", \"P\", \"R\", \"SpO2\", \"ETCO2\"],\n    \"M2CA\": [\"BP\", \"P\", \"R\", \"SpO2\", \"ETCO2\"],\n    \"B7CA\": [\"BP\", \"P\", \"R\", \"SpO2\"],     \n}\n\n//the two below expand the above and could eliminate the above\n//need to write the software to handle these two structures instead of the above\nexport const globalReassessmentKn = {\n    //pretraining\n    \"B3NA (practice)\": {vitalLabels: [], requiredVitals: \"\", systems: \"\", criticalInterventions: \"\"},\n    //training\n    \"B4CA\": {vitalLabels: [\"P\", \"R\", \"SpO2\"], requiredVitals: \"P, R, and SpO2\", systems: \"breathing\", criticalInterventions: \"high flow O2 via nasal cannula or NRM\"},\n    \"B5CA\": {vitalLabels: [\"BP\", \"P\", \"R\", \"SpO2\"], requiredVitals: \"BP, P, R, and SpO2\", systems: \"breathing\", criticalInterventions: \"high flow O2 with NRM or assisted BVM ventilation, needle decompression and an occlusive dressing\"},\n    \"C5CA\": {vitalLabels: [\"BP\", \"P\", \"R\", \"SpO2\"], requiredVitals: \"BP, P, R, and SpO2\", systems: \"circulation and breathing, \", criticalInterventions: \"direct pressure and a tourniquet, a basic adjunct, BVM ventilations with high-flow O2, and IV fluids en route to maintain SBP >= 90\"},\n    \"SC8CP\": {vitalLabels: [\"BP\", \"P\", \"R\", \"SpO2\", \"ETCO2\"], requiredVitals: \"BP, P, R, SpO2 and ETCO2\", systems: \"airway and breathing\", criticalInterventions: \"an airway maneuver, suctioning, intubation, and BVM ventilation with high concentration O2\"},\n    //test\n    \"B1CA\": {vitalLabels: [\"BP\", \"P\", \"R\", \"SpO2\"], requiredVitals: \"BP, P, R, and SpO2\", systems: \"breathing\", criticalInterventions: \"NPA, BVM ventilation with high flow O2, tension pneumothorax, and needle decompression\"},\n    \"M1CA\": {vitalLabels: [\"BP\", \"P\", \"R\", \"SpO2\", \"ETCO2\"], requiredVitals: \"BP, P, R, SpO2 and ETCO2\", systems: \"airway and circulation\", criticalInterventions: \"occlusive dressing on neck wound, basic airway maneuver, an NPA, intubation, and BVM ventilation with high flow O2\"},\n    \"M2CA\": {vitalLabels: [\"BP\", \"P\", \"R\", \"SpO2\", \"ETCO2\"], requiredVitals: \"BP, P, R, SpO2 and ETCO2\", systems: \"airway, breathing and circulation\", criticalInterventions: \"direct pressure, a tourniquet, basic airway maneuver, intubation, an NPA, BVM ventilation with high flow O2, a large bore IV and IV fluids en route to maintain SBP >= 90\"},\n    \"B7CA\": {vitalLabels: [\"BP\", \"P\", \"R\", \"SpO2\"], requiredVitals: \"BP, P, R, and SpO2\", systems: \"breathingd\", criticalInterventions: \"supplemental O2 via NRM, pleural decompression and an occlusive dressing to the entrance wound \"},\n}\n\nexport const globalReassessmentFeedback = {\n    good: \"This patient had several abnormal baseline vitals—most notably @requiredVitals +bos  The patient needed @criticalInterventions +bos You correctly checked for improvement in these vitals to ensure that the patient's @systems was adequately managed +eos\",\n    errors: \"This patient had several abnormal baseline vitals—most notably @requiredVitals +bos  The patient needed @criticalInterventions +bos You should have checked for improvement in all of these vitals to ensure that the patient's @systems was adequately managed +bos You missed checking @notDone +eos\",\n    absent: \"This patient had several abnormal baseline vitals—most notably @requiredVitals +bos  The patient needed @criticalInterventions +bos You should have checked for improvement in these vitals to ensure that the patient's @systems was adequately managed +eos\"\n}\n\n\n//vitals that can be inferred to have been taken due to an\n//assessment step.  However, for assessment steps the findings\n//are not actual taking of vitals but a quick subjective impression\n//at top level [] read as an \"or\"\n//at next level [] read as an \"and\"\n// no longer fully in use.  Only indicates which id relates to which vital\n// at this point\nexport const vitalsTakenDueToAssessmentSteps = {\n    \"GCS\": [//[\"assess-loc\"], [\"required-action-obtains-vitals\"],\n    [\"request-vitals-GCS\"]],\n    \"Pain\": [//[\"assess-loc\"], [\"required-action-obtains-vitals\"], \n    [\"request-vitals-Pain\"]],\n    \"R\": [//[\"breathing-checks-rate\", \"breathing-checks-rhythm\", \"breathing-checks-quality\"], [\"required-action-obtains-vitals\"], \n    [\"request-vitals-R\"]],\n    \"P\": [//[\"checked-carotid-pulse\", \"checks-pulse-rate\", \"checks-pulse-rhythm\", \"checks-pulse-quality\"], [\"checked-radial-pulse\", \"checks-pulse-rate\", \"checks-pulse-rhythm\", \"checks-pulse-quality\"],[\"required-action-obtains-vitals\"], \n    [\"request-vitals-P\"]],\n    \"Skin\": [//[\"checks-skin-color\", \"checks-skin-temperature\", \"checks-skin-condition\"], [\"required-action-obtains-vitals\"], \n    [\"request-vitals-Skin\"]],\n    \"BP\": [//[\"required-action-obtains-vitals\"], \n    [\"request-vitals-BP\"]],\n    \"Glucose\": [//[\"required-action-obtains-vitals\"], \n    [\"request-vitals-Glucose\"]],\n    \"ETCO2\": [//[\"required-action-obtains-vitals\"], \n    [\"request-vitals-ETCO2\"]],\n    \"SpO2\": [//[\"required-action-obtains-vitals\"], \n    [\"request-vitals-Spo2\"]],\n    \"Temp\": [//[\"required-action-obtains-vitals\"], \n    [\"request-vitals-Temp\"]],\n    }\n\n//per scenario sets of interventions that satisfy completion of critical actions for that scenario\n// to update vitals wholesale\nexport const criticalInterventions = {\n    //pretraining scenario\n    \"B3NA (practice)\": [],\n    \n    //training scenarios\n    B4CA: [[\"intv-supplemental-oxygen-device-nasal-cannula\"],[\"intv-supplemental-oxygen-device-non-rebreather-mask\"]],\n    B5CA: [[\"intv-supplemental-oxygen-device-non-rebreather-mask\",\"intv-occlusive-dressing\", \"intv-pleural-decompression\"]],\n    C5CA: [[\"intv-control-severe-bleeding-technique-direct-pressure\", \"intv-control-severe-bleeding-technique-tourniquet\",\n            \"intv-nasopharyngeal-airway\", \"intv-ventilation-technique-bag-valve-mask\", \"intv-control-shock-technique-administer-iv-boluses\"]],\n    SC8CP: [[\"intv-open-airway-method-modified-jaw-thrust\", \"intv-airway-patency-technique-suction-airway\", \"intv-oropharyngeal-airway\", \"intv-orotracheal-intubation\", \"intv-ventilation-technique-bag-valve-mask\"],\n            [\"intv-open-airway-method-modified-jaw-thrust\", \"intv-airway-patency-technique-suction-airway\", \"intv-nasopharyngeal-airway\", \"intv-orotracheal-intubation\", \"intv-ventilation-technique-bag-valve-mask\"]\n    ],\n    //test scenarios\n    B1CA: [[\"intv-nasopharyngeal-airway\", \"intv-ventilation-technique-bag-valve-mask\", \"intv-pleural-decompression\"]],\n    M1CA: [[\"intv-occlusive-dressing\", \"intv-control-shock-technique-administer-iv-boluses\", \n           \"intv-orotracheal-intubation\", \"intv-ventilation-technique-bag-valve-mask\"],\n           [\"intv-occlusive-dressing\", \"intv-control-shock-technique-administer-iv-boluses\", \n           \"intv-sedated-intubation\", \"intv-ventilation-technique-bag-valve-mask\"]],\n    M2CA: [[\"intv-control-severe-bleeding-technique-direct-pressure\", \"intv-control-severe-bleeding-technique-tourniquet\",\n            \"intv-open-airway-method-modified-jaw-thrust\", \"intv-orotracheal-intubation\",\n            \"intv-ventilation-technique-bag-valve-mask\", \"intv-control-shock-technique-administer-iv-boluses\"],\n            [\"intv-control-severe-bleeding-technique-direct-pressure\", \"intv-control-severe-bleeding-technique-tourniquet\",\n            \"intv-open-airway-method-modified-jaw-thrust\", \"intv-sedated-intubation\",\n            \"intv-ventilation-technique-bag-valve-mask\", \"intv-control-shock-technique-administer-iv-boluses\"]],\n    B7CA: [[\"intv-supplemental-oxygen-device-non-rebreather-mask\", \"intv-pleural-decompression\", \"intv-occlusive-dressing\"]]\n}\n\n//could create a set of default good values but sounds like will\n//want to customize the descriptive text per scenario (and may not\n//always want the completely good value as an effect)\n\n\n//each scenario entry is a list of rules\n//each rule is an object with the ands field being any other interventions that must have also been done to\n//qualify doing the update in field updates.\n//the updates field is a list of pairs of assessment ids and the value to update in that assessments findings field\n\n//Note that each member of the ands field has its own set of rules in this table.  Only one of the rules will \"fire\"\n//but is repeated because we don't know the order in which the interventions may be done\n\n//rule template\n/*\n[\n    {ands: [\"\"],\n    updates: [[\"\",\"\"]]}\n], \n*/\n\n\n//what assessment findings to update due to interventions\n//rules per table in document Updating.Assessment.Values.in.Response.to.Interventions-9-24\nexport const intvStatusRules = {\n    //pretrainting scenario\n   \n    \"B3NA (practice)\": [],  //has no update rules\n\n\n    //training scenarios\n\n    //{ands: [], updates: []},\n    //{id: \"\", tab: [\"\"], label: \"\", val: \"\"},\n    B4CA: \n    [\n        {ands: [\"intv-supplemental-oxygen-device-nasal-cannula\"],\n         updates: [{id: \"\", tab: [\"B\"], label: \"rate, rhythm, quality\", val: \"less rapid\"},]},\n\n        {ands: [\"intv-supplemental-oxygen-device-non-rebreather-mask\"],\n         updates: [{id: \"\", tab: [\"B\"], label: \"rate, rhythm, quality\", val: \"less rapid\"},]}\n    ],\n\n    //{ands: [], updates: []},\n    //{id: \"\", tab: [\"\"], label: \"\", val: \"\"},\n    B5CA: \n    \n    [\n        {ands: [\"intv-supplemental-oxygen-device-non-rebreather-mask\", \"intv-pleural-decompression\", \"intv-occlusive-dressing\"],\n        //first one where id is \"\", will only update tab B, others will update in tabs indicated and in secondary assessments under id\n        updates: [{id: \"\", tab: [\"B\"], label: \"Rate, rhythm, quality\", val: \"Regular\"},\n                  {id: \"assessment-check-breath-sounds\", tab: [\"B\"], label: \"Lung sounds\", val: \"Asymmetric but increased LS on right\"},\n                  {id: \"inspects-right-arm-pulse\", tab: [\"C\"], label: \"Pulse\", val: \"Rate Normal; strong radial pulse\"},\n                  {id: \"inspects-left-arm-pulse\", tab: [], label: \"Pulse\", val: \"Rate Normal; strong radial pulse\"}]},\n\n        {ands: [\"intv-supplemental-oxygen-device-nasal-cannula\", \"intv-pleural-decompression\", \"intv-occlusive-dressing\"],\n        //first one where id is \"\", will only update tab B, others will update in tabs indicated and in secondary assessments under id\n        updates: [{id: \"\", tab: [\"B\"], label: \"Rate, rhythm, quality\", val: \"Regular\"},\n                  {id: \"assessment-check-breath-sounds\", tab: [\"B\"], label: \"Lung sounds\", val: \"Asymmetric but increased LS on right\"},\n                  {id: \"inspects-right-arm-pulse\", tab: [\"C\"], label: \"Pulse\", val: \"Rate Normal; strong radial pulse\"},\n                  {id: \"inspects-left-arm-pulse\", tab: [], label: \"Pulse\", val: \"Rate Normal; strong radial pulse\"}]},\n   \n        {ands: [\"intv-occlusive-dressing\"],\n         updates: [{id: \"inspects-palpates-anterior-thorax\", tab: [\"C\"], label: \"Bleeding\", val: \"Occlusive dressing covers wound\"}]}   \n    ],\n        \n    //{ands: [], updates: []},\n    //{id: \"\", tab: [\"\"], label: \"\", val: \"\"},\n    C5CA: \n    \n    [\n        {ands: [\"intv-ventilation-technique-bag-valve-mask\"],\n         updates: [{id: \"\" ,tab: [\"B\"] , label: \"Rate, rhythm, quality\", val: \"Breaths assisted; spontaneous breaths shallow\"}]},\n\n        {ands: [\"intv-control-severe-bleeding-technique-direct-pressure\", \"intv-control-severe-bleeding-technique-tourniquet\"],\n        updates: [{id: \"inspects-left-leg-injury\", tab: [\"C\"], label: \"Bleeding\", val: \"Bleeding stopped\"}]},\n    ],\n\n    \n    //{ands: [], updates: []},\n    //{id: \"\", tab: [\"\"], label: \"\", val: \"\"},\n    SC8CP:  \n\n    [\n        //rule 1\n        {ands: [\"intv-airway-patency-technique-suction-airway\"], \n         updates: [{id: \"\", tab: [\"A\"], label: \"Clarity\",val: \"Clear of vomit and water\"},\n                   {id: \"inspects-mouth\", tab: [], label: \"Clarity\",val: \"Clear of vomit and water\"},\n                   {id: \"assessment-check-breath-sounds\", tab: [\"B\"], label: \"Lung sounds\", val: \"No gurgling, rhonchi bilaterally\"},]},\n        \n        {ands: [\"intv-open-airway-method-modified-jaw-thrust\", \"intv-airway-patency-technique-suction-airway\", \"intv-ventilation-technique-bag-valve-mask\", \"intv-nasopharyngeal-airway\"], \n        updates: [{id: \"\", tab: [\"A\"], label: \"Patency\",val: \"Clear and secured\"}, \n                  {id: \"\", tab: [\"B\"], label: \"Rate, rhythm, quality\", val: \"Respirations assisted, gurgling stopped\"},\n                  {id: \"\", tab: [\"C\"], label: \"Pulse\", val: \"Regular, strong\"},]},\n\n        \n        {ands: [\"intv-open-airway-method-modified-jaw-thrust\", \"intv-airway-patency-technique-suction-airway\", \"intv-ventilation-technique-bag-valve-mask\", \"intv-oropharyngeal-airway\" ], \n        updates: [{id: \"\", tab: [\"A\"], label: \"Patency\",val: \"Clear and secured\"}, \n                  {id: \"\", tab: [\"B\"], label: \"Rate, rhythm, quality\", val: \"Respirations assisted, gurgling stopped\"},\n                  {id: \"\", tab: [\"C\"], label: \"Pulse\", val: \"Regular, strong\"},]},\n\n        {ands: [\"intv-open-airway-method-modified-jaw-thrust\", \"intv-airway-patency-technique-suction-airway\", \"intv-orotracheal-intubation\", \"intv-nasopharyngeal-airway\"], \n        updates: [{id: \"\", tab: [\"A\"], label: \"Patency\",val: \"Clear and secured\"}, \n                    {id: \"\", tab: [\"B\"], label: \"Rate, rhythm, quality\", val: \"Respirations assisted, gurgling stopped\"},\n                    {id: \"\", tab: [\"C\"], label: \"Pulse\", val: \"Regular, strong\"},\n                    {id: \"checks-skin\", tab: [\"C\"], label: \"Skin\", val: \"Pale, cool\"},]},\n                      \n                              \n        {ands: [\"intv-open-airway-method-modified-jaw-thrust\", \"intv-airway-patency-technique-suction-airway\", \"intv-orotracheal-intubation\", \"intv-oropharyngeal-airway\" ], \n        updates: [{id: \"\", tab: [\"A\"], label: \"Patency\",val: \"Clear and secured\"}, \n                    {id: \"\", tab: [\"B\"], label: \"Rate, rhythm, quality\", val: \"Respirations assisted, gurgling stopped\"},\n                    {id: \"\", tab: [\"C\"], label: \"Pulse\", val: \"Regular, strong\"},\n                    {id: \"checks-skin\", tab: [\"C\"], label: \"Skin\", val: \"Pale, cool\"}]},\n\n        {ands: [\"intv-orotracheal-intubation\"],\n         updates: [{id: \"\", tab: [\"C\"], label: \"Pulse\", val: \"Regular, strong\"},\n                  {id: \"inspects-right-arm-pulse\", tab: [], label: \"Pulse\", val: \"Regular, strong\"},           \n                  {id: \"inspects-left-arm-pulse\", tab: [], label: \"Pulse\", val: \"Regular, strong\"},\n                  {id: \"inspects-right-leg-pulse\", tab: [], label: \"Pulse\", val: \"Regular, strong\"},\n                  {id: \"inspects-left-leg-pulse\", tab: [], label: \"Pulse\", val: \"Regular, strong\"},]},\n\n        {ands: [\"intv-nasotracheal-intubation\"],\n        updates: [{id: \"\", tab: [\"C\"], label: \"Pulse\", val: \"Regular, strong\"},\n                  {id: \"inspects-right-arm-pulse\", tab: [], label: \"Pulse\", val: \"Regular, strong\"},           \n                  {id: \"inspects-left-arm-pulse\", tab: [], label: \"Pulse\", val: \"Regular, strong\"},\n                  {id: \"inspects-right-leg-pulse\", tab: [], label: \"Pulse\", val: \"Regular, strong\"},\n                  {id: \"inspects-left-leg-pulse\", tab: [], label: \"Pulse\", val: \"Regular, strong\"},]},\n    ],\n\n    //test scenarios\n\n    //{ands: [], updates: []},\n    //{id: \"\", tab: [\"\"], label: \"\", val: \"\"},\n    B1CA: \n\n    [\n        {ands: [\"intv-pleural-decompression\"],\n        updates: [{id: \"assess-loc\", tab: [\"General\"], label: \"LOC\", val: \"Speaks more comfortably\"},\n                  {id: \"assessment-check-breath-sounds\", tab: [\"B\"], label: \"Lung sounds\", val: \"Equal LS bilaterally\"},\n                  {id: \"assessment-JVD\", tab: [\"C\"], label: \"JVD\", val: \"No JVD\"},\n                  {id: \"\", tab: [\"B\"], label: \"Rate, rhythm, quality\", val: \"Less rapid, regular, equal LS bilaterally\"},\n                  {id: \"inspects-right-arm-pulse\", tab: [\"C\"], label: \"Pulse\", val: \"Less rapid, regular, strong \"},\n                  {id: \"inspects-left-arm-pulse\", tab: [], label: \"Pulse\", val: \"Less rapid, regular, strong \"}]},\n\n        {ands: [\"intv-pleural-decompression\", \"intv-ventilation-technique-bag-valve-mask\"], \n        updates: [{id: \"checks-skin\", tab: [\"C\"], label: \"Skin\", val: \"Pale, diaphoretic\"},]},\n    ],\n\n    //{ands: [], updates: []},\n    //{id: \"\", tab: [\"\"], label: \"\", val: \"\"},\n    B7CA: \n\n        [\n            {ands: [\"intv-supplemental-oxygen-device-non-rebreather-mask\", \"intv-pleural-decompression\"],\n            updates: [{id: \"assess-loc\", tab: [\"General\"], label: \"LOC\", val: \"More comfortable\"},\n                      {id: \"\", tab: [\"B\"], label: \"Rate, rhythm, quality\", val: \"Less rapid\"},\n                      {id: \"checks-skin\", tab: [\"C\"], label: \"Skin\", val: \"Pale, diaphoretic\"},]},\n\n            {ands: [\"intv-pleural-decompression\"], \n            updates: [{id: \"assessment-check-breath-sounds\", tab: [\"B\"], label: \"Lung sounds\", val: \"LS present but diminished at the right base\"},\n                      {id: \"inspects-right-arm-pulse\", tab: [\"C\"], label: \"Pulse\", val: \"Less rapid, regular\"},\n                      {id: \"inspects-left-arm-pulse\", tab: [], label: \"Pulse\", val: \"Less rapid, regular\"},\n                      {id: \"inspects-right-leg-pulse\", tab: [], label: \"Pulse\", val: \"Less rapid, regular\"},\n                      {id: \"inspects-left-leg-pulse\", tab: [], label: \"Pulse\", val: \"Less rapid, regular\"}]},\n\n            {ands: [\"intv-occlusive-dressing\"], \n            updates: [{id: \"inspects-palpates-anterior-thorax\", tab: [\"C\"], label: \"Bleeding\", val: \"Occlusive dressing over GSW\"},]},\n        ],\n   \n    //{ands: [], updates: []},\n    //{id: \"\", tab: [\"\"], label: \"\", val: \"\"},\n    M1CA: \n\n        [   {ands: [\"intv-sedation-assisted-intubation\"],\n             updates: [{id: \"assess-loc\", tab: [\"General\"], label: \"LOC\", val: \"Sedated\"},\n                       {id: \"\", tab: [\"A\"], label: \"Patency\", val: \"Secured with ET tube in place\"},\n                       {id: \"\", tab: [\"B\"], label: \"Rate, rhythm, quality\", val: \"Assisted breaths\"},\n                       {id: \"assessment-check-breath-sounds\", tab: [\"B\"], label: \"Lung sounds\", val: \"No stridor, LS equal and clear\"},]},\n\n            // added because didn't implement ors and don't want the one below to fire and wipe out the one above\n            {ands: [\"intv-sedation-assisted-intubation\", \"intv-ventilation-technique-bag-valve-mask\"],\n            updates: [{id: \"assess-loc\", tab: [\"General\"], label: \"LOC\", val: \"Sedated\"},\n                        {id: \"\", tab: [\"A\"], label: \"Patency\", val: \"Secured with ET tube in place\"},\n                        {id: \"\", tab: [\"B\"], label: \"Rate, rhythm, quality\", val: \"Assisted breaths\"},\n                        {id: \"assessment-check-breath-sounds\", tab: [\"B\"], label: \"Lung sounds\", val: \"No stridor, LS equal and clear\"},]},\n          \n          \n            {ands: [\"intv-ventilation-technique-bag-valve-mask\"],\n            updates: [{id: \"assess-loc\", tab: [\"General\"], label: \"LOC\", val: \"Becoming more alert\"},]},\n          \n\n            {ands: [\"intv-sedation-assisted-intubation\", \"intv-control-shock-technique-administer-iv-boluses\"],\n            updates: [{id: \"inspects-right-arm-pulse\", tab: [\"C\"], label: \"Pulse\", val: \"Weak radial pulse\"},\n                      {id: \"inspects-left-arm-pulse\", tab: [], label: \"Pulse\", val: \"Weak radial pulse\"}]},\n\n            {ands: [\"intv-ventilation-technique-bag-valve-mask\", \"intv-control-shock-technique-administer-iv-boluses\"],\n            updates: [{id: \"inspects-right-arm-pulse\", tab: [\"C\"], label: \"Pulse\", val: \"Weak radial pulse\"},\n                      {id: \"inspects-left-arm-pulse\", tab: [], label: \"Pulse\", val: \"Weak radial pulse\"}]},\n        ], \n        \n        \n    //{ands: [], updates: []},\n    //{id: \"\", tab: [\"\"], label: \"\", val: \"\"},\n    M2CA: \n\n        [  {ands: [\"intv-sedation-assisted-intubation\"], \n            updates: [{id: \"assess-loc\", tab: [\"General\"], label: \"LOC\", val: \"Sedated\"},\n                      {id: \"\", tab: [\"B\"], label: \"Rate, rhythm, quality\", val: \"Assisted breaths\"},\n                      {id: \"checks-skin\", tab: [\"C\"], label: \"Skin\", val: \"Pale, diaphoretic\"},]},\n\n\n           {ands: [\"intv-control-severe-bleeding-technique-direct-pressure\", \"intv-control-severe-bleeding-technique-tourniquet\"], \n            updates: [{id: \"assess-major-bleeding\", tab: [\"C\"], label: \"Bleeding\", val: \"No further bleeding\"},\n                      {id: \"inspects-right-leg-injury\", tab: [], label: \"Bleeding\", val: \"No further bleeding\"},]},\n\n        ],  \n    \n    }\n\n\n//this section defines intervention status changes per scenario\n//first define categories of states\nexport const airwayOpen = \"airwayOpen\"\nexport const airwayPatent = \"airwayPatent\"\nexport const airwayAdjunct = \"airwayAdjunct\"\nexport const airwaySecured = \"airwaySecured\"\nexport const intubation = \"intubation\"\nexport const airwayProcedure = \"airwayProcedure\"\nexport const circulationPressure = \"circulationPressure\"\nexport const circulationTourniquet = \"circulationTourniquet\"\nexport const breathSounds = \"breathSounds\"\nexport const medEffects = \"medEffects\"\nexport const medCommandApproval = \"medCommandApproval\"\n\n//newly added 10/7/22\nexport const oxygenated = \"oxygenated\"\nexport const decompression = \"decompression\"\nexport const medAdmin = \"medAdmin\"\nexport const receivingFacilityReply= \"receivingFacilityReply\"\nexport const shockWarming = \"shockWarming\"\nexport const ivPlacement = \"ivPlacement\"\nexport const patientPositionPlacement = \"patientPositionPlacement\"\nexport const airAmbulance = \"airAmbulance\"\nexport const  woundState = \"woundState\"\nexport const notAllowed = \"notAllowed\"\nexport const breathingAssisted = \"breathingAssisted\"\nexport const inRoute = \"inRoute\"\nexport const cSpineCollar = \"cSpineCollar\"\nexport const spineStable = \"spineStable\"\nexport const injuryStable = \"injuryStable\"\nexport const  onStretcher = \"onStretcher\"\nexport const amputated = \"amputated\"\nexport const fracture = \"fracture\"\n\n\n//export const  = \"\"\n\n\nexport const good = \"good\"\nexport const neutral = \"neutral\"\nexport const bad = \"bad\"\n\n//define for each state categories the description to use for an intervention that results\n//in a good, bad or neutral change of state relative to some unknown initial state\nexport const interventionStates = Object.freeze({\n    airwayOpen: {good: \"airway open\", neutral: \"airway open\", bad: \"no change\"},\n    airwayPatent: {good: \"airway cleared\", neutral: \"no change\", bad: \"no change\"},\n    airwayAdjunct: {good: \"accepted, airway secured\", neutral: \"accepted, airway secured\", bad: \"rejected\"},\n    airwaySecured: {good: \"airway secured\", neutral: \"airway secured\", bad: \"airway not secured\"},\n    intubation: {good: \"tube properly placed, airway secured, bilateral lung sounds, no gastric sounds\",\n                 neutral: \"tube properly placed, airway secured, bilateral lung sounds, no gastric sounds\",\n                 bad: \"tube improperly placed\"},\n    airwayProcedure: {good: \"successful, airway secured, chest rise and fall present\",\n                      neutral: \"successful, airway secured, chest rise and fall present\",\n                      bad: \"unsuccessful\"},\n    oxygenated: {good: \"patient oxygenated\", neutral: \"patient oxygenated\", bad: \"patient not oxygenated\"},\n    circulationPressure: {good: \"bleeding slowed\", neutral: \"no change\", bad: \"no change\"},\n    circulationTourniquet: {good: \"bleeding slowed, pulse absent\", neutral: \"no change in bleeding, pulse absent\", bad: \"no change in bleeding, pulse present\"},\n    breathSounds: {good: \"breath sounds bilateral\", neutral: \"no change\", bad: \"no change\"},\n    decompression: {good: \"heard a rush of air\", neutral: \"nothing heard\", bad: \"nothing heard\"},\n    medEffects: {good: \"medication taking effect\", neutral: \"no change\", bad: \"no change\"},\n    medAdmin: {good: \"meds administered\", neutral: \"meds administered\", bad: \"meds not administered\"},\n    medCommandApproval: {good: \"medication request approved\", neutral: \"medication request not received\", bad: \"medication request denied\"},\n    receivingFacilityReply: {good: \"report received\", neutral: \"report received\", bad: \"report received\"},\n    shockWarming: {good: \"patient warmer\", neutral: \"patient warmer\", bad: \"patient not warmer\"},\n    ivPlacement: {good: \"properly placed\", neutral: \"properly placed\", bad: \"improperly placed\"}, \n    patientPositionPlacement: {good: \"patient in intended position\", neutral: \"patient in intended position\", bad: \"patient not in intended position\"},\n    airAmbulance: {good: \"STAT MedEvac on the way\", neutral: \"STAT MedEvac on the way\", bad: \"STAT MedEvac not available\"},\n    woundState: {good: \"wound covered\", neutral: \"wound covered\", bad: \"wound not covered\"},\n    notAllowed: {good: \"not in EMT-P scope of practice\", neutral: \"not in EMT-P scope of practice\", bad: \"not in EMT-P scope of practice\"},\n    breathingAssisted: {good: \"breathing assisted\", neutral: \"breathing assisted\", bad: \"breathing not assisted\"},\n    inRoute: {good: \"en route to hospital\", neutral: \"en route to hospital\", bad: \"not en route to hospital\"},\n    cSpineCollar: {good: \"collar properly placed\", neutral: \"collar properly placed\", bad: \"collar improperly placed\"},\n    spineStable: {good: \"head and neck stablized\", neutral: \"head and neck stablized\", bad: \"head and neck not stablized\"},\n    injuryStable: {good: \"injury stablized\", neutral: \"injury stablized\", bad: \"injury not stablized\"},\n    onStretcher: {good: \"patient on stretcher\", neutral: \"patient not on stretcher\", bad: \"patient not on stretcher\"},\n    amputated: {good: \"severed part ready for transport\", neutral: \"not Found\", bad: \"not Found\"},\n    fracture: {good: \"fracture stablized\", neutral: \"fracture not stablized\", bad: \"fracture not stablized\"},\n    //: {good: \"\", neutral: \"\", bad: \"\"},\n\n    \n               \n})\n\n// The actual \"rules\" for what update to make per intervention status values per scenario\n\n// - good if the intervention should be done to change a bad initial patient status (but doesn't mean it is the correct one to do) \n//   or the initial patient status is already fine (latter could be coded as neutral instead), \n// - bad if the intervention can effect a bad initial patient status but would not change it in this case or if it won't work for other reasons, (this one \n//   could be a problem rule of thumb if e.g. student applied a tourniquet and then applied direct pressure, might be safer to use neutral in some cases)\n// - neutral if initial patient status is bad and this intervention would have no effect on the patient status\n//   or if it is not indicated according to initial patient status (i.e. status is fine so doing this would not change the status)\nexport const intvResults = Object.freeze({\n  \"intv-open-airway-method-head-tilt\": {type: airwayOpen, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: neutral, SC8CP: neutral, B1CA: neutral, M1CA: neutral, M2CA: neutral, B7CA: neutral},\n  \"intv-open-airway-method-modified-jaw-thrust\": {type: airwayOpen, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: neutral, SC8CP: good, B1CA: neutral, M1CA: good, M2CA: good, B7CA: neutral},\n  \n  \"intv-airway-patency-technique-suction-airway\": {type: airwayPatent, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: neutral, SC8CP: good, B1CA: neutral, M1CA: neutral, M2CA: neutral, B7CA: neutral},\n  \"intv-manual-finger-sweep\": {type: airwayPatent, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: neutral, SC8CP: neutral, B1CA: neutral, M1CA: neutral, M2CA: neutral, B7CA: neutral},\n  \"intv-magill-forceps-assisted\": {type: airwayPatent, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: neutral, SC8CP: neutral, B1CA: neutral, M1CA: neutral, M2CA: neutral, B7CA: neutral},\n  \"intv-heimlich-maneuver\": {type: airwayPatent, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: neutral, SC8CP: neutral, B1CA: neutral, M1CA: neutral, M2CA: neutral, B7CA: neutral},\n  \"intv-back-blows-and-chest-thrusts\": {type: airwayPatent, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: neutral, SC8CP: neutral, B1CA: neutral, M1CA: neutral, M2CA: neutral, B7CA: neutral},\n  \n  //used bad for C5CA because assumed gag reflex would lead to rejection of oropharyngeal airway\n  \"intv-oropharyngeal-airway\": {type: airwayAdjunct, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: bad, SC8CP: good, B1CA: neutral, M1CA: neutral, M2CA: neutral, B7CA: neutral},\n  \"intv-nasopharyngeal-airway\": {type: airwayAdjunct, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: good, SC8CP: good, B1CA: good, M1CA: good, M2CA: good, B7CA: neutral},\n  \n  \"intv-orotracheal-intubation\": {type: intubation, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: bad, SC8CP: good, B1CA: neutral, M1CA: good, M2CA: good, B7CA: neutral},\n  \"intv-nasotracheal-intubation\": {type: intubation,  \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: neutral, SC8CP: good, B1CA: neutral, M1CA: good, M2CA: good, B7CA: neutral},\n  \"intv-insert-advanced-airway\": {type: airwaySecured, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: good, SC8CP: good, B1CA: neutral, M1CA: good, M2CA: good, B7CA: good},\n\n  \"intv-rapid-sequence-intubation\": {type: notAllowed, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: neutral, SC8CP: neutral, B1CA: neutral, M1CA: neutral, M2CA: neutral, B7CA: neutral},\n  \"intv-sedation-assisted-intubation\": {type: intubation, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: neutral, SC8CP: good, B1CA: neutral, M1CA: neutral, M2CA: good, B7CA: neutral},\n  \n  \"intv-needle-cricothyrotomy\": { type: airwayOpen, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: neutral, SC8CP: neutral, B1CA: neutral, M1CA: neutral, M2CA: neutral, B7CA: neutral},\n  \"intv-surgical-cricothyrotomy\": {type: airwayOpen, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: neutral, SC8CP: neutral, B1CA: neutral, M1CA: neutral, M2CA: neutral, B7CA: neutral},\n  \n  \"intv-supplemental-oxygen-device-nasal-cannula\": {type: oxygenated, \"B3NA (practice)\": neutral, B4CA: good, B5CA: good, C5CA: neutral, SC8CP: neutral, B1CA: neutral, M1CA: neutral, M2CA: neutral, B7CA: neutral},\n  \"intv-supplemental-oxygen-device-non-rebreather-mask\": {type: oxygenated, \"B3NA (practice)\": neutral, B4CA: good, B5CA: good, C5CA: neutral, SC8CP: neutral, B1CA: neutral, M1CA: neutral, M2CA: neutral, B7CA: good},\n  \"intv-ventilation-technique-bag-valve-mask\": {type: breathingAssisted, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: good, SC8CP: good, B1CA: good, M1CA: good, M2CA: good, B7CA: neutral},\n  \"intv-control-severe-bleeding-technique-direct-pressure\": {type: circulationPressure, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: bad, SC8CP: neutral, B1CA: neutral, M1CA: neutral, M2CA: bad, B7CA: neutral},\n  \"intv-control-severe-bleeding-technique-tourniquet\": {type: circulationTourniquet, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: good, SC8CP: neutral, B1CA: neutral, M1CA: neutral, M2CA: good, B7CA: neutral},\n  \"intv-control-severe-bleeding-technique-2nd-tourniquet\": {type: circulationTourniquet, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: neutral, SC8CP: neutral, B1CA: neutral, M1CA: neutral, M2CA: neutral, B7CA: neutral},\n  \"intv-control-severe-bleeding-technique-pack-wound-with-gauze\": {type: circulationPressure, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: neutral, SC8CP: neutral, B1CA: neutral, M1CA: neutral, M2CA: neutral, B7CA: neutral},\n  \"intv-control-severe-bleeding-technique-pressure-bandage\": {type: circulationPressure, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: neutral, SC8CP: neutral, B1CA: neutral, M1CA: neutral, M2CA: neutral, B7CA: neutral},\n  \"intv-control-severe-bleeding-technique-load-and-go\": {type: inRoute, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: neutral, SC8CP: neutral, B1CA: neutral, M1CA: neutral, M2CA: neutral, B7CA: neutral},\n  \"intv-control-shock-technique-keep-patient-warm\": {type: shockWarming, \"B3NA (practice)\": good, B4CA: good, B5CA: good, C5CA: good, SC8CP: good, B1CA: good, M1CA: good, M2CA: good, B7CA: good},\n  \"intv-control-shock-technique-place-patient-supine-position\": {type: patientPositionPlacement, \"B3NA (practice)\": good, B4CA: good, B5CA: good, C5CA: good, SC8CP: good, B1CA: good, M1CA: good, M2CA: good, B7CA: good},\n  \"intv-control-shock-technique-administer-iv-boluses\": {type: ivPlacement, \"B3NA (practice)\": good, B4CA: neutral, B5CA: good, C5CA: good, SC8CP: neutral, B1CA: good, M1CA: good, M2CA: good, B7CA: neutral},\n  \"intv-occlusive-dressing\": {type: woundState, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: good, C5CA: good, SC8CP: neutral, B1CA: neutral, M1CA: good, M2CA: neutral, B7CA: good},\n  \"intv-pleural-decompression\": {type: decompression, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: good, C5CA: neutral, SC8CP: neutral, B1CA: good, M1CA: neutral, M2CA: neutral, B7CA: good},\n  \"intv-spinal-immobilization-technique-manual-c-spine\": {type: spineStable, \"B3NA (practice)\": good, B4CA: good, B5CA: good, C5CA: good, SC8CP: good, B1CA: good, M1CA: good, M2CA: good, B7CA: neutral},\n  \"intv-spinal-immobilization-technique-cervical-collar\": {type: cSpineCollar, \"B3NA (practice)\": good, B4CA: good, B5CA: good, C5CA: neutral, SC8CP: good, B1CA: good, M1CA: good, M2CA: good, B7CA: neutral},\n  \"intv-spinal-immobilization-technique-attach-cid\": {type: spineStable, \"B3NA (practice)\": good, B4CA: good, B5CA: good, C5CA: neutral, SC8CP: good, B1CA: good, M1CA: good, M2CA: good, B7CA: neutral},\n  \"intv-transport\": {type: inRoute, \"B3NA (practice)\": good, B4CA: good, B5CA: good, C5CA: good, SC8CP: good, B1CA: good, M1CA: good, M2CA: good, B7CA: good},\n  \"intv-apply-sterile-dressings\": {type: woundState, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: good, SC8CP: neutral, B1CA: neutral, M1CA: good, M2CA: neutral, B7CA: neutral},\n  \"intv-prepare-and-administer-pain-nausea-vomiting-medications\": {type: medEffects, \"B3NA (practice)\": neutral, B4CA: good, B5CA: neutral, C5CA: neutral, SC8CP: neutral, B1CA: neutral, M1CA: neutral, M2CA: neutral, B7CA: neutral},\n  \"intv-contact-receiving-facility\": {type: receivingFacilityReply, \"B3NA (practice)\": good, B4CA: good, B5CA: good, C5CA: good, SC8CP: good, B1CA: good, M1CA: good, M2CA: good, B7CA: good},\n  \"intv-sling\": {type: injuryStable, \"B3NA (practice)\": neutral, B4CA: good, B5CA: neutral, C5CA: neutral, SC8CP: neutral, B1CA: neutral, M1CA: neutral, M2CA: neutral, B7CA: neutral},\n  \"intv-insert-advanced-airway\": {type: intubation, \"B3NA (practice)\": neutral, B4CA: good, B5CA: good, C5CA: good, SC8CP: good, B1CA: good, M1CA: good, M2CA: good, B7CA: good},\n  \"intv-call-for-air-ambulance\": {type: airAmbulance, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: neutral, SC8CP: good, B1CA: neutral, M1CA: neutral, M2CA: neutral, B7CA: neutral},\n  \"intv-contact-medical-command\": {type: medCommandApproval, \"B3NA (practice)\": neutral, B4CA: good, B5CA: neutral, C5CA: neutral, SC8CP: good, B1CA: neutral, M1CA: neutral, M2CA: good, B7CA: neutral},\n  \"intv-establish-iv\": {type: ivPlacement, \"B3NA (practice)\": good, B4CA: good, B5CA: good, C5CA: good, SC8CP: good, B1CA: good, M1CA: good, M2CA: good, B7CA: good},\n  \"intv-prepare-amputated-part\": {type: amputated, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: neutral, SC8CP: neutral, B1CA: neutral, M1CA: neutral, M2CA: good, B7CA: neutral},\n  \"intv-splint-fracture\": {type: fracture, \"B3NA (practice)\": neutral, B4CA: good, B5CA: neutral, C5CA: neutral, SC8CP: neutral, B1CA: neutral, M1CA: neutral, M2CA: neutral, B7CA: neutral},\n  \"intv-place-on-immobilization-device\": {type: onStretcher, \"B3NA (practice)\": good, B4CA: good, B5CA: good, C5CA: good, SC8CP: good, B1CA: good, M1CA: good, M2CA: good, B7CA: good},\n  \"intv-walk-patient-to-ambulance\": {type: onStretcher, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: neutral, SC8CP: neutral, B1CA: neutral, M1CA: neutral, M2CA: neutral, B7CA: neutral},\n  \"intv-place-directly-on-stretcher\": {type: onStretcher, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: good, SC8CP: neutral, B1CA: neutral, M1CA: good, M2CA: neutral, B7CA: good},\n  \"intv-bulky-dressing\": {type: circulationPressure, \"B3NA (practice)\": neutral, B4CA: neutral, B5CA: neutral, C5CA: neutral, SC8CP: neutral, B1CA: neutral, M1CA: good, M2CA: neutral, B7CA: neutral},\n\n})\n\n//all below is just for my editing purposes in the above structures\n//commented out ones that I don't impact assessment/status findings\nconst interventions = [\n\n  \"intv-open-airway-method-head-tilt\",\n  \"intv-open-airway-method-modified-jaw-thrust\",\n  \"intv-airway-patency-technique-suction-airway\",\n  \"intv-manual-finger-sweep\",\n  \"intv-magill-forceps-assisted\",\n  \"intv-heimlich-maneuver\",\n  \"intv-back-blows-and-chest-thrusts\",\n  \"intv-oropharyngeal-airway\",\n  \"intv-nasopharyngeal-airway\",\n  \"intv-orotracheal-intubation\",\n  \"intv-nasotracheal-intubation\",\n  //\"intv-rapid-sequence-intubation\",\n  \"intv-sedation-assisted-intubation\",\n  \"intv-needle-cricothyrotomy\",\n  \"intv-surgical-cricothyrotomy\",\n  \"intv-supplemental-oxygen-device-nasal-cannula\",\n  \"intv-supplemental-oxygen-device-non-rebreather-mask\",\n  \"intv-ventilation-technique-bag-valve-mask\",\n  \"intv-control-severe-bleeding-technique-direct-pressure\",\n  \"intv-control-severe-bleeding-technique-tourniquet\",\n  \"intv-control-severe-bleeding-technique-2nd-tourniquet\",\n  \"intv-control-severe-bleeding-technique-pack-wound-with-gauze\",\n  \"intv-control-severe-bleeding-technique-pressure-bandage\",\n  //\"intv-control-severe-bleeding-technique-load-and-go\",\n  \"intv-control-shock-technique-keep-patient-warm\",\n  \"intv-control-shock-technique-place-patient-supine-position\",\n  \"intv-control-shock-technique-administer-iv-boluses\",\n  \"intv-occlusive-dressing\",\n  \"intv-pleural-decompression\",\n  //\"intv-spinal-immobilization-technique-manual-c-spine\",\n  //\"intv-spinal-immobilization-technique-cervical-collar\",\n  //\"intv-spinal-immobilization-technique-attach-cid\",\n  //\"intv-transport\",\n  //\"intv-apply-sterile-dressings\",\n  \"intv-prepare-and-administer-pain-nausea-vomiting-medications\",\n  //\"intv-contact-receiving-facility\",\n  //\"intv-sling\",\n  \"intv-insert-advanced-airway\",\n  //\"intv-call-for-air-ambulance\",\n  //\"intv-contact-medical-command\",\n  //\"intv-establish-iv\",\n  //\"intv-prepare-amputated-part\",\n  //\"intv-splint-fracture\",\n  //\"intv-place-on-immobilization-device\",\n  //\"intv-walk-patient-to-ambulance\",\n  //\"intv-place-directly-on-stretcher\",\n]","\n\n  export const colorTypes = {\n    \"Good\": \"text-success\",\n    \"Caution\": \"text-warning\",\n    \"Problem\": \"text-danger\",\n    \"Not implemented\": \"text-muted\"\n}\n\nexport const iconTypes = {\n    \"Good\": \"sentiment_satisfied\",\n    \"Caution\": \"report_problem\",\n    \"Problem\": \"highlight_off\",\n    \"Not implemented\": \"sentiment_neutral\"\n}\n\n//Feedback substitute commands for feedback template\n//@ means substitute this entry field into the feedback template and if no value in field say this in feedback, \n//? means substitute this entry field into the feedback template if the value exists,\n//+bos adds period to end sentence, two spaces and capitalizes first letter of what follows\n//+eos adds a period with no preceding spaces\n\n//assessmentEntries states are used by analyzeEvents, condition1 and condition2, but the rest is used only by condition 1\n\nexport const fbTemplatesDef = {\n    // state: [categorization for feedback, feedback template for condition 1]\n    \"contraindicated\": [\"Problem\", \"+bec Incorrect intervention +eec +bos ?why +eos\"],\n    \"irrelevant\": [\"Problem\", \"+bec Irrelevant intervention +eec +bos ?why +eos\"],\n    \"unnecessary\": [\"Problem\", \"+bec Unnecessary intervention +eec +bos ?why +eos\"],\n    \"redundant\": [\"Problem\", \"+bec Redundant intervention +eec +bos You already did an alternative to this: @redundantToFB +eos\"],\n    \"missingMinimal\": [\"Problem\", \"+bec Missing intervention +eec +bos ?why +eos\"],\n    //\"missingOptional\": [\"Caution\", \"Missing intervention +bos but it was optional in this case +bos ?why +eos\"],\n    \"missingRequired\": [\"Problem\", \"+bec Missing intervention +eec +bos ?why +eos\"],\n    \"missingRequiredAssessment\": [\"Problem\", \"+bec Missing assessment step +eec +bos ?assessmentFB +eos\"],\n    \"notNecessary\": [\"Caution\", \"+bec Unnecessary assessment step +eec +bos ?why +eos\"],  //applies only to assessment items\n\n    //note that missing/wrong items cannot be an argument in a misordering of events so there states will not get combined with misOrdered states\n\n    //not yet implemented\n   // \"missedProblem\": [\"Problem\", \"The following should alert you to @problem: +items @problemAssessments\"],  //need to add status and fields to analysis code still and +item formatting below\n \n    \"assessment\": [\"Good\", \"\"],\n    \"assessment-option\": [\"Good\", \"\"],\n    \"decision-option\": [\"Good\", \"\"],\n    \"required-action\": [\"Good\", \"\"],\n    \"optional\": [\"Good\", \"?intvStatusFB +eos\"],\n    \"goodIntv\": [\"Good\", \"?intvStatusFB +eos\"],\n    \n\n    \"misOrdered-assessment\": [\"Problem\", \"+bec Mistimed assessment step +eec +bos @orderingFB +eos\"],\n    \"misOrdered-assessment-option\": [\"Problem\", \"+bec Mistimed assessment step +eec +bos @orderingFB +eos\"],\n    \"misOrdered-decision-option\": [\"Problem\", \"+bec Mistimed assessment step +eec +bos @orderingFB\"],\n    \"misOrdered-required-action\": [\"Problem\", \"+bec Mistimed intervention +eec +bos @orderingFB\"],\n    \"misOrdered-optional\": [\"Problem\", \"+bec Mistimed intervention +eec +bos @orderingFB\"],\n    \"misOrdered-redundant\": [\"Problem\", \"+bec Redundant intervention +eec +bos You already did an alternative to this: @redundantToFB +eos\"],  //don't give additional feedback on redudant intervention\n    \"misOrdered-goodIntv\": [\"Problem\", \"+bec Mistimed intervention +eec +bos @orderingFB\"],\n    \"not-graded\": [\"Caution\", \"+bec Not reported by observer +eec +bos You would have been told that the finding for @label was @finding +eos\"],\n\n    //once software re-written to optimaize all design changes, this section should be condensed to just\n    //\"misOrdered-phase\": [\"Problem\", \"Section not completed before starting another +bos @orderingFB +eos\"]\n    //since we are no longer placing the phase feedback in the first item of a phase\n    \"misOrdered-phase-assessment\": [\"Problem\", \"+bec Section not completed before starting another +eec +bos @orderingFB +eos\"],\n    \"misOrdered-phase-assessment-option\": [\"Problem\", \"+bec Section not completed before starting another +eec +bos @orderingFB +eos\"],\n    \"misOrdered-phase-decision-option\": [\"Problem\", \"+bec Section not completed before starting another +eec +bos @orderingFB\"],\n    \"misOrdered-phase-required-action\": [\"Problem\", \"+bec Section not completed before starting another +eec +bos @orderingFB\"],\n    \"misOrdered-phase-redundant\": [\"Problem\", \"+bec Section not completed before starting another +eec +bos @orderingFB\"],\n    \"misOrdered-phase-goodIntv\": [\"Problem\", \"+bec Section not completed before starting another +eec +bos @orderingFB\"],\n    \"misOrdered-phase-optional\": [\"Problem\", \"+bec Section not completed before starting another +eec +bos @orderingFB\"],\n  \n    //assuming status checks can't be misordered\n    //design of intervention & vitals status checks still in flux but current design still uses this\n    \"intvCheckWNoIntvFound\": [\"Caution\", \"You didn't do this intervention so it doesn't make sense to check the status of it at this point.\"],\n    \"unexpectedPatientIntvCheck\": [\"Caution\", \"This status check is not likely to reveal any useful information.\"],  //nothing indicates a need to check that this intv worked\n    \"patientIntvCheck\": [\"Good\", \"\"], //as long as the intervention was done and a check expected it is fine to request a status check on it\n    \"patientVitalCheck\": [\"Good\", \"\"],  //currently any patient vital check that is done is fine\n\n\n    \"assessment-option-incorrect\": [\"Problem\", \"+bec Incorrect assessment step +eec +bos @incorrectAnswersFB +eos \"],\n    \"decision-option-incorrect\": [\"Problem\", \"+bec Incorrect assessment step +eec +bos @incorrectAnswersFB +eos \"],  \n    \"incorrect-answers\": [\"Problem\", \"+bec Incorrect intervention +eec +bos @incorrectAnswersFB +bos ?intvStatusFB +eos\"],\n    \"optional-incorrect-answers\": [\"Problem\", \"+bec Incorrect intervention +eec +bos ?why +bos @incorrectAnswersFB +bos ?intvStatusFB +eos\"],\n    \"redundant-incorrect-answers\": [\"Problem\", \"+bec Redundant intervention +eec +bos You already did an alternative to this: @redundantToFB +eos\"],\n    //minimal is no longer guaranteed to work so could remove these once verified by redesign of analysis software\n    \"minimal-incorrect-answers\": [\"Problem\", \"+bec Incorrect intervention and violated protocol +eec +bos ?minimalWhy +bos @incorrectAnswersFB +bos ?intvStatusFB +eos\"],\n    \"minimal\": [\"Caution\", \"+bec Violated protocol +eec +bos @minimalWhy +bos ?intvStatusFB +eos \"],\n\n   \n    \"misOrdered-assessment-option-incorrect\": [\"Problem\", \"+bec Incorrect, mistimed assessment step +eec +bos @orderingFB +bos @incorrectAnswersFB +eos \"],\n    \"misOrdered-decision-option-incorrect\": [\"Problem\", \"+bec Incorrect, mistimed assessment step +eec +bos @orderingFB +bos @incorrectAnswersFB +eos \"],\n    \"misOrdered-incorrect-answers\": [\"Problem\", \"+bec Incorrect, mistimed intervention +eec +bos @orderingFB +bos @incorrectAnswersFB +bos ?intvStatusFB +eos\"],\n    \"misOrdered-optional-incorrect-answers\": [\"Problem\", \"+bec Incorrect, mistimed intervention  +eec +bos ?why +bos @incorrectAnswersFB +bos ?intvStatusFB +eos\"],\n    \"misOrdered-redundant-incorrect-answers\": [\"Problem\", \"+bec Redundant intervention +eec +bos You already did an alternative to this: @redundantToFB +eos\"],\n\n    //minimal is no longer guaranteed to work so could remove these once verified during optimization of all design changes\n    \"misOrdered-minimal-incorrect-answers\": [\"Problem\", \"+bec Incorrect, mistimed intervention +eec +bos @orderingFB +bos @minimalWhy +bos @incorrectAnswersFB +bos ?intvStatusFB +eos\"],\n    \"misOrdered-minimal\": [\"Problem\", \"+bec Incorrect, mistimed intervention +eec +bos @orderingFB +bos @minimalWhy +bos ?intvStatusFB +eos\"],\n        \n    //once analysis software re-written to optimaize all design changes, this section can be eliminated\n    //since we are no longer placing the phase feedback in the first item of a phase\n    \"misOrdered-phase-assessment-option-incorrect\": [\"Problem\", \"+bec Incorrect, mistimed assessment step +eec +bos @incorrectAnswersFB +bos @orderingFB +eos \"],\n    \"misOrdered-phase-decision-option-incorrect\": [\"Problem\", \"+bec Incorrect, mistimed assessment step  +eec +bos @incorrectAnswersFB +bos @orderingFB +eos \"],\n    \"misOrdered-phase-incorrect-answers\": [\"Problem\", \"+bec Incorrect, mistimed intervention +eec +bos @incorrectAnswersFB +bos @orderingFB +bos ?intvStatusFB +eos\"],\n    \"misOrdered-phase-optional-incorrect-answers\": [\"Problem\", \"+bec Incorrect, mistimed intervention +eec +bos ?why +bos @incorrectAnswersFB +bos @orderingFB +bos ?intvStatusFB +eos\"],\n    \"misOrdered-phase-redundant-incorrect-answers\": [\"Problem\", \"+bec Redundant, mistimed intervention +eec +bos You already did an alternative to this: @redundantToFB +bos @orderingFB +eos\"],\n    \"misOrdered-phase-minimal-incorrect-answers\": [\"Problem\", \"+bec Incorrect, mistimed intervention +eec +bos @orderingFB +bos ?minimalWhy +bos @incorrectAnswersFB +bos ?intvStatusFB +eos\"],\n    \"misOrdered-phase-minimal\": [\"Problem\", \"+bec Misordered +eec +bos @orderingFB +bos ?minimalWhy +bos ?intvStatusFB +eos\"],\n    \n    \"green\": [\"Good\", \"\"],  //just for headers\n    \"red\": [\"Problem\", \"\"], //just for headers\n    \"yellow\": [\"Caution\", \"\"], //just for headers\n    \"notFound\": [\"Not implemented\", \"This item has no definition or is no longer defined\", \"\"],\n    \"default\": [\"Not implemented\", \"This action was not expected.  There could be an issue with how this scenario is represented within the system.\"],\n    \"test\": [\"Not implemented\", \"\"]\n}\n\n","export const phaseStatusList = {\n    absent: [\"absent\", \"missingMinimal\", \"missingRequired\", \"missingRequiredAssessment\"],\n    errors: [\"redundant-incorrect-answers\",  \"assessment-option-incorrect\", \"decision-option-incorrect\", \n    \"incorrect-answers\", \"minimal-incorrect-answers\", \"irrelevant\", \"unnecessary\", \"contraindicated\", \"errors\", \"error\"],\n    misordered: [\"misordered\", \"misOrdered\", \"misOrdered-redundant\", \"misOrdered-minimal\", \"misOrdered-alternative\",  \n    \"misOrdered-assessment\", \"misOrdered-assessment-option\", \"misOrdered-decision-option\", \"misOrdered-required-action\", \n    \"misOrdered-goodIntv\", \"misOrdered-phase-minimal\", \"misOrdered-phase-assessment\", \"misOrdered-phase-assessment-option\", \n    \"misOrdered-phase-decision-option\", \"misOrdered-phase-required-action\", \"misOrdered-phase-goodIntv\"],\n    misorderedErrors: [\"misorderedErrors\", \"misorderedError\", \"midOrdered-contraindicated\",\"misordered-error\", \n    \"misOrdered-unnecessary\", \"misOrdered-redundant-incorrect-answers\", \"misOrdered-assessment-option-incorrect\",\n    \"misOrdered-decision-option-incorrect\", \"misOrdered-incorrect-answers\", \"misOrdered-minimal-incorrect-answers\", \n    \"misOrdered-irrelevant\", \"misOrdered-phase-assessment-option-incorrect\", \"misOrdered-phase-decision-option-incorrect\", \n    \"misOrdered-phase-incorrect-answers\", \"misOrdered-phase-minimal-incorrect-answers\"],\n    good: [\"good\", \"assessment\", \"assessment-option\", \"decision-option\", \"required-action\", \"goodIntv\", \"optional\",\n        //condition 2 does not address these so put them in the good category\n        \"patientIntvCheck\", \"patientVitalCheck\", \"notNecessary\", \"notFound\",\n        \"intvCheckWNoIntvFound\", \"unexpectedPatientIntvCheck\",  \"default\", \"not-graded\",\n        //condition 2 does not need to address minimal as an error nor misordered-phase as that error appears as misordered at the phase or subphase level\n        //condition 1 uses misOrdered-Phase as that error feedback goes on the first line in the phase/subphase \n        \"minimal\", \"redundant\",\n         \n        ]  \n}\n\nexport const leafStatusList = {\n    absent: [\"missingMinimal\", \"missingRequired\", \"missingRequiredAssessment\", \"absent\"],\n    misordered: [\"misOrdered-assessment\", \"misOrdered\", \"misOrdered-assessment-option\", \"misOrdered-decision-option\", \n    \"misOrdered-required-action\", \"misOrdered-goodIntv\", \"misOrdered-minimal\", \"misOrdered-redundant\",\n    \"misOrdered-phase-minimal\", \"misOrdered-phase-assessment\", \"misOrdered-phase-assessment-option\", \n    \"misOrdered-phase-decision-option\", \"misOrdered-phase-required-action\", \"misOrdered-phase-goodIntv\"],\n    misorderedError: [\"misOrdered-assessment-option-incorrect\", \"misOrdered-decision-option-incorrect\", \n    \"misOrdered-incorrect-answers\", \"misOrdered-minimal-incorrect-answers\", \"misOrdered-redundant-incorrect-answers\",\n    \"misOrdered-phase-assessment-option-incorrect\", \"misOrdered-phase-decision-option-incorrect\", \n    \"misOrdered-phase-incorrect-answers\", \"misOrdered-phase-minimal-incorrect-answers\"],\n    error: [\"assessment-option-incorrect\", \"decision-option-incorrect\", \"incorrect-answers\", \"minimal-incorrect-answers\", \n        \"contraindicated\", \"irrelevant\", \"unnecessary\", \"redundant-incorrect-answers\"],\n    good: [\"assessment\", \"assessment-option\", \"decision-option\", \"required-action\", \"goodIntv\", \"optional\",\n        \"patientVitalCheck\", \"patientIntvCheck\",\n        //condition 2 does not address these so put them in the good category\n        \"notNecessary\", \"not-graded\", \"minimal\",\n        \"intvCheckWNoIntvFound\", \"unexpectedPatientIntvCheck\",  \"default\", \"alternative\", \"redundant\"]  \n}\n","export const ACTION_TYPES = Object.freeze({\n    REQ: \"required\",\n    CONTRA: \"contraindicated\",\n    UNNEC: \"unnecessary\",\n    IRR: \"irrelevent\",\n    OPT: \"optional\",\n    ALT: \"alternative\"  \n})\n\n\nexport const WAIT_TIFF = \"WAITING FOR FEEDBACK FROM TIFFANY\"\n\nexport const WAIT_SANDY = \"PLACEHOLDER\"\n\nexport const SUM_NODE_NO_FEEDBACK = \"SUMMARY NODE WITH NO FEEDBACK\"\n\nexport const NO_FEEDBACK = \"NO FEEDBACK PROVIDED\"\n\nexport const SUM_NODE_FBCK_CHILDREN = \"SUMMARY NODE. NO FEEDBACK BECAUSE CHILDREN ARE SHOWN WITH FEEDBACK\"\n\n// to make use of\n// import {ACTION_TYPES, WAIT_TIFF, WAIT_SANDY} from \"./constants\"\n","//import if needed\n//export if needed\n\n\n//put accessors here or import them from another file\n\n\nexport {getScenarioFeedback} from \"./mergeDataFiles\"\nexport {colorTypes,iconTypes, fbTemplatesDef } from \"./c1Data\"\nexport {phaseStatusList, leafStatusList} from \"./c2Data\"\nexport {intvChecks, scenarioConstraintIDs, conditionalConstraints, globalConstraints, exceptionDefs, vitalsCheckFeedbackLabel, vitalsCheckFeedbackID} from \"./analysisData\"\nexport {SC8CP_PhaseIE} from \"./SC8CP_data_PhaseIE\"\nexport {B4CA_PhaseIE} from \"./B4CA_data_PhaseIE\"\nexport {B5CA_PhaseIE} from \"./B5CA_data_PhaseIE\"\nexport {C5CA_PhaseIE} from \"./C5CA_data_PhaseIE\"\nexport {M2CA_PhaseIE} from \"./Bogus data for testingA\"\n","import { B4CA_PhaseDEBRF } from \"./B4CA_data_PhaseDEBRF\";\nimport { B4CA_PhaseIE } from \"./B4CA_data_PhaseIE\";\nimport { B5CA_PhaseDEBRF } from \"./B5CA_data_PhaseDEBRF\";\nimport { B5CA_PhaseIE } from \"./B5CA_data_PhaseIE\";\nimport { C5CA_PhaseDEBRF } from \"./C5CA_data_PhaseDEBRF\";\nimport { C5CA_PhaseIE } from \"./C5CA_data_PhaseIE\";\nimport { SC8CP_PhaseDEBRF } from \"./SC8CP_DEBR_Data\";\nimport { SC8CP_PhaseIE } from \"./SC8CP_data_PhaseIE\";\n\nconst GENERIC_STEP_D = {\n  title: \"Define Rules:\",\n  text: [\n    \"The purpose of this debriefing is to reflect on the scenario you have just completed in order to help you improve your skills as a paramedic.  It is not meant to assess your overall abilities as a paramedic.\",\n    \"This debriefing will summarize the learning objectives of this scenario and the performance benchmarks (standards) for achieving each objective.  The system will then prompt you to examine differences between the treatment actions that you performed and those indicated by the clinical findings revealed during the scenario, or that would have been revealed by a more thorough assessment and reassessment of this patient.  Finally, it will prompt you to state some 'take home points' to improve your performance.\",\n  ],\n};\n\nconst GENERIC_STEP_F = {\n  title: \"Formalize learning\",\n  heading: \"Please take a few minutes to reply to these questions\",\n  questions:\n    \"What are your key take-home points from this scenario? What is something you want to continue working on or do differently in the future?\",\n};\n\nfunction getStep(stepsArray, stepName) {\n  if (!stepsArray) {\n    return null;\n  }\n  return stepsArray.find((e) => e.step === stepName) || null;\n}\n\nfunction createScenarioData(ebrData = null, ieData = null) {\n  return {\n    D: GENERIC_STEP_D,\n    E: getStep(ebrData, \"E\"),\n    B: getStep(ebrData, \"B\"),\n    R: getStep(ebrData, \"R\"),\n    IE: ieData,\n    F: GENERIC_STEP_F,\n  };\n}\n\n\n\nexport function getScenarioFeedback(scenName) {\n  switch (scenName) {\n    case \"B4CA\":\n      return createScenarioData(B4CA_PhaseDEBRF, B4CA_PhaseIE)\n    case \"B5CA\":\n      return createScenarioData(B5CA_PhaseDEBRF, B5CA_PhaseIE)\n    case \"C5CA\":\n      return createScenarioData(C5CA_PhaseDEBRF, C5CA_PhaseIE)\n    case \"SC8CP\":\n      return createScenarioData(SC8CP_PhaseDEBRF, SC8CP_PhaseIE)\n    default:\n      return {};\n  }\n}\n","export function text(textString) {\n    return {text: textString, hoverText: null}\n}\n\nexport function link(linkText, hoverText) {\n  return {text: linkText, hoverText: hoverText}\n}\n\nexport function para(...spans) {\n   return spans\n}","import {\n    AuthContext,\n    AuthProvider\n} from \"./lib/contexts/Auth\"\n\nimport AuthFlow from \"./lib/components/AuthFlow\"\n\nimport PrivateRoute from \"./lib/routes/PrivateRoute\"\nimport StaffRoute from \"./lib/routes/StaffRoute\"\n\n\nexport {\n    AuthContext,\n    AuthProvider,\n    PrivateRoute,\n    StaffRoute,\n    AuthFlow\n}\n","import React, { useContext } from \"react\"\n\nimport { AUTH_FLOW_COMPONENTS, AuthContext } from \"../contexts/Auth\"\n\nimport LoginForm             from \"./LoginForm\"\nimport RegistrationForm      from \"./RegistrationForm\"\nimport ForgotPasswordForm    from \"./ForgotPasswordForm\"\nimport EmailVerificationForm from \"./EmailVerification\"\n\nimport as from \"../styles/auth-styles.module.scss\"\n\nconst DEFAULT_HEADING = \"You must be logged in to access this page\"\n\n\nconst AuthFlow = ({ heading = DEFAULT_HEADING }) => {\n\n    const { currAuthComponent } = useContext(AuthContext)\n\n    const getCurrComponent = () => {\n        switch (currAuthComponent) {\n            case AUTH_FLOW_COMPONENTS.REGISTER:\n                return <RegistrationForm />\n            case AUTH_FLOW_COMPONENTS.FORGOT_PASSWD:\n                return <ForgotPasswordForm />\n            case AUTH_FLOW_COMPONENTS.EMAIL_VERIFY:\n                return <EmailVerificationForm/>\n            default:\n                return <LoginForm />\n        }\n    }\n\n    return (\n        <div>\n            <h3 className={as['text-center']}>\n                {heading}\n            </h3>\n            {getCurrComponent()}\n        </div>\n    )\n}\n\nexport default AuthFlow","import React, { useContext, useEffect } from \"react\"\n// useCallback, \n\nimport { Button } from \"reactstrap\"\n// import cn from \"classnames\"\n\nimport as from \"../styles/auth-styles.module.scss\"\n\nimport { AUTH_FLOW_COMPONENTS, AuthContext } from \"../contexts/Auth\"\n\nconst MAX_ATTEMPTS = 3\nconst RETRY_INTERVAL = 5000\n\nconst EmailVerification = () => {\n\n    const {\n        authMsg,\n        currentUser,\n        emailVerified,\n        setCurrAuthComponent,\n        setAuthMsg,\n        setEmailVerified\n    } = useContext(AuthContext)\n\n    const resendVerificationEmail = () => {\n        if (!currentUser.emailVerified) {\n            // console.log(\"Resending verification email\")\n            currentUser.sendEmailVerification()\n                .then(() => console.log(\"email verification message sent\")) //recheckEmailVerification())\n                .catch((error) => console.log(error))\n        } else {\n            console.log(\"email address already verified\")\n        }\n    }\n\n    const checkForEmailVerification = () => {\n        let intervalID;\n        let attempt=0\n        // check every RETRY_INTERVAL seconds that the email is verified, a max of MAX_ATTEMPTS times\n        intervalID = setInterval(\n            () => {\n                console.log(\"checking for email verification attempt:\", attempt+1);\n                currentUser.reload().then(() => {\n                    if (currentUser.emailVerified) {\n                        console.log(\"email verification confirmed\")\n                        setEmailVerified(true)\n                        clearInterval(intervalID)\n                    }\n                    if (++attempt === MAX_ATTEMPTS) {\n                        console.log(\"email verifiction max attempts exceeded\")\n                        clearInterval(intervalID)\n                    }\n                })\n            },\n            (attempt === 0) ? 10 : RETRY_INTERVAL\n        )\n\n        // console.log(\"checking if user email is verified\")\n        // currentUser.reload()\n        //     .then(() => {\n        //         if (currentUser.emailVerified) {\n        //             // setEmailVerified(true)\n        //             // setCurrAuthComponent(AUTH_FLOW_COMPONENTS.LOGIN)\n        //             // setAuthMsg(\"\")\n        //         } else {\n        //             recheckEmailVerification()\n        //         }\n        //     })\n    }\n\n    // const recheckEmailVerification = useCallback(\n    //     () => {\n    //         if(!currentUser.emailVerified) {\n    //             setTimeout(() => checkVerification(), 10000);\n    //         }\n    //     },\n    //     [currentUser.emailVerified, checkVerification]\n    // )\n\n    // useEffect(\n    //     () => {\n    //         if (currentUser.emailVerified) {\n    //         //     setEmailVerified(false)\n    //         //     recheckEmailVerification()\n    //         // } else {\n    //             setEmailVerified(true)\n    //             setAuthMsg(\"\")\n    //             setCurrAuthComponent(AUTH_FLOW_COMPONENTS.LOGIN)\n    //         }\n    //     },\n    //     [currentUser.emailVerified, setCurrAuthComponent, setAuthMsg, setEmailVerified]\n    // )\n\n    useEffect(\n        () => {\n            if (emailVerified) {\n                setAuthMsg(\"\")\n                setCurrAuthComponent(AUTH_FLOW_COMPONENTS.LOGIN)\n                window.location.reload()\n            }\n        },\n        [emailVerified, setAuthMsg, setCurrAuthComponent]\n    )\n\n    return (\n      <div className={as.container}>\n        <div className={as.row}>\n          <h4>{authMsg}</h4>\n        </div>\n        <div className={as.row}>\n          <p>\n            After following that link to verify your email address, Click\n            <Button color=\"link\" size=\"sm\" onClick={checkForEmailVerification}>\n              Login\n            </Button>\n            to continue.\n          </p>\n        </div>\n        <div className={as.row}>\n          <dl>\n            <dt>\n              <span className=\"text-danger\">\n                Didn't recieve a verification email? Verification link expired?\n              </span>\n            </dt>\n            <dd style={{marginLeft: \"20px\"}}>\n              Click\n              <Button\n                size=\"sm\"\n                color=\"primary\"\n                //   className={cn(as.btn, as[\"btn-small\"], as[\"btn-primary\"])}\n                onClick={resendVerificationEmail}\n              >\n                Resend Verification Email\n              </Button>{\" \"}\n              and then follow the instructions on this page.\n            </dd>\n          </dl>\n        </div>\n        <div className={as.row}></div>\n      </div>\n    );\n}\n\nexport default EmailVerification","import React, { useContext } from \"react\"\n\nimport cn from \"classnames\"\n\nimport { AuthContext, AUTH_FLOW_COMPONENTS } from \"../contexts/Auth\"\n\nimport as from \"../styles/auth-styles.module.scss\"\n\nconst ForgotPasswordForm = () => {\n\n    const {\n        sendOutPasswordReset,\n        passwdResetError,\n        setLoginError,\n        setPasswdResetError,\n        setCurrAuthComponent\n    } = useContext(AuthContext)\n\n    // const haveError = () => \"\" !== passwdResetError\n\n    const handleRememberedPasswd = (event) => {\n        event.preventDefault()\n        setLoginError(\"\")\n        setCurrAuthComponent(AUTH_FLOW_COMPONENTS.LOGIN)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const { email } = event.target.elements;\n        setLoginError(\"\")\n        sendOutPasswordReset(email.value)\n            .then(() => {\n                console.log(\"password reset set\")\n            })\n            .catch((error) => {\n                setPasswdResetError(error.message)\n            })\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <div className={as.container}>\n                    <div className={as.row}>\n                       <h3>MedDBriefer Password Reset Form</h3>\n                    </div>\n                    <div className={as.row}>\n                        <label\n                            htmlFor=\"email\"\n                            className={cn(as['col-sm-1'], as['col-form-label'])}\n                        >\n                            Email\n                        </label>\n                        <div className={as['col-sm-11']}>\n                            <input\n                                id=\"email\"\n                                name=\"email\"\n                                type=\"email\"\n                                className={as['form-control']}\n                                placeholder=\"Enter email\"\n                                required\n                            />\n                        </div>\n                    </div>\n                    <div className={as.row}>\n                        <p className={as['text-danger']}>\n                            {passwdResetError}\n                        </p>\n                    </div>\n                    <div className={as.row}>\n                        <button\n                            type=\"submit\"\n                            className={cn(as.btn, as['btn-primary'])}\n                        >\n                            Send Password Reset Email\n                        </button>\n                        <button\n                            type=\"button\"\n                            className={cn(as.btn, as['btn-link'])}\n                            onClick={handleRememberedPasswd}\n                        >\n                            I remembered my password!\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default ForgotPasswordForm","import React, {\n    useContext,\n    useState\n} from \"react\";\n\nimport cn from \"classnames\"\n\nimport { AUTH_FLOW_COMPONENTS, AuthContext } from \"../contexts/Auth\";\n\nimport as from \"../styles/auth-styles.module.scss\"\n\nimport PasswordVisibilityIcon from \"./icons/PasswordVisibilityIcon\"\n\nconst LoginForm = () => {\n\n    const [passwordVisible, setPasswordVisible] = useState(false)\n\n    const {\n        authMsg,\n        loginError,\n        loginUserWithEmailAndPassword,\n        setCurrAuthComponent\n    } = useContext(AuthContext);\n\n\n    // const haveMessage = () => \"\" !== loginError\n\n    const togglePasswordVisibility = () => setPasswordVisible(!passwordVisible)\n\n\n    const handleForgotPassword = (event) => {\n        event.preventDefault()\n        setCurrAuthComponent(AUTH_FLOW_COMPONENTS.FORGOT_PASSWD)\n    }\n\n    const handleLogin = (event) => {\n        event.preventDefault();\n        const { email, password } = event.target.elements;\n        loginUserWithEmailAndPassword(email.value, password.value)\n    }\n\n    const handleRegister = (event) => {\n        event.preventDefault()\n        setCurrAuthComponent(AUTH_FLOW_COMPONENTS.REGISTER)\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleLogin}>\n                <div className={as.container}>\n                    <div className={as.row}>\n                        <h3>Sign In</h3>\n                    </div>\n\n                    <div className={as.row}>\n                        <label\n                            htmlFor=\"email\"\n                            className={cn(as['col-sm-2'], as['col-form-label'])}\n                        >\n                            Email address\n                        </label>\n                        <div className={as['col-sm-10']}>\n                            <input\n                                id=\"email\"\n                                name=\"email\"\n                                type=\"email\"\n                                className={as['form-control']}\n                                placeholder=\"Enter email\"\n                                required\n                            />\n                        </div>\n                    </div>\n\n                    <div className={as.row}>\n                        <label\n                            htmlFor=\"password\"\n                            className={cn(as['col-sm-2'], as['col-form-label'])}\n                        >\n                            Password\n                        </label>\n                        <div className={cn(as['col-sm-10'], as['input-group'])}>\n                            <input\n                                id=\"password\"\n                                name=\"password\"\n                                type={passwordVisible ? \"text\" : \"password\"}\n                                className={as['form-control']}\n                                placeholder=\"Enter password\"\n                                required\n                            />\n                            <PasswordVisibilityIcon\n                                visible={passwordVisible}\n                                stateToggler={togglePasswordVisibility}\n                            />\n                        </div>\n                    </div>\n                    <div className={as.row}>\n                        <p className={as['text-danger']}>\n                            {loginError}\n                        </p>\n                    </div>\n                    <div className={as.row}>\n                        <p>{authMsg}</p>\n                    </div>\n                    <button\n                        type=\"submit\"\n                        className={cn(as.btn, as['btn-primary'])}\n                    >\n                        Sign In\n                    </button>\n                    <button\n                        type=\"button\"\n                        className={cn(as.btn, as['btn-link'])}\n                        onClick={handleForgotPassword}\n                    >\n                        I forgot my Password\n                    </button>\n                    <button\n                        type=\"button\"\n                        className={cn(as.btn, as['btn-link'])}\n                        onClick={handleRegister}\n                    >\n                        Register\n                    </button>\n                </div>\n            </form>\n        </div>\n\n    )\n}\n\nexport default LoginForm;\n","import React, { useContext, useState } from \"react\";\n\nimport cn from \"classnames\"\n\nimport as from \"../styles/auth-styles.module.scss\"\n\nimport { AUTH_FLOW_COMPONENTS, AuthContext } from \"../contexts/Auth\";\n\nimport PasswordVisibilityIcon from \"./icons/PasswordVisibilityIcon\"\n\nconst RegistrationForm = () => {\n\n    const [passwordVisible, setPasswordVisible] = useState(false)\n    const [confirmPasswordVisible, setConfirmPasswordVisible] = useState(false)\n    const [validClassCode, setIsValidClassCode] = useState(true)\n    const togglePasswordVisibility = () => setPasswordVisible(!passwordVisible)\n    const toggleConfirmPasswordVisibility = () => setConfirmPasswordVisible(!confirmPasswordVisible)\n\n    const {\n        getClassCodes,\n        setCurrAuthComponent,\n        registerErrorMsg,\n        registerUserWithEmailAndPassword\n    } = useContext(AuthContext)\n\n    const alreadyHaveAccount = (event) => {\n        event.preventDefault()\n        setCurrAuthComponent(AUTH_FLOW_COMPONENTS.LOGIN)\n        // console.log(\"I already have an account\")\n    }\n\n    const handleSignUp = async (event) => {\n        event.preventDefault();\n        const validClassCodes = await getClassCodes()\n        const { classCode, email, password } = event.target.elements;\n        if (validClassCodes.includes(classCode.value)) {\n            registerUserWithEmailAndPassword(email.value, password.value, classCode.value);\n        } else {\n            setIsValidClassCode(false)\n        }\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleSignUp}>\n                <div className={as.container}>\n                    <div className={as.row}>\n                        <h3>Sign up for MedDBriefer</h3>\n                    </div>\n                    <div className={as.row}>\n                        <label\n                            htmlFor=\"classCode\"\n                            className={cn(as['col-sm-3'], as['col-form-label'])}\n                        >\n                            Class Code\n                        </label>\n                        <div className={as[\"col-sm-9\"]}>\n                            <input\n                                className={as['form-control']}\n                                id=\"classCode\"\n                                name=\"classCode\"\n                                type=\"text\"\n                                placeholder=\"example: demo\"\n                                autoComplete=\"off\"\n                                onInput={() => setIsValidClassCode(true)}\n                                required\n                            />\n                        </div>\n                    </div>\n                    <div className={as.row} style={{display: validClassCode ? \"none\" : \"block\"}}>\n                        <div className={as['col-sm-12']}>\n                            <span className={as['text-danger']}>\n                                Invalid class code, if you are here for an experiment, type 'trial1', otherwise enter 'demo'\n                            </span>\n                        </div>\n                    </div>\n                    <div className={cn(as.row, )}>\n                        <label\n                            htmlFor=\"emailAddress\"\n                            className={cn(as['col-sm-3'], as['col-form-label'])}\n                        >\n                            Email\n                        </label>\n                        <div className={as[\"col-sm-9\"]}>\n                            <input\n                                className={as['form-control']}\n                                id=\"emailAddress\"\n                                name=\"email\"\n                                type=\"email\"\n                                placeholder=\"example: john.doe@gmail.com\"\n                                required\n                            />\n                        </div>\n                    </div>\n                    <div className={as.row}>\n                        <label\n                            htmlFor=\"password\"\n                            className={cn(as['col-sm-3'], as['col-form-label'])}\n                        >\n                            Password\n                        </label>\n                        <div className={cn(as['col-sm-9'], as[\"input-group\"])}>\n                            <input\n                                id=\"password\"\n                                name=\"password\"\n                                type={passwordVisible ? \"text\" : \"password\"}\n                                className={as['form-control']}\n                                placeholder=\"Enter password\"\n                                required\n                            />\n                            <PasswordVisibilityIcon\n                                visible={passwordVisible}\n                                stateToggler={togglePasswordVisibility}\n                            />\n                        </div>\n                    </div>\n                    <div className={as.row}>\n                        <label\n                            htmlFor=\"confirmPassword\"\n                            className={cn(as['col-sm-3'], as['col-form-label'])}\n                        >\n                            Confirm Password\n                        </label>\n                        <div className={cn(as[\"col-sm-9\"], as[\"input-group\"])}>\n                            <input\n                                className={as['form-control']}\n                                id=\"confirmPassword\"\n                                name=\"confirmPassword\"\n                                type={confirmPasswordVisible ? \"text\" : \"password\"}\n                                placeholder=\"Password\"\n                                required\n                            />\n                            <PasswordVisibilityIcon\n                                visible={confirmPasswordVisible}\n                                stateToggler={toggleConfirmPasswordVisibility}\n                            />\n                        </div>\n                    </div>\n                    <div className={as.row}>\n                        <p className={as['text-danger']}>\n                            {registerErrorMsg}\n                        </p>\n                    </div>\n\n                    <button\n                        type=\"submit\"\n                        className={cn(as.btn, as['btn-primary'])}\n                    >\n                        Sign Up\n                    </button>\n                    <button\n                        type=\"button\"\n                        className={cn(as.btn, as['btn-link'])}\n                        onClick={alreadyHaveAccount}\n                    >\n                        I already have an account.\n                    </button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default RegistrationForm","import React from \"react\"\n\nimport cn from \"classnames\"\n\nimport as from \"../../styles/auth-styles.module.scss\"\n\nconst PasswordVisibilityIcon = ({visible, stateToggler}) => {\n\n    return (\n        <span\n            className={cn(as[\"input-group-text\"], \"material-icons-outlined\")}\n            onClick={stateToggler}\n        >\n            {visible ? \"visibility\" : \"visibility_off\"}\n        </span>\n\n    )\n}\n\nexport default PasswordVisibilityIcon","import React, { useEffect, useState } from \"react\";\n\nimport { useFirebase } from \"@meddbriefer/mdb-firebase\"\n\n// for development purposes, expose db to the dev console\n// window.db = db\n\nexport const AuthContext = React.createContext({});\n\n\nconst PASSWORD_RESET_SUCCESS_MSG =\n  \"You should soon recieve an email with a password reset link it. \" +\n  \"After reseting you password, you will be able to sign in.\"\n\n// const EMAIL_VERIFY_MESSAGE =\n//   \"A message has been sent to your email address. It contains a link which will \" +\n//   \"verify that you are the owner of that email address\"\n\nconst ERROR_CODE_UNKNOWN_USER = \"auth/user-not-found\"\nconst ERROR_CODE_WRONG_PASSWD = \"auth/wrong-password\"\nconst ERROR_CODE_ACCT_ALREADY_EXISTS = \"auth/email-already-in-use\"\nconst ERROR_CODE_NETWORK_ERROR = \"auth/network-request-failed\"\n\nconst UNKNOWN_USER_ERROR_MSG = \"Sorry, we have no record of a user with your email address\"\nconst WRONG_PASSWD_ERROR_MSG = \"Incorrect Password. Try again.\"\nconst ACCT_ALREADY_EXISTS_ERROR_MSG = \"An account already exists with that email address\"\nconst NETWORK_ERROR_MSG = \"A Network Error has occurred. Try again later.\"\n\n\nexport const AUTH_FLOW_COMPONENTS = {\n  LOGIN: \"signin\",\n  REGISTER: \"register\",\n  FORGOT_PASSWD: \"forgot-passwd\",\n  EMAIL_VERIFY: \"email-verify\"\n}\n\n\nexport function AuthProvider({children}) {\n  const {auth, db} = useFirebase()\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n  const [currentUser, setCurrentUser] = useState(null)\n  const [userName, setUserName] = useState(null)\n  const [authMsg, setAuthMsg] = useState(\"\")\n  const [currAuthComponent, setCurrAuthComponent] = useState(AUTH_FLOW_COMPONENTS.LOGIN)\n  const [registerErrorMsg, setRegisterErrorMsg] = useState(\"\")\n  const [loginError, setLoginError] = useState(\"\")\n  const [passwdResetError, setPasswdResetError] = useState(\"\")\n  const [isStaff, setIsStaff] = useState(false)\n  const [emailVerified, setEmailVerified] = useState(false)\n  const [userPrefs, setUserPrefs] = useState({});\n\n\n  const userIsStaff = async (user) => {\n    // returns bool regarding whether user is authenticated and whether they have\n    // \"staff\" privileges.\n    // if a user has staff privs, a document will exist in the \"staff\" db collection\n    // whose document id represents their uid\n    if (!user) {\n      return false;\n    }\n    const docRef = db.collection(\"staff\").doc(user.uid);\n    const doc = await docRef.get();\n    return doc.exists;\n  };\n\n  const signOutUser = () => {\n    return auth.signOut()\n      .then(() => {\n        setUnauthedState()\n      })\n      .catch((error) => console.log(error))\n  }\n\n  const setUnauthedState = () => {\n    setIsAuthenticated(false)\n    setIsStaff(false)\n    setUserName(null)\n    setEmailVerified(false)\n  }\n\n  const registerUserWithEmailAndPassword = (email, password, classCode) => {\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((userCredential) => {\n        // userCredential.user.sendEmailVerification();\n        setRegisterErrorMsg(\"\");\n        return getUserRecord(userCredential.user.uid);\n      })\n      .catch((error) => {\n        switch (error.code) {\n          case ERROR_CODE_ACCT_ALREADY_EXISTS:\n            setRegisterErrorMsg(ACCT_ALREADY_EXISTS_ERROR_MSG);\n            break;\n          case ERROR_CODE_NETWORK_ERROR:\n            setRegisterErrorMsg(NETWORK_ERROR_MSG);\n            break;\n          default:\n            // some error code I have yet to handle\n            console.log(error.code);\n            setRegisterErrorMsg(error.message);\n            break;\n        }\n      })\n      .then((userRec) => {\n        updateUserRecord(userRec, \"email\", email);\n        return userRec;\n      })\n      .then((userRec) => {\n        updateUserRecord(userRec, \"classCode\", classCode);\n        return userRec;\n      })\n      .then(() =>\n        console.log(\"users document created with email and classcode\")\n      );\n      \n  }\n\n  const loginUserWithEmailAndPassword = (email, password) => {\n    auth.signInWithEmailAndPassword(email, password)\n      .then(() => {\n        setLoginError(\"\")\n      })\n      .catch((error) => {\n        switch(error.code) {\n          case ERROR_CODE_WRONG_PASSWD:\n            setLoginError(WRONG_PASSWD_ERROR_MSG)\n            break\n          case ERROR_CODE_UNKNOWN_USER:\n            setLoginError(UNKNOWN_USER_ERROR_MSG)\n            break\n          case ERROR_CODE_NETWORK_ERROR:\n            setLoginError(NETWORK_ERROR_MSG)\n            break\n          default:\n            // some error code I have yet to handle\n            console.log(error.code)\n            setLoginError(error.message)\n            break\n        }\n      })\n  }\n\n  const sendOutPasswordReset = (email) => {\n    auth.sendPasswordResetEmail(email)\n      .then(() => {\n        setAuthMsg(PASSWORD_RESET_SUCCESS_MSG)\n        setCurrAuthComponent(AUTH_FLOW_COMPONENTS.LOGIN)\n      })\n      .catch((error) => {\n        switch(error.code) {\n          case ERROR_CODE_UNKNOWN_USER:\n            setPasswdResetError(UNKNOWN_USER_ERROR_MSG)\n            break\n          case ERROR_CODE_NETWORK_ERROR:\n            setPasswdResetError(NETWORK_ERROR_MSG)\n            break\n          default:\n            // some error code I have yet to handle\n            console.log(error.code)\n            setPasswdResetError(error.message)\n            break\n        }\n      }\n    )\n  }\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n        // handle changes in auth state - does this include emailVerified changes???\n        setCurrentUser(user)\n        if (user) {\n          setIsAuthenticated(true);\n          // set userName to whatever is before the \"@\" in the user's email address\n          setUserName(user.email.substr(0, user.email.indexOf(\"@\")));\n          // if (!user.emailVerified) {\n          //   setAuthMsg(EMAIL_VERIFY_MESSAGE)\n          //   setCurrAuthComponent(AUTH_FLOW_COMPONENTS.EMAIL_VERIFY)\n          // } else {\n          setEmailVerified(true);\n          // }\n          userIsStaff(user)\n            .then((res) => {\n              setIsStaff(res);\n            })\n            .catch((err) => console.error(err));\n        } else {\n          setUnauthedState()\n        }\n      })\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [] // only run on first render\n  )\n\n  const getUserRecord = (uid) => db.collection(\"users\").doc(uid)\n  \n  const updateUserRecord = async (userDoc, field, value) => {\n    await userDoc.set({\n      [field]: value\n    }, {merge: true})\n  }\n  // Return current users document\n  const getUserDoc = () => db.collection(\"users\").doc(currentUser.uid) || null;\n\n  // Update or create user data in db\n  const saveUserData = (field, data) => {\n    return getUserDoc().set({\n        [field]: data\n    }, { merge: true })\n  }\n\n  const getUserData = async () => {\n    let data = await getUserDoc().get();\n    return data.data();\n  }\n\n  const getClassCodes = async () => {\n    const ccSnapShot = await db.collection(\"class-codes\").get()\n    const classCodes = ccSnapShot.docs.map(doc => {\n      const data = doc.data()\n      return data.name\n    })\n    return classCodes\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        auth,\n        currentUser,\n        authMsg,\n        setAuthMsg,\n        registerErrorMsg,\n        setRegisterErrorMsg,\n        registerUserWithEmailAndPassword,\n        loginError,\n        setLoginError,\n        loginUserWithEmailAndPassword,\n        passwdResetError,\n        setPasswdResetError,\n        sendOutPasswordReset,\n        currAuthComponent,\n        setCurrAuthComponent,\n        signOutUser,\n        userName,\n        isAuthenticated,\n        isStaff,\n        emailVerified,\n        setEmailVerified,\n        userPrefs,\n        setUserPrefs,\n        saveUserData,\n        getUserData,\n        getClassCodes\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  )\n\n}\n","/* eslint-disable no-extra-boolean-cast */\nimport React, { useContext } from \"react\";\n\nimport { Route } from \"react-router-dom\";\n\nimport { AuthContext } from \"../contexts/Auth\"\nimport AuthFlow from \"../components/AuthFlow\"\n\nconst PrivateRoute = ({ component: RouteComponent, authFlowLayout: Layout, ...rest }) => {\n  const { emailVerified } = useContext(AuthContext)\n\n  if (emailVerified) {\n    // user is logged in, proceed normally, wrap as normal route as RouteComponent\n    // may be depending on standard props passed to routes\n    return (\n      <Route\n        {...rest}\n        render={routeProps => ( <RouteComponent {...routeProps} /> ) }\n      />\n    )\n  } else if (!!Layout) {\n    // return AuthFlow embeded within provided layout\n    return (\n      <Layout {...rest} >\n        <AuthFlow {...rest}/>\n      </Layout>\n    )\n  } else {\n    // simply return AuthFlow with out any wrapping layout\n    return ( <AuthFlow {...rest}/> )\n  }\n\n  // if (!unauthedComponent) {\n  //   unauthedComponent = (\n  //     <>\n  //     <AuthFlow />\n  //     </>\n  //   )\n  // }\n\n  // return (\n  //   <Route\n  //     {...rest}\n  //     render={routeProps =>\n  //       !!currentUser ? (\n  //         <RouteComponent {...routeProps} />\n  //       ) : (\n  //         unauthedComponent\n  //       )\n  //     }\n  //   />\n  // );\n}\n\n\nexport default PrivateRoute","import React, { useContext } from \"react\";\n\nimport { Route } from \"react-router-dom\";\n\nimport { AuthContext } from \"../contexts/Auth\"\nimport AuthFlow from \"../components/AuthFlow\"\n\n// non-exported component which displays message (modififiable by prop) that the\n// user does not have staff privileges\nconst NotStaff = ({ msg = \"Staff Privileges are required to access this page.\"}) => {\n    return (\n        <div>\n            {msg}\n        </div>\n    )\n}\n\nconst StaffRoute = ({ component: RouteComponent, authFlowLayout: Layout, ...rest }) => {\n    const { isAuthenticated, isStaff, emailVerified } = useContext(AuthContext)\n\n    if (isStaff && emailVerified) {\n        // user is logged in and is staff. proceed normally, wrap as normal route as RouteComponent\n        // may be depending on standard props passed to routes\n        return (\n            <Route\n                {...rest}\n                render={routeProps => (\n                    <RouteComponent {...routeProps} />\n                )}\n            />\n        )\n\n    } else if (isAuthenticated && emailVerified) {\n        // display message that the user needs a staff privileges to access this page\n        if (Layout) {\n            return (\n                <Route\n                    {...rest}\n                    render={routeProps => (\n                        <Layout {...routeProps}>\n                            <NotStaff />\n                        </Layout>\n                        )}\n                />\n            )\n        } else {\n            return <NotStaff />\n        }\n    } else {\n        if (Layout) {\n            // return AuthFlow embeded within provided layout\n            return (\n                <Route\n                    {...rest}\n                    render={routeProps => (\n                        <Layout {...routeProps} >\n                            <AuthFlow {...rest} />\n                        </Layout>\n                    )}\n                />\n            )\n        } else {\n            // simply return AuthFlow with out any wrapping layout\n            return (\n                <Route\n                    {...rest}\n                    render={routeProps => (\n                        <AuthFlow {...rest} />\n                    )}\n                />\n            )\n        }\n    }\n}\n\n\nexport default StaffRoute","\nexport * from './lib/snackbar/Snackbar';\nexport * from \"./lib/navbar/MDBNavBar\"\nexport * from \"./lib/modal\"\n","import React from 'react'\n\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\n\n\nexport default function MDBModal({title, show, dismiss, size=\"xl\", children}) {\n\n    return (\n        <Modal \n            isOpen={show} \n            toggle={dismiss} \n            size={size}\n            backdrop=\"static\"\n        >\n            <ModalHeader toggle={dismiss}>\n                <span className=\"h2\">{title}</span>\n            </ModalHeader>\n            <ModalBody>\n                {children}\n            </ModalBody>\n        </Modal>\n    );\n}\n\n","export {default as MDBModal} from \"./MDBModal\"\n","import React, { useContext } from 'react';\nimport { Nav, Navbar, NavbarText } from \"reactstrap\";\nimport { NavLink } from 'react-router-dom'\n\nimport { AuthContext } from \"@meddbriefer/mdb-auth\"\n\nimport UserDropDown from \"./UserDropDown\"\n\nimport \"../index.css\";\n\n\nexport function MDBNavBar({title, leftNav = null, rightNav = null }) {\n    const { isAuthenticated } = useContext(AuthContext)\n\n    return (\n        <Navbar>\n            <NavbarText className=\"brand-wrapper\">\n                <NavLink to=\"/\" className=\"brand\">\n                    MedDBriefer\n                </NavLink>\n            </NavbarText>\n\n            {!!leftNav &&\n                <Nav>\n                {leftNav}\n                </Nav>\n            }\n\n            {!!title &&\n                <NavbarText className=\"mr-auto mdb-title\">  {title} </NavbarText>\n            }\n\n            <Nav>\n                {!!rightNav && rightNav}\n            </Nav>\n            <Nav>\n                <UserDropDown show={isAuthenticated} />\n            </Nav>\n        </Navbar>\n    )\n}\n","import React, { useContext, useState } from \"react\"\n\nimport {\n    Dropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n} from \"reactstrap\"\n\nimport { AuthContext } from \"@meddbriefer/mdb-auth\"\n// import { usePrefs } from \"../../contexts/PreferencesContext\"\nimport UserIcon from \"./UserIcon\"\n\nexport default function UserDropDown({show}) {\n    const { userName, signOutUser } = useContext(AuthContext)\n    // const {displayPrefsForm} = usePrefs()\n    const [showUserMenu, setShowUserMenu] = useState(false)\n    const toggleUserMenu = () => setShowUserMenu(!showUserMenu)\n\n    if (!show) {\n        return (<span></span>)\n    }\n\n    return (\n        <Dropdown nav inNavbar isOpen={showUserMenu} direction=\"down\" toggle={toggleUserMenu}>\n            <DropdownToggle nav caret >\n                <UserIcon dark=\"true\" />\n            </DropdownToggle>\n            <DropdownMenu>\n                <DropdownItem disabled>{userName}</DropdownItem>\n                <DropdownItem divider />\n                {/* <DropdownItem onClick={displayPrefsForm}>Preferences</DropdownItem>\n                <DropdownItem divider /> */}\n                <DropdownItem onClick={signOutUser}>Sign Out</DropdownItem>\n            </DropdownMenu>\n        </Dropdown>\n    )\n}\n","import React from \"react\"\n\nconst UserIcon = ({dark = true}) => {\n\n    return (\n        <i className=\"bi-person-circle\" style={{ fontSize: \"1.5rem\", color: dark ? \"black\" : \"white\" }}></i>\n    )\n}\n\nexport default UserIcon","import create  from \"zustand\";\nimport shallow from \"zustand/shallow\";\n// import classNames from \"classnames\";\n\n// import styles from \"./Snackbar.module.css\";\nimport \"../index.css\"\n\n// export const SNACKBAR_DURATIONS = Object.freeze({\n//   \"1_5_SECS\": 1500,\n//   \"2_5_SECS\": 2500,\n// });\n\nexport const useSnackbar = create((set) => ({\n  message: \"\",\n  show: false,\n  showMessage: (message) => {\n    set({ message: message, show: true });\n    setTimeout(() => set({ message: \"\", show: false }), 3500);\n  }\n}))\n\n\nexport function Snackbar() {\n  const { show, message } = useSnackbar((state) => ({ message: state.message, show: state.show }), shallow);\n  \n  return (\n    <div id=\"mdb-snackbar\" className={show && \"show\"}>\n      {message}\n    </div>\n  );\n}\n","export * from './prompt-answer-grading';\n","\nlet answerIDs = []\nlet scenario\nlet prompts \n\n\n\nexport function initializePromptAnswerGrading(scen) {\n    prompts = scen._interventionPrompts\n    getAnswerIDs(scen)\n    scenario = scen\n    return 'prompt-answer-grading-initialized';\n}\n\n\nfunction getAnswerIDs(scen){\n    if (scen._interventionPromptAnswers){\n        let answers = scen._interventionPromptAnswers\n        answers.forEach(answer => {\n            answerIDs[answer.id] = answer.label})\n    }\n    if (scen._checkListMetaData){\n        let entries = scen._checkListMetaData\n        entries.forEach(entry => {\n            if (entry.type === \"decision-option\"){\n                answerIDs[entry.id] = entry.label\n            }\n\n        })\n    }\n}\n\n\nexport function getPrescribedInvAnswers (interventionID, variantDef) {\n    let intvEntry = scenario.interventionVariantAnswers[interventionID]\n    if (intvEntry && !!variantDef){\n        return intvEntry[variantDef]\n    }\n\n    else {return false}\n}\n\nfunction isEmpty(obj) {\n    return Object.keys(obj).length === 0;\n}\n\n\n//eventIn is the observer log event and eventOut is the event\n//being annotated during analysis\nexport function processAssessmentAnswers(eventIn, eventOut, prescribedAnswers, errorStatusVal) {\n    if (prescribedAnswers) {\n        let answerDetails\n        let correctAnswerLabel\n        let givenAnswerLabel\n        eventOut.answerCorrect = true\n        let promptID = eventIn.parentID\n        let answerID = eventIn.id\n        let correctAnswerIDs = prescribedAnswers[promptID]\n        correctAnswerLabel = getAnswerLabels(correctAnswerIDs, \"one-or-more\")\n        givenAnswerLabel = getAnswerLabel(answerID)\n        if (correctAnswerLabel && givenAnswerLabel) {\n            let answerCorrect = correctAnswerIDs.includes(answerID)\n            //store details of this answer and its grading\n            answerDetails = { \"correctAnswer\": correctAnswerLabel, \"givenAnswer\": givenAnswerLabel, \"correct\": answerCorrect }\n            //storing the prompt/answer details\n            eventOut.answerDetails[promptID] = answerDetails\n            //eventOut.actionDescription = eventOut.actionDescription + \", \" + givenAnswerLabel;\n            if (!answerCorrect) {\n                eventOut.answerCorrect = false;\n                eventOut.status = errorStatusVal\n                if (eventOut.incorrectAnswersFB) {\n                    eventOut.incorrectAnswersFB = eventOut.incorrectAnswersFB + \", and \" + correctAnswerLabel;\n                }\n                else { eventOut.incorrectAnswersFB = correctAnswerLabel }\n            }\n        }\n    }\n    eventOut.id = eventIn.parentID\n    eventOut.label = eventIn.parentLabel\n    eventOut.actionDescription = eventOut.label\n    return eventOut\n}\n\n//eventIn is the observer log event and eventOut is the event\n//being annotated during analysis\nexport function processInterventionAnswers(eventIn, eventOut, prescribedAnswers, errorStatusVal) {\n    if (!!eventIn.answers && prescribedAnswers && !isEmpty(eventIn.answers)) {\n        let answerDetails\n        let correctAnswerLabel\n        let givenAnswerLabel\n        eventOut.answerCorrect = true\n        // move through the given answers and compare to the prescribed answers\n        for (const [promptID, answerEntry] of Object.entries(eventIn.answers)) {\n            let answerType = getSelectionType(promptID)\n            let answerIDs = answerEntry\n            //let answerID = answerIDs[0]\n            let correctAnswerIDs = prescribedAnswers[promptID]\n            correctAnswerLabel = getAnswerLabels(correctAnswerIDs, answerType)\n            givenAnswerLabel = getAnswerLabels(answerIDs, answerType)\n            if (correctAnswerLabel && givenAnswerLabel) {\n                //need to extract answerType from somewhere\n                let answerCorrectness = evalAnswers(answerIDs, correctAnswerIDs, answerType);\n                //store details of this answer and its grading\n                answerDetails = { \"correctAnswer\": correctAnswerLabel, \"givenAnswer\": givenAnswerLabel, \"correct\": answerCorrectness }\n                //storing the prompt/answer details\n                eventOut.answerDetails[promptID] = answerDetails\n                //eventOut.actionDescription = eventOut.actionDescription + \", \" + givenAnswerLabel;\n                if (!answerCorrectness) {\n                    eventOut.answerCorrect = false;\n                    eventOut.status = errorStatusVal\n                    if (eventOut.incorrectAnswersFB) {\n                        eventOut.incorrectAnswersFB = eventOut.incorrectAnswersFB + \", and \" + correctAnswerLabel;\n                    }\n                    else { eventOut.incorrectAnswersFB = correctAnswerLabel }\n                }\n            }\n        }\n    }\n    return eventOut\n}\n\nfunction difference(setA, setB) {\n    return (Array.from(setA).filter((e) => !setB.includes(e)));\n}\n\nconst evalAnswers = (answerIDs, prescribedAnswerIDs, answerType) => {   \n    switch (answerType) {\n        case \"one-or-more\":\n        case \"one\":\n        case \"one-or-more-logical-or\":\n            return (difference(answerIDs, prescribedAnswerIDs).length === 0) \n        case \"one-or-more-logical-and\":\n            return (difference(prescribedAnswerIDs, answerIDs).length === 0)\n        default:\n            return (difference(answerIDs, prescribedAnswerIDs).length === 0) \n    }\n        \n};\n\nconst getSelectionType = (promptID) => {   \n    let prompt = prompts.find((e) => e.id === promptID)\n    if (prompt){\n        return prompt.selectionType}\n}\n\nconst getAnswerLabel = (answerID) => {\n    let answerLabel = answerIDs[answerID]\n    return (answerLabel || \"\");\n} \n\nconst getAnswerLabels = (answerIDs, answerType) => {\n    let answerLabel = \"\"\n    let conjText = \"\"\n    switch (answerType) {\n        case \"one-or-more\":\n        case \"one\":\n        case \"one-or-more-logical-or\":\n           conjText = \" or \" \n           break\n        case \"one-or-more-logical-and\":\n           conjText = \" and \"\n           break\n        default:\n            conjText = \", \"}\n             \n    if (answerIDs){\n      for (let answerID of answerIDs){\n        if (answerLabel === \"\"){\n            answerLabel = getAnswerLabel(answerID)\n        }\n        else {\n            let nextLabel = getAnswerLabel(answerID)\n            if (nextLabel !== \"\"){\n                answerLabel = answerLabel + conjText + nextLabel\n            }\n        }\n      }\n    }\n    return answerLabel;\n} ","module.exports = [[module.id, \"/* The snackbar - position it at the bottom and in the middle of the screen */\\n#mdb-snackbar {\\n    visibility: hidden;\\n    /* Hidden by default. Visible on click */\\n    /* min-width: 250px; */\\n    width: 100%;\\n    /* Set a default minimum width */\\n    /* margin-left: -125px; */\\n    /* margin-left: 0; */\\n    /* Divide value of min-width by 2 */\\n    background-color: #333;\\n    /* Black background color */\\n    color: #fff;\\n    /* White text color */\\n    text-align: center;\\n    /* Centered text */\\n    border-radius: 2px;\\n    /* Rounded borders */\\n    padding: 16px;\\n    /* Padding */\\n    position: fixed;\\n    /* Sit on top of the screen */\\n    z-index: 1;\\n    /* Add a z-index if needed */\\n    /* left: 50%; */\\n    /* Center the snackbar */\\n    bottom: 0px;\\n    /* 30px from the bottom */\\n}\\n/* Show the snackbar when clicking on a button (class added with JavaScript) */\\n#mdb-snackbar.show {\\n    visibility: visible;\\n    /* Show the snackbar */\\n    /* Add animation: Take 0.5 seconds to fade in and out the snackbar.\\n  However, delay the fade out process for 2.5 seconds */\\n    -webkit-animation: fadein 1.0s, fadeout 1.0s 2.5s;\\n    animation: fadein 1.0s, fadeout 1.0s 2.5s;\\n}\\n/* Animations to fade the snackbar in and out */\\n@-webkit-keyframes fadein {\\n    from {\\n        bottom: -30px;\\n        opacity: 0;\\n    }\\n    to {\\n        bottom: 0;\\n        opacity: 1;\\n    }\\n}\\n@keyframes fadein {\\n    from {\\n        bottom: -30px;\\n        opacity: 0;\\n    }\\n    to {\\n        bottom: 0;\\n        opacity: 1;\\n    }\\n}\\n@-webkit-keyframes fadeout {\\n    from {\\n        bottom: 0;\\n        opacity: 1;\\n    }\\n\\n    to {\\n        bottom: -30;\\n        opacity: 0;\\n    }\\n}\\n@keyframes fadeout {\\n    from {\\n        bottom: 0;\\n        opacity: 1;\\n    }\\n\\n    to {\\n        bottom: -30px;\\n        opacity: 0;\\n    }\\n}\\nnav.navbar {\\n    margin-left: 0;\\n    padding-left: 15px;\\n    padding-top: 0;\\n    padding-bottom: 0;\\n    padding-right: 0;\\n}\\n.brand-wrapper {\\n    padding: 0;\\n}\\n.brand {\\n    color: #007bff;\\n    font-size: 30px;\\n    margin-right: 4px;\\n    padding-right: 8px;\\n}\\n.mdb-title {\\n    font-size: 24px;\\n    padding-top: 11px;\\n    padding-bottom: 5px;\\n}\\n.navbar-text {\\n    margin-bottom: 0;\\n}\\n.nav button {\\n    margin-left: 2px;\\n    margin-right: 2px;\\n}\\n.navbar-btn {\\n    text-transform: uppercase;\\n    margin-top: 12px;\\n    padding-top: 0;\\n    padding-bottom: 0;\\n    border: 0;\\n    height: 25px;\\n    margin-left: 7px !important;\\n    margin-right: 7px !important;\\n}\", '', {\"version\":3,\"sources\":[\"/home/pitt/projects/monorepo/libs/mdb-ui/src/lib/index.css\"],\"names\":[],\"mappings\":\"AAAA,6EAA6E;AAC7E;IACI,kBAAkB;IAClB,wCAAwC;IACxC,sBAAsB;IACtB,WAAW;IACX,gCAAgC;IAChC,yBAAyB;IACzB,oBAAoB;IACpB,mCAAmC;IACnC,sBAAsB;IACtB,2BAA2B;IAC3B,WAAW;IACX,qBAAqB;IACrB,kBAAkB;IAClB,kBAAkB;IAClB,kBAAkB;IAClB,oBAAoB;IACpB,aAAa;IACb,YAAY;IACZ,eAAe;IACf,6BAA6B;IAC7B,UAAU;IACV,4BAA4B;IAC5B,eAAe;IACf,wBAAwB;IACxB,WAAW;IACX,yBAAyB;AAC7B;AAEA,8EAA8E;AAC9E;IACI,mBAAmB;IACnB,sBAAsB;IACtB;uDACmD;IACnD,iDAAiD;IACjD,yCAAyC;AAC7C;AAEA,+CAA+C;AAC/C;IACI;QACI,aAAa;QACb,UAAU;IACd;IACA;QACI,SAAS;QACT,UAAU;IACd;AACJ;AAEA;IACI;QACI,aAAa;QACb,UAAU;IACd;IACA;QACI,SAAS;QACT,UAAU;IACd;AACJ;AAEA;IACI;QACI,SAAS;QACT,UAAU;IACd;;IAEA;QACI,WAAW;QACX,UAAU;IACd;AACJ;AAEA;IACI;QACI,SAAS;QACT,UAAU;IACd;;IAEA;QACI,aAAa;QACb,UAAU;IACd;AACJ;AACA;IACI,cAAc;IACd,kBAAkB;IAClB,cAAc;IACd,iBAAiB;IACjB,gBAAgB;AACpB;AAEA;IACI,UAAU;AACd;AAEA;IACI,cAAc;IACd,eAAe;IACf,iBAAiB;IACjB,kBAAkB;AACtB;AAEA;IACI,eAAe;IACf,iBAAiB;IACjB,mBAAmB;AACvB;AAEA;IACI,gBAAgB;AACpB;AAEA;IACI,gBAAgB;IAChB,iBAAiB;AACrB;AAEA;IACI,yBAAyB;IACzB,gBAAgB;IAChB,cAAc;IACd,iBAAiB;IACjB,SAAS;IACT,YAAY;IACZ,2BAA2B;IAC3B,4BAA4B;AAChC\",\"sourcesContent\":[\"/* The snackbar - position it at the bottom and in the middle of the screen */\\n#mdb-snackbar {\\n    visibility: hidden;\\n    /* Hidden by default. Visible on click */\\n    /* min-width: 250px; */\\n    width: 100%;\\n    /* Set a default minimum width */\\n    /* margin-left: -125px; */\\n    /* margin-left: 0; */\\n    /* Divide value of min-width by 2 */\\n    background-color: #333;\\n    /* Black background color */\\n    color: #fff;\\n    /* White text color */\\n    text-align: center;\\n    /* Centered text */\\n    border-radius: 2px;\\n    /* Rounded borders */\\n    padding: 16px;\\n    /* Padding */\\n    position: fixed;\\n    /* Sit on top of the screen */\\n    z-index: 1;\\n    /* Add a z-index if needed */\\n    /* left: 50%; */\\n    /* Center the snackbar */\\n    bottom: 0px;\\n    /* 30px from the bottom */\\n}\\n\\n/* Show the snackbar when clicking on a button (class added with JavaScript) */\\n#mdb-snackbar.show {\\n    visibility: visible;\\n    /* Show the snackbar */\\n    /* Add animation: Take 0.5 seconds to fade in and out the snackbar.\\n  However, delay the fade out process for 2.5 seconds */\\n    -webkit-animation: fadein 1.0s, fadeout 1.0s 2.5s;\\n    animation: fadein 1.0s, fadeout 1.0s 2.5s;\\n}\\n\\n/* Animations to fade the snackbar in and out */\\n@-webkit-keyframes fadein {\\n    from {\\n        bottom: -30px;\\n        opacity: 0;\\n    }\\n    to {\\n        bottom: 0;\\n        opacity: 1;\\n    }\\n}\\n\\n@keyframes fadein {\\n    from {\\n        bottom: -30px;\\n        opacity: 0;\\n    }\\n    to {\\n        bottom: 0;\\n        opacity: 1;\\n    }\\n}\\n\\n@-webkit-keyframes fadeout {\\n    from {\\n        bottom: 0;\\n        opacity: 1;\\n    }\\n\\n    to {\\n        bottom: -30;\\n        opacity: 0;\\n    }\\n}\\n\\n@keyframes fadeout {\\n    from {\\n        bottom: 0;\\n        opacity: 1;\\n    }\\n\\n    to {\\n        bottom: -30px;\\n        opacity: 0;\\n    }\\n}\\nnav.navbar {\\n    margin-left: 0;\\n    padding-left: 15px;\\n    padding-top: 0;\\n    padding-bottom: 0;\\n    padding-right: 0;\\n}\\n\\n.brand-wrapper {\\n    padding: 0;\\n}\\n\\n.brand {\\n    color: #007bff;\\n    font-size: 30px;\\n    margin-right: 4px;\\n    padding-right: 8px;\\n}\\n\\n.mdb-title {\\n    font-size: 24px;\\n    padding-top: 11px;\\n    padding-bottom: 5px;\\n}\\n\\n.navbar-text {\\n    margin-bottom: 0;\\n}\\n\\n.nav button {\\n    margin-left: 2px;\\n    margin-right: 2px;\\n}\\n\\n.navbar-btn {\\n    text-transform: uppercase;\\n    margin-top: 12px;\\n    padding-top: 0;\\n    padding-bottom: 0;\\n    border: 0;\\n    height: 25px;\\n    margin-left: 7px !important;\\n    margin-right: 7px !important;\\n}\"],\"sourceRoot\":\"\"}]]","// extracted by mini-css-extract-plugin\nexport default {\"cond2-wrapper\":\"Cond2Debriefing_cond2-wrapper__2MiIA\",\"card\":\"Cond2Debriefing_card__3bRm7\",\"hint-text\":\"Cond2Debriefing_hint-text__1-sJL\",\"main-outline\":\"Cond2Debriefing_main-outline__1jENW\",\"header-bar\":\"Cond2Debriefing_header-bar__1pPiM\",\"title\":\"Cond2Debriefing_title__3fm9e\",\"phaseTabs\":\"Cond2Debriefing_phaseTabs__2haDC\",\"selected-btn\":\"Cond2Debriefing_selected-btn__1DrKi\",\"controller-nav\":\"Cond2Debriefing_controller-nav__2xomm\",\"prev\":\"Cond2Debriefing_prev__2nhFT\",\"next\":\"Cond2Debriefing_next__1FRY1\",\"main-view\":\"Cond2Debriefing_main-view__1R5Q7\",\"card-body\":\"Cond2Debriefing_card-body__1glZ3\",\"two-div-outline-container\":\"Cond2Debriefing_two-div-outline-container__1rQeb\",\"outline\":\"Cond2Debriefing_outline__3aho0\",\"btn-link\":\"Cond2Debriefing_btn-link__3SG8v\",\"disabled\":\"Cond2Debriefing_disabled__3gbDw\",\"active\":\"Cond2Debriefing_active__29Gr5\",\"outline-rhs\":\"Cond2Debriefing_outline-rhs__1pcoY\",\"feedback-block\":\"Cond2Debriefing_feedback-block__pP52I\",\"table-sm\":\"Cond2Debriefing_table-sm__2Zp31\",\"feedback-list\":\"Cond2Debriefing_feedback-list__3F4Nh\",\"slideshow\":\"Cond2Debriefing_slideshow__1ym1r\",\"benchmark\":\"Cond2Debriefing_benchmark__-i2Qq\",\"save-btn\":\"Cond2Debriefing_save-btn__1k3TY\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"auth-styles_container__10AGD\",\"container-fluid\":\"auth-styles_container-fluid__fwIkl\",\"container-xl\":\"auth-styles_container-xl__3ys0F\",\"container-lg\":\"auth-styles_container-lg__5IrFs\",\"container-md\":\"auth-styles_container-md__30y2c\",\"container-sm\":\"auth-styles_container-sm__3rV-I\",\"row\":\"auth-styles_row__2mDwO\",\"no-gutters\":\"auth-styles_no-gutters__2JKk5\",\"col\":\"auth-styles_col__3ldCj\",\"col-xl\":\"auth-styles_col-xl__2Y9VE\",\"col-xl-auto\":\"auth-styles_col-xl-auto__1NU79\",\"col-xl-12\":\"auth-styles_col-xl-12__2cHm3\",\"col-xl-11\":\"auth-styles_col-xl-11__3NJtT\",\"col-xl-10\":\"auth-styles_col-xl-10__2KsYU\",\"col-xl-9\":\"auth-styles_col-xl-9__1xLiS\",\"col-xl-8\":\"auth-styles_col-xl-8__3erd8\",\"col-xl-7\":\"auth-styles_col-xl-7__2fcIl\",\"col-xl-6\":\"auth-styles_col-xl-6__1sdz8\",\"col-xl-5\":\"auth-styles_col-xl-5__3RtO0\",\"col-xl-4\":\"auth-styles_col-xl-4__1Tdlx\",\"col-xl-3\":\"auth-styles_col-xl-3__1eyqY\",\"col-xl-2\":\"auth-styles_col-xl-2__3Q8G3\",\"col-xl-1\":\"auth-styles_col-xl-1__2L8ID\",\"col-lg\":\"auth-styles_col-lg__27OgK\",\"col-lg-auto\":\"auth-styles_col-lg-auto__37EzL\",\"col-lg-12\":\"auth-styles_col-lg-12__1UdqO\",\"col-lg-11\":\"auth-styles_col-lg-11__WDNJE\",\"col-lg-10\":\"auth-styles_col-lg-10__1Q9Mt\",\"col-lg-9\":\"auth-styles_col-lg-9__1sq-o\",\"col-lg-8\":\"auth-styles_col-lg-8__3Opus\",\"col-lg-7\":\"auth-styles_col-lg-7__2bxn2\",\"col-lg-6\":\"auth-styles_col-lg-6__1R-_o\",\"col-lg-5\":\"auth-styles_col-lg-5__keq_w\",\"col-lg-4\":\"auth-styles_col-lg-4__BOl7q\",\"col-lg-3\":\"auth-styles_col-lg-3__c4ose\",\"col-lg-2\":\"auth-styles_col-lg-2__2Ldvo\",\"col-lg-1\":\"auth-styles_col-lg-1__2eOCB\",\"col-md\":\"auth-styles_col-md__280Kr\",\"col-md-auto\":\"auth-styles_col-md-auto__3b9B1\",\"col-md-12\":\"auth-styles_col-md-12__1d6nc\",\"col-md-11\":\"auth-styles_col-md-11__3dcqK\",\"col-md-10\":\"auth-styles_col-md-10__rLZ-p\",\"col-md-9\":\"auth-styles_col-md-9__OvPfP\",\"col-md-8\":\"auth-styles_col-md-8__3WMD0\",\"col-md-7\":\"auth-styles_col-md-7__2oSlY\",\"col-md-6\":\"auth-styles_col-md-6__3peJd\",\"col-md-5\":\"auth-styles_col-md-5__31sX_\",\"col-md-4\":\"auth-styles_col-md-4__2J1-h\",\"col-md-3\":\"auth-styles_col-md-3__1KjCA\",\"col-md-2\":\"auth-styles_col-md-2__-yWxg\",\"col-md-1\":\"auth-styles_col-md-1__VXFTn\",\"col-sm\":\"auth-styles_col-sm__2ySNy\",\"col-sm-auto\":\"auth-styles_col-sm-auto__1qooL\",\"col-sm-12\":\"auth-styles_col-sm-12__2oSEw\",\"col-sm-11\":\"auth-styles_col-sm-11__1GFbu\",\"col-sm-10\":\"auth-styles_col-sm-10__3xeeR\",\"col-sm-9\":\"auth-styles_col-sm-9__2G2BH\",\"col-sm-8\":\"auth-styles_col-sm-8__16wvo\",\"col-sm-7\":\"auth-styles_col-sm-7__8Gwhq\",\"col-sm-6\":\"auth-styles_col-sm-6__2PLpR\",\"col-sm-5\":\"auth-styles_col-sm-5__3FYYp\",\"col-sm-4\":\"auth-styles_col-sm-4__vU45W\",\"col-sm-3\":\"auth-styles_col-sm-3__2rUc2\",\"col-sm-2\":\"auth-styles_col-sm-2__3tlGJ\",\"col-sm-1\":\"auth-styles_col-sm-1__1gSFk\",\"col-auto\":\"auth-styles_col-auto__mOtLf\",\"col-12\":\"auth-styles_col-12__HkJhz\",\"col-11\":\"auth-styles_col-11__1TZkf\",\"col-10\":\"auth-styles_col-10__2PHE5\",\"col-9\":\"auth-styles_col-9__3upp1\",\"col-8\":\"auth-styles_col-8__3OMmH\",\"col-7\":\"auth-styles_col-7__3y0BG\",\"col-6\":\"auth-styles_col-6__z2OvX\",\"col-5\":\"auth-styles_col-5__1bmv4\",\"col-4\":\"auth-styles_col-4__ooaUD\",\"col-3\":\"auth-styles_col-3__3md1A\",\"col-2\":\"auth-styles_col-2__ZG0mP\",\"col-1\":\"auth-styles_col-1__3vw5D\",\"row-cols-1\":\"auth-styles_row-cols-1__1FgYA\",\"row-cols-2\":\"auth-styles_row-cols-2__T22x2\",\"row-cols-3\":\"auth-styles_row-cols-3__33SFY\",\"row-cols-4\":\"auth-styles_row-cols-4__1Upyr\",\"row-cols-5\":\"auth-styles_row-cols-5__3s0l2\",\"row-cols-6\":\"auth-styles_row-cols-6__195mx\",\"order-first\":\"auth-styles_order-first__32Xyg\",\"order-last\":\"auth-styles_order-last__1gpEV\",\"order-0\":\"auth-styles_order-0__37anm\",\"order-1\":\"auth-styles_order-1__1cYTz\",\"order-2\":\"auth-styles_order-2__2WgEu\",\"order-3\":\"auth-styles_order-3__1c1Ge\",\"order-4\":\"auth-styles_order-4__7ses6\",\"order-5\":\"auth-styles_order-5__OPIHT\",\"order-6\":\"auth-styles_order-6__2EExL\",\"order-7\":\"auth-styles_order-7__-LNNy\",\"order-8\":\"auth-styles_order-8__17xHi\",\"order-9\":\"auth-styles_order-9__3KedA\",\"order-10\":\"auth-styles_order-10__2Rcp7\",\"order-11\":\"auth-styles_order-11__1ldSL\",\"order-12\":\"auth-styles_order-12__QYXvE\",\"offset-1\":\"auth-styles_offset-1__S_yky\",\"offset-2\":\"auth-styles_offset-2__3L8fT\",\"offset-3\":\"auth-styles_offset-3__1R6FV\",\"offset-4\":\"auth-styles_offset-4__1uA9L\",\"offset-5\":\"auth-styles_offset-5__2pHj2\",\"offset-6\":\"auth-styles_offset-6__1WM7j\",\"offset-7\":\"auth-styles_offset-7__2l8T6\",\"offset-8\":\"auth-styles_offset-8__2PX1q\",\"offset-9\":\"auth-styles_offset-9__NHkNE\",\"offset-10\":\"auth-styles_offset-10__3A8Zk\",\"offset-11\":\"auth-styles_offset-11__q7vhc\",\"row-cols-sm-1\":\"auth-styles_row-cols-sm-1__2IW8N\",\"row-cols-sm-2\":\"auth-styles_row-cols-sm-2__2TmMR\",\"row-cols-sm-3\":\"auth-styles_row-cols-sm-3__1Bcpm\",\"row-cols-sm-4\":\"auth-styles_row-cols-sm-4__2Jgca\",\"row-cols-sm-5\":\"auth-styles_row-cols-sm-5__1wTaB\",\"row-cols-sm-6\":\"auth-styles_row-cols-sm-6__N7dM_\",\"order-sm-first\":\"auth-styles_order-sm-first__1LHjA\",\"order-sm-last\":\"auth-styles_order-sm-last__1OG2P\",\"order-sm-0\":\"auth-styles_order-sm-0__3VAGC\",\"order-sm-1\":\"auth-styles_order-sm-1__3zlDN\",\"order-sm-2\":\"auth-styles_order-sm-2__2Id98\",\"order-sm-3\":\"auth-styles_order-sm-3__15b2I\",\"order-sm-4\":\"auth-styles_order-sm-4__170Pr\",\"order-sm-5\":\"auth-styles_order-sm-5__1TtxJ\",\"order-sm-6\":\"auth-styles_order-sm-6__9pb2G\",\"order-sm-7\":\"auth-styles_order-sm-7__SIm6q\",\"order-sm-8\":\"auth-styles_order-sm-8__2t0hf\",\"order-sm-9\":\"auth-styles_order-sm-9__17vw7\",\"order-sm-10\":\"auth-styles_order-sm-10__31bMw\",\"order-sm-11\":\"auth-styles_order-sm-11__2ReIr\",\"order-sm-12\":\"auth-styles_order-sm-12__1ViJl\",\"offset-sm-0\":\"auth-styles_offset-sm-0__UP_Ye\",\"offset-sm-1\":\"auth-styles_offset-sm-1__3svSJ\",\"offset-sm-2\":\"auth-styles_offset-sm-2__3POI4\",\"offset-sm-3\":\"auth-styles_offset-sm-3__1w0kW\",\"offset-sm-4\":\"auth-styles_offset-sm-4__3JWGY\",\"offset-sm-5\":\"auth-styles_offset-sm-5__2EEPf\",\"offset-sm-6\":\"auth-styles_offset-sm-6__22GCC\",\"offset-sm-7\":\"auth-styles_offset-sm-7__2q_3d\",\"offset-sm-8\":\"auth-styles_offset-sm-8__2HZtt\",\"offset-sm-9\":\"auth-styles_offset-sm-9__2Y-bk\",\"offset-sm-10\":\"auth-styles_offset-sm-10__3jNcV\",\"offset-sm-11\":\"auth-styles_offset-sm-11__3Q0ul\",\"row-cols-md-1\":\"auth-styles_row-cols-md-1__xFmDr\",\"row-cols-md-2\":\"auth-styles_row-cols-md-2__qZ_pn\",\"row-cols-md-3\":\"auth-styles_row-cols-md-3__3uzyG\",\"row-cols-md-4\":\"auth-styles_row-cols-md-4__1xY6o\",\"row-cols-md-5\":\"auth-styles_row-cols-md-5__ir_PD\",\"row-cols-md-6\":\"auth-styles_row-cols-md-6__37Dx8\",\"order-md-first\":\"auth-styles_order-md-first__PXmJ9\",\"order-md-last\":\"auth-styles_order-md-last__18UQ7\",\"order-md-0\":\"auth-styles_order-md-0__RcECW\",\"order-md-1\":\"auth-styles_order-md-1__3Ixnl\",\"order-md-2\":\"auth-styles_order-md-2__m1tAM\",\"order-md-3\":\"auth-styles_order-md-3__QDe0k\",\"order-md-4\":\"auth-styles_order-md-4__31o0n\",\"order-md-5\":\"auth-styles_order-md-5__3WXPf\",\"order-md-6\":\"auth-styles_order-md-6__3ULOf\",\"order-md-7\":\"auth-styles_order-md-7__3VjfE\",\"order-md-8\":\"auth-styles_order-md-8__3u3G9\",\"order-md-9\":\"auth-styles_order-md-9__20_DE\",\"order-md-10\":\"auth-styles_order-md-10__3nlP7\",\"order-md-11\":\"auth-styles_order-md-11__21LDw\",\"order-md-12\":\"auth-styles_order-md-12__k3d-a\",\"offset-md-0\":\"auth-styles_offset-md-0__328EE\",\"offset-md-1\":\"auth-styles_offset-md-1__1Pv38\",\"offset-md-2\":\"auth-styles_offset-md-2__EkZRk\",\"offset-md-3\":\"auth-styles_offset-md-3__1QwfK\",\"offset-md-4\":\"auth-styles_offset-md-4__2qkvS\",\"offset-md-5\":\"auth-styles_offset-md-5__2-1Sl\",\"offset-md-6\":\"auth-styles_offset-md-6__1foUV\",\"offset-md-7\":\"auth-styles_offset-md-7__1lT_G\",\"offset-md-8\":\"auth-styles_offset-md-8__3LqIe\",\"offset-md-9\":\"auth-styles_offset-md-9__2NZK4\",\"offset-md-10\":\"auth-styles_offset-md-10__1-I-n\",\"offset-md-11\":\"auth-styles_offset-md-11__30FC1\",\"row-cols-lg-1\":\"auth-styles_row-cols-lg-1__2BeEB\",\"row-cols-lg-2\":\"auth-styles_row-cols-lg-2__1-duX\",\"row-cols-lg-3\":\"auth-styles_row-cols-lg-3__1Ppur\",\"row-cols-lg-4\":\"auth-styles_row-cols-lg-4__vslwG\",\"row-cols-lg-5\":\"auth-styles_row-cols-lg-5__34Bqy\",\"row-cols-lg-6\":\"auth-styles_row-cols-lg-6__17nYq\",\"order-lg-first\":\"auth-styles_order-lg-first__2KPTW\",\"order-lg-last\":\"auth-styles_order-lg-last__sd62e\",\"order-lg-0\":\"auth-styles_order-lg-0__14g0P\",\"order-lg-1\":\"auth-styles_order-lg-1__1-Fi6\",\"order-lg-2\":\"auth-styles_order-lg-2__1UeSK\",\"order-lg-3\":\"auth-styles_order-lg-3__2Bnqq\",\"order-lg-4\":\"auth-styles_order-lg-4__3wLF4\",\"order-lg-5\":\"auth-styles_order-lg-5__3BWET\",\"order-lg-6\":\"auth-styles_order-lg-6__22vzu\",\"order-lg-7\":\"auth-styles_order-lg-7__1q4YC\",\"order-lg-8\":\"auth-styles_order-lg-8__2Wn2X\",\"order-lg-9\":\"auth-styles_order-lg-9__2zwR0\",\"order-lg-10\":\"auth-styles_order-lg-10__3S5Kf\",\"order-lg-11\":\"auth-styles_order-lg-11__3lViv\",\"order-lg-12\":\"auth-styles_order-lg-12__1HbM4\",\"offset-lg-0\":\"auth-styles_offset-lg-0__3vXRO\",\"offset-lg-1\":\"auth-styles_offset-lg-1__1qpeE\",\"offset-lg-2\":\"auth-styles_offset-lg-2__2VlLm\",\"offset-lg-3\":\"auth-styles_offset-lg-3__29oiZ\",\"offset-lg-4\":\"auth-styles_offset-lg-4__3zPy2\",\"offset-lg-5\":\"auth-styles_offset-lg-5__3NNON\",\"offset-lg-6\":\"auth-styles_offset-lg-6__14HL7\",\"offset-lg-7\":\"auth-styles_offset-lg-7__fw7as\",\"offset-lg-8\":\"auth-styles_offset-lg-8__26zm0\",\"offset-lg-9\":\"auth-styles_offset-lg-9__3lGAr\",\"offset-lg-10\":\"auth-styles_offset-lg-10__1jr81\",\"offset-lg-11\":\"auth-styles_offset-lg-11__SABrM\",\"row-cols-xl-1\":\"auth-styles_row-cols-xl-1__2KEIY\",\"row-cols-xl-2\":\"auth-styles_row-cols-xl-2__2Q9jD\",\"row-cols-xl-3\":\"auth-styles_row-cols-xl-3__serpJ\",\"row-cols-xl-4\":\"auth-styles_row-cols-xl-4__17lXh\",\"row-cols-xl-5\":\"auth-styles_row-cols-xl-5__se3PY\",\"row-cols-xl-6\":\"auth-styles_row-cols-xl-6__3Dv0I\",\"order-xl-first\":\"auth-styles_order-xl-first__2cXN7\",\"order-xl-last\":\"auth-styles_order-xl-last__3Bu_n\",\"order-xl-0\":\"auth-styles_order-xl-0__QNT-4\",\"order-xl-1\":\"auth-styles_order-xl-1__2uJW9\",\"order-xl-2\":\"auth-styles_order-xl-2__1urQz\",\"order-xl-3\":\"auth-styles_order-xl-3__HrnTR\",\"order-xl-4\":\"auth-styles_order-xl-4__lqyBd\",\"order-xl-5\":\"auth-styles_order-xl-5__1boyL\",\"order-xl-6\":\"auth-styles_order-xl-6__2ljrn\",\"order-xl-7\":\"auth-styles_order-xl-7__sAp62\",\"order-xl-8\":\"auth-styles_order-xl-8__3QIeu\",\"order-xl-9\":\"auth-styles_order-xl-9__30U3w\",\"order-xl-10\":\"auth-styles_order-xl-10__1ST15\",\"order-xl-11\":\"auth-styles_order-xl-11__pbkTF\",\"order-xl-12\":\"auth-styles_order-xl-12__1s6HJ\",\"offset-xl-0\":\"auth-styles_offset-xl-0__1BSft\",\"offset-xl-1\":\"auth-styles_offset-xl-1__2paww\",\"offset-xl-2\":\"auth-styles_offset-xl-2__6PmLy\",\"offset-xl-3\":\"auth-styles_offset-xl-3__3Z-Tv\",\"offset-xl-4\":\"auth-styles_offset-xl-4__2FFWB\",\"offset-xl-5\":\"auth-styles_offset-xl-5__31OSu\",\"offset-xl-6\":\"auth-styles_offset-xl-6__3s_gh\",\"offset-xl-7\":\"auth-styles_offset-xl-7__uzLWG\",\"offset-xl-8\":\"auth-styles_offset-xl-8__MUIfK\",\"offset-xl-9\":\"auth-styles_offset-xl-9__3FedX\",\"offset-xl-10\":\"auth-styles_offset-xl-10__6N_6d\",\"offset-xl-11\":\"auth-styles_offset-xl-11__jdWF2\",\"form-control\":\"auth-styles_form-control__TWWjx\",\"form-control-file\":\"auth-styles_form-control-file__2hM0e\",\"form-control-range\":\"auth-styles_form-control-range__1L_5t\",\"col-form-label\":\"auth-styles_col-form-label__nwIeC\",\"col-form-label-lg\":\"auth-styles_col-form-label-lg__3_NoG\",\"col-form-label-sm\":\"auth-styles_col-form-label-sm__30gfe\",\"form-control-plaintext\":\"auth-styles_form-control-plaintext__35RzL\",\"form-control-sm\":\"auth-styles_form-control-sm__2XZXA\",\"form-control-lg\":\"auth-styles_form-control-lg__3X3MG\",\"form-group\":\"auth-styles_form-group__11rq4\",\"form-text\":\"auth-styles_form-text__2dVxs\",\"form-row\":\"auth-styles_form-row__kAOLu\",\"form-check\":\"auth-styles_form-check__2OFdL\",\"form-check-input\":\"auth-styles_form-check-input__3P2bC\",\"form-check-label\":\"auth-styles_form-check-label__1v1JV\",\"form-check-inline\":\"auth-styles_form-check-inline__3rsW7\",\"valid-feedback\":\"auth-styles_valid-feedback__1_T7-\",\"valid-tooltip\":\"auth-styles_valid-tooltip__dSCQM\",\"was-validated\":\"auth-styles_was-validated__1foJB\",\"is-valid\":\"auth-styles_is-valid__30FJs\",\"custom-select\":\"auth-styles_custom-select__EDd2g\",\"custom-control-input\":\"auth-styles_custom-control-input__34O46\",\"custom-control-label\":\"auth-styles_custom-control-label__3M8RN\",\"custom-file-input\":\"auth-styles_custom-file-input__24wnE\",\"custom-file-label\":\"auth-styles_custom-file-label__b7a1j\",\"invalid-feedback\":\"auth-styles_invalid-feedback__mhQo-\",\"invalid-tooltip\":\"auth-styles_invalid-tooltip__DQUyl\",\"is-invalid\":\"auth-styles_is-invalid__2jvIP\",\"form-inline\":\"auth-styles_form-inline__2VVKx\",\"input-group\":\"auth-styles_input-group__1a2ep\",\"custom-control\":\"auth-styles_custom-control__1rlbV\",\"btn\":\"auth-styles_btn__2MeMF\",\"focus\":\"auth-styles_focus__3tRPo\",\"disabled\":\"auth-styles_disabled__3SfTf\",\"btn-primary\":\"auth-styles_btn-primary__2kI78\",\"active\":\"auth-styles_active__j6Q1A\",\"show\":\"auth-styles_show__1auI0\",\"dropdown-toggle\":\"auth-styles_dropdown-toggle__BJr6U\",\"btn-secondary\":\"auth-styles_btn-secondary__3c7Cl\",\"btn-success\":\"auth-styles_btn-success__3k5kU\",\"btn-info\":\"auth-styles_btn-info__1Jo-l\",\"btn-warning\":\"auth-styles_btn-warning__kZ8UD\",\"btn-danger\":\"auth-styles_btn-danger__3hHi0\",\"btn-light\":\"auth-styles_btn-light__35KKO\",\"btn-dark\":\"auth-styles_btn-dark__2qjsW\",\"btn-outline-primary\":\"auth-styles_btn-outline-primary__l7U0o\",\"btn-outline-secondary\":\"auth-styles_btn-outline-secondary__1Y7Jb\",\"btn-outline-success\":\"auth-styles_btn-outline-success__bORqD\",\"btn-outline-info\":\"auth-styles_btn-outline-info__3xoZY\",\"btn-outline-warning\":\"auth-styles_btn-outline-warning__2yk0b\",\"btn-outline-danger\":\"auth-styles_btn-outline-danger__2lsp0\",\"btn-outline-light\":\"auth-styles_btn-outline-light__PFtsK\",\"btn-outline-dark\":\"auth-styles_btn-outline-dark__26zGm\",\"btn-link\":\"auth-styles_btn-link__2ucDw\",\"btn-lg\":\"auth-styles_btn-lg__2IBeZ\",\"btn-sm\":\"auth-styles_btn-sm__YTkcH\",\"btn-block\":\"auth-styles_btn-block__3afcY\",\"custom-file\":\"auth-styles_custom-file__3ftOJ\",\"has-validation\":\"auth-styles_has-validation__2_Ce9\",\"input-group-prepend\":\"auth-styles_input-group-prepend__1qaRA\",\"input-group-append\":\"auth-styles_input-group-append__3pS8K\",\"input-group-text\":\"auth-styles_input-group-text__1Qb29\",\"input-group-lg\":\"auth-styles_input-group-lg__1wXEc\",\"input-group-sm\":\"auth-styles_input-group-sm__18rhn\",\"text-monospace\":\"auth-styles_text-monospace__1X9A_\",\"text-justify\":\"auth-styles_text-justify__10_Ve\",\"text-wrap\":\"auth-styles_text-wrap__1WwEN\",\"text-nowrap\":\"auth-styles_text-nowrap__1brBE\",\"text-truncate\":\"auth-styles_text-truncate__2sYj6\",\"text-left\":\"auth-styles_text-left__2Svts\",\"text-right\":\"auth-styles_text-right__2_2vI\",\"text-center\":\"auth-styles_text-center__1z62y\",\"text-sm-left\":\"auth-styles_text-sm-left__rDHNS\",\"text-sm-right\":\"auth-styles_text-sm-right__2Q3uT\",\"text-sm-center\":\"auth-styles_text-sm-center__14hl_\",\"text-md-left\":\"auth-styles_text-md-left__3qN5c\",\"text-md-right\":\"auth-styles_text-md-right__2_J53\",\"text-md-center\":\"auth-styles_text-md-center__35czq\",\"text-lg-left\":\"auth-styles_text-lg-left__2hmZb\",\"text-lg-right\":\"auth-styles_text-lg-right__3ow46\",\"text-lg-center\":\"auth-styles_text-lg-center__1c_KS\",\"text-xl-left\":\"auth-styles_text-xl-left__GAexL\",\"text-xl-right\":\"auth-styles_text-xl-right__1lwhB\",\"text-xl-center\":\"auth-styles_text-xl-center__1Y5yA\",\"text-lowercase\":\"auth-styles_text-lowercase__2WcMH\",\"text-uppercase\":\"auth-styles_text-uppercase__EUzPY\",\"text-capitalize\":\"auth-styles_text-capitalize__2JLp5\",\"font-weight-light\":\"auth-styles_font-weight-light__OLEh9\",\"font-weight-lighter\":\"auth-styles_font-weight-lighter__sWCNg\",\"font-weight-normal\":\"auth-styles_font-weight-normal__229q5\",\"font-weight-bold\":\"auth-styles_font-weight-bold__1pMRf\",\"font-weight-bolder\":\"auth-styles_font-weight-bolder__95d11\",\"font-italic\":\"auth-styles_font-italic__2jtAw\",\"text-white\":\"auth-styles_text-white__1N8Wd\",\"text-primary\":\"auth-styles_text-primary__1qUwM\",\"text-secondary\":\"auth-styles_text-secondary__2B2Ge\",\"text-success\":\"auth-styles_text-success__3b9Jf\",\"text-info\":\"auth-styles_text-info__jr8Pv\",\"text-warning\":\"auth-styles_text-warning__3P8Kl\",\"text-danger\":\"auth-styles_text-danger__eLgOG\",\"text-light\":\"auth-styles_text-light__33Ovy\",\"text-dark\":\"auth-styles_text-dark__RWLO_\",\"text-body\":\"auth-styles_text-body__3rlQl\",\"text-muted\":\"auth-styles_text-muted__20KiX\",\"text-black-50\":\"auth-styles_text-black-50__3ivKm\",\"text-white-50\":\"auth-styles_text-white-50__1hVag\",\"text-hide\":\"auth-styles_text-hide__3xzc6\",\"text-decoration-none\":\"auth-styles_text-decoration-none__3NGqL\",\"text-break\":\"auth-styles_text-break__2ghoE\",\"text-reset\":\"auth-styles_text-reset__2elij\"};","// extracted by mini-css-extract-plugin\nexport {};","var map = {\n\t\"./af\": 95191,\n\t\"./af.js\": 95191,\n\t\"./ar\": 54358,\n\t\"./ar-dz\": 71727,\n\t\"./ar-dz.js\": 71727,\n\t\"./ar-kw\": 98279,\n\t\"./ar-kw.js\": 98279,\n\t\"./ar-ly\": 87895,\n\t\"./ar-ly.js\": 87895,\n\t\"./ar-ma\": 11987,\n\t\"./ar-ma.js\": 11987,\n\t\"./ar-sa\": 52796,\n\t\"./ar-sa.js\": 52796,\n\t\"./ar-tn\": 12386,\n\t\"./ar-tn.js\": 12386,\n\t\"./ar.js\": 54358,\n\t\"./az\": 57452,\n\t\"./az.js\": 57452,\n\t\"./be\": 79053,\n\t\"./be.js\": 79053,\n\t\"./bg\": 65428,\n\t\"./bg.js\": 65428,\n\t\"./bm\": 21569,\n\t\"./bm.js\": 21569,\n\t\"./bn\": 56212,\n\t\"./bn-bd\": 24635,\n\t\"./bn-bd.js\": 24635,\n\t\"./bn.js\": 56212,\n\t\"./bo\": 13667,\n\t\"./bo.js\": 13667,\n\t\"./br\": 192,\n\t\"./br.js\": 192,\n\t\"./bs\": 51802,\n\t\"./bs.js\": 51802,\n\t\"./ca\": 19118,\n\t\"./ca.js\": 19118,\n\t\"./cs\": 39990,\n\t\"./cs.js\": 39990,\n\t\"./cv\": 30557,\n\t\"./cv.js\": 30557,\n\t\"./cy\": 4227,\n\t\"./cy.js\": 4227,\n\t\"./da\": 95406,\n\t\"./da.js\": 95406,\n\t\"./de\": 87994,\n\t\"./de-at\": 44139,\n\t\"./de-at.js\": 44139,\n\t\"./de-ch\": 86591,\n\t\"./de-ch.js\": 86591,\n\t\"./de.js\": 87994,\n\t\"./dv\": 94649,\n\t\"./dv.js\": 94649,\n\t\"./el\": 14453,\n\t\"./el.js\": 14453,\n\t\"./en-au\": 48428,\n\t\"./en-au.js\": 48428,\n\t\"./en-ca\": 36972,\n\t\"./en-ca.js\": 36972,\n\t\"./en-gb\": 13224,\n\t\"./en-gb.js\": 13224,\n\t\"./en-ie\": 18843,\n\t\"./en-ie.js\": 18843,\n\t\"./en-il\": 32732,\n\t\"./en-il.js\": 32732,\n\t\"./en-in\": 76579,\n\t\"./en-in.js\": 76579,\n\t\"./en-nz\": 29851,\n\t\"./en-nz.js\": 29851,\n\t\"./en-sg\": 70442,\n\t\"./en-sg.js\": 70442,\n\t\"./eo\": 10654,\n\t\"./eo.js\": 10654,\n\t\"./es\": 63621,\n\t\"./es-do\": 68791,\n\t\"./es-do.js\": 68791,\n\t\"./es-mx\": 67278,\n\t\"./es-mx.js\": 67278,\n\t\"./es-us\": 60717,\n\t\"./es-us.js\": 60717,\n\t\"./es.js\": 63621,\n\t\"./et\": 72404,\n\t\"./et.js\": 72404,\n\t\"./eu\": 62944,\n\t\"./eu.js\": 62944,\n\t\"./fa\": 30496,\n\t\"./fa.js\": 30496,\n\t\"./fi\": 98137,\n\t\"./fi.js\": 98137,\n\t\"./fil\": 32872,\n\t\"./fil.js\": 32872,\n\t\"./fo\": 6545,\n\t\"./fo.js\": 6545,\n\t\"./fr\": 49090,\n\t\"./fr-ca\": 13049,\n\t\"./fr-ca.js\": 13049,\n\t\"./fr-ch\": 12338,\n\t\"./fr-ch.js\": 12338,\n\t\"./fr.js\": 49090,\n\t\"./fy\": 95088,\n\t\"./fy.js\": 95088,\n\t\"./ga\": 77812,\n\t\"./ga.js\": 77812,\n\t\"./gd\": 8374,\n\t\"./gd.js\": 8374,\n\t\"./gl\": 63649,\n\t\"./gl.js\": 63649,\n\t\"./gom-deva\": 52674,\n\t\"./gom-deva.js\": 52674,\n\t\"./gom-latn\": 44948,\n\t\"./gom-latn.js\": 44948,\n\t\"./gu\": 24033,\n\t\"./gu.js\": 24033,\n\t\"./he\": 10175,\n\t\"./he.js\": 10175,\n\t\"./hi\": 58055,\n\t\"./hi.js\": 58055,\n\t\"./hr\": 41678,\n\t\"./hr.js\": 41678,\n\t\"./hu\": 85111,\n\t\"./hu.js\": 85111,\n\t\"./hy-am\": 26530,\n\t\"./hy-am.js\": 26530,\n\t\"./id\": 19126,\n\t\"./id.js\": 19126,\n\t\"./is\": 11696,\n\t\"./is.js\": 11696,\n\t\"./it\": 98710,\n\t\"./it-ch\": 38821,\n\t\"./it-ch.js\": 38821,\n\t\"./it.js\": 98710,\n\t\"./ja\": 93974,\n\t\"./ja.js\": 93974,\n\t\"./jv\": 70648,\n\t\"./jv.js\": 70648,\n\t\"./ka\": 54731,\n\t\"./ka.js\": 54731,\n\t\"./kk\": 43501,\n\t\"./kk.js\": 43501,\n\t\"./km\": 84398,\n\t\"./km.js\": 84398,\n\t\"./kn\": 91825,\n\t\"./kn.js\": 91825,\n\t\"./ko\": 13729,\n\t\"./ko.js\": 13729,\n\t\"./ku\": 19670,\n\t\"./ku.js\": 19670,\n\t\"./ky\": 78797,\n\t\"./ky.js\": 78797,\n\t\"./lb\": 50627,\n\t\"./lb.js\": 50627,\n\t\"./lo\": 65859,\n\t\"./lo.js\": 65859,\n\t\"./lt\": 80355,\n\t\"./lt.js\": 80355,\n\t\"./lv\": 16594,\n\t\"./lv.js\": 16594,\n\t\"./me\": 45324,\n\t\"./me.js\": 45324,\n\t\"./mi\": 11689,\n\t\"./mi.js\": 11689,\n\t\"./mk\": 61308,\n\t\"./mk.js\": 61308,\n\t\"./ml\": 85241,\n\t\"./ml.js\": 85241,\n\t\"./mn\": 76320,\n\t\"./mn.js\": 76320,\n\t\"./mr\": 96771,\n\t\"./mr.js\": 96771,\n\t\"./ms\": 20503,\n\t\"./ms-my\": 77748,\n\t\"./ms-my.js\": 77748,\n\t\"./ms.js\": 20503,\n\t\"./mt\": 55534,\n\t\"./mt.js\": 55534,\n\t\"./my\": 62727,\n\t\"./my.js\": 62727,\n\t\"./nb\": 7550,\n\t\"./nb.js\": 7550,\n\t\"./ne\": 49899,\n\t\"./ne.js\": 49899,\n\t\"./nl\": 41228,\n\t\"./nl-be\": 31225,\n\t\"./nl-be.js\": 31225,\n\t\"./nl.js\": 41228,\n\t\"./nn\": 97130,\n\t\"./nn.js\": 97130,\n\t\"./oc-lnc\": 93130,\n\t\"./oc-lnc.js\": 93130,\n\t\"./pa-in\": 91282,\n\t\"./pa-in.js\": 91282,\n\t\"./pl\": 28190,\n\t\"./pl.js\": 28190,\n\t\"./pt\": 41549,\n\t\"./pt-br\": 78135,\n\t\"./pt-br.js\": 78135,\n\t\"./pt.js\": 41549,\n\t\"./ro\": 307,\n\t\"./ro.js\": 307,\n\t\"./ru\": 89272,\n\t\"./ru.js\": 89272,\n\t\"./sd\": 79248,\n\t\"./sd.js\": 79248,\n\t\"./se\": 74969,\n\t\"./se.js\": 74969,\n\t\"./si\": 65522,\n\t\"./si.js\": 65522,\n\t\"./sk\": 61581,\n\t\"./sk.js\": 61581,\n\t\"./sl\": 56428,\n\t\"./sl.js\": 56428,\n\t\"./sq\": 34611,\n\t\"./sq.js\": 34611,\n\t\"./sr\": 19821,\n\t\"./sr-cyrl\": 20185,\n\t\"./sr-cyrl.js\": 20185,\n\t\"./sr.js\": 19821,\n\t\"./ss\": 35029,\n\t\"./ss.js\": 35029,\n\t\"./sv\": 80939,\n\t\"./sv.js\": 80939,\n\t\"./sw\": 73107,\n\t\"./sw.js\": 73107,\n\t\"./ta\": 72304,\n\t\"./ta.js\": 72304,\n\t\"./te\": 72550,\n\t\"./te.js\": 72550,\n\t\"./tet\": 99717,\n\t\"./tet.js\": 99717,\n\t\"./tg\": 87669,\n\t\"./tg.js\": 87669,\n\t\"./th\": 94959,\n\t\"./th.js\": 94959,\n\t\"./tk\": 92661,\n\t\"./tk.js\": 92661,\n\t\"./tl-ph\": 52234,\n\t\"./tl-ph.js\": 52234,\n\t\"./tlh\": 94120,\n\t\"./tlh.js\": 94120,\n\t\"./tr\": 81111,\n\t\"./tr.js\": 81111,\n\t\"./tzl\": 53080,\n\t\"./tzl.js\": 53080,\n\t\"./tzm\": 88246,\n\t\"./tzm-latn\": 25385,\n\t\"./tzm-latn.js\": 25385,\n\t\"./tzm.js\": 88246,\n\t\"./ug-cn\": 48777,\n\t\"./ug-cn.js\": 48777,\n\t\"./uk\": 2014,\n\t\"./uk.js\": 2014,\n\t\"./ur\": 45953,\n\t\"./ur.js\": 45953,\n\t\"./uz\": 89716,\n\t\"./uz-latn\": 87791,\n\t\"./uz-latn.js\": 87791,\n\t\"./uz.js\": 89716,\n\t\"./vi\": 99816,\n\t\"./vi.js\": 99816,\n\t\"./x-pseudo\": 94450,\n\t\"./x-pseudo.js\": 94450,\n\t\"./yo\": 22556,\n\t\"./yo.js\": 22556,\n\t\"./zh-cn\": 7414,\n\t\"./zh-cn.js\": 7414,\n\t\"./zh-hk\": 50824,\n\t\"./zh-hk.js\": 50824,\n\t\"./zh-mo\": 88589,\n\t\"./zh-mo.js\": 88589,\n\t\"./zh-tw\": 63285,\n\t\"./zh-tw.js\": 63285\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 96616;","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/@nrwl/web/src/utils/webpack/plugins/raw-css-loader.js!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].oneOf[4].use[2]!./index.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/@nrwl/web/src/utils/webpack/plugins/raw-css-loader.js!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].oneOf[4].use[2]!./index.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {useContext} from \"react\"\n\nimport firebase from 'firebase/compat/app'\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\"\n\n\n// simple switch returning the config for one one of meddbriefer.orgs firebase projects,\n// defaults to 'MedDebriefer' (production)\nfunction getProjectConfig(projectName) {\n    switch(projectName) {\n        case \"PamDev\":\n            return {\n                apiKey: \"AIzaSyB9eVT-fu4TOjxHoPAXqsnz9tCcbTJkTOw\",\n                authDomain: \"pamdev-ea800.firebaseapp.com\",\n                projectId: \"pamdev-ea800\",\n                storageBucket: \"pamdev-ea800.appspot.com\",\n                messagingSenderId: \"366450927885\",\n                appId: \"1:366450927885:web:caa5f022ef1de182a0e844\",\n                measurementId: \"G-JC5XZEPYT1\"\n            };\n        case \"ScottDev\":\n            return {\n                apiKey: \"AIzaSyBEhbIdVW2F2vvvfvpNb2SsCDP9Yoc__z8\",\n                authDomain: \"scottdev-f6528.firebaseapp.com\",\n                projectId: \"scottdev-f6528\",\n                storageBucket: \"scottdev-f6528.appspot.com\",\n                messagingSenderId: \"447730403122\",\n                appId: \"1:447730403122:web:1727020dbac4ad4cf6f92b\"\n            };\n        case \"MedDBriefer-dev\":\n            return {\n                apiKey: \"AIzaSyBqnEMwEstp4D7Mvtbw9OTAiNJ7qza0Ses\",\n                authDomain: \"meddbriefer-dev.firebaseapp.com\",\n                projectId: \"meddbriefer-dev\",\n                storageBucket: \"meddbriefer-dev.appspot.com\",\n                messagingSenderId: \"144940722070\",\n                appId: \"1:144940722070:web:4de179ebb58d84a7679fb7\"\n            };\n        default: //MedDBriefer (production)\n            return  {\n                apiKey: \"AIzaSyBOgWAbXUGckpad2sk0IUo00hZsV4WxG0E\",\n                authDomain: \"meddbriefer-68cd4.firebaseapp.com\",\n                projectId: \"meddbriefer-68cd4\",\n                storageBucket: \"meddbriefer-68cd4.appspot.com\",\n                messagingSenderId: \"1087114796018\",\n                appId: \"1:1087114796018:web:679fbab38dbf78af0ce96b\",\n                measurementId: \"G-Q7QZKC9KHW\"\n            }\n    }\n}\n\n\nconst getApp = (appID) => {\n    const matches = firebase.apps.filter(app => app.options.appId === appID)\n    // console.log(\"matches\", matches)\n    return (matches.length === 1) ? matches[0] : null\n}\n\nconst getOrInitializeApp = (appCfg) => {\n    const app = getApp(appCfg.appId)\n    // simply log which project is initialized (or about to be)\n    console.log(`using ${appCfg.projectId}`)\n    // console.log(`${appCfg.appId} already exists: ${!!app}`)\n    return app ? app : firebase.initializeApp(appCfg, appCfg.projectId)\n}\n\nexport function useFirebaseProject(projectName = \"MedDBriefer\") {\n    // don't reinitialize app if it already exists\n    //   projectName comes from App process.env.NX_FIREBASE_PROJECT\n    //\n    const projectConfig = getProjectConfig(projectName)\n    const firebaseApp = getOrInitializeApp(projectConfig)\n    return {\n      auth: firebaseApp.auth(),\n      db: firebaseApp.firestore()\n    }\n}\n\n// to inject firebase app into child react components\nexport const FirebaseContext = React.createContext({\n    auth: undefined,\n    db: undefined\n})\n\n// for child react components to access the firebase app\nexport const useFirebase = () => useContext(FirebaseContext)\n","// the following constants are deprecated (need to figure out how to handle this)\n// use MDB_TYPES, SELECTION_TYPES, PREFIXES, and SYSTEMS instead\nexport const ANSWER = \"answer\"\nexport const ASSESS = \"assessment\"\nexport const ASSESSO = \"assessment-option\"\nexport const ASSESS_OPTION = \"assessment-option\"\nexport const AWO = \"assessment-with-options\"\nexport const CB = \"checkbox\"\nexport const CL_HEADING = \"checklist-heading\"\nexport const CL_PROMPT = \"checklist-prompt\"\nexport const CRIT_FAIL = \"critical-criteria\"\nexport const DECISION = \"decision\"\nexport const DECISION_OPTION = \"decision-option\"\nexport const DIST_PROMPT = \"distinguishing-prompt\"\nexport const HEADING = \"heading\" //not a leaf node, simply a step which has child steps\nexport const INTERV = \"intervention\" // an action performed on the patient\nexport const INTV_FORM = \"intervention-form\"\nexport const NESTED_CHECKLIST = \"nested-checklist\"\nexport const NONE = \"none\"\nexport const ONE = \"one\"\nexport const OOM = \"one-or-more\"\nconst OOM_AND = \"one-or-more-logical-and\"\nconst OOM_OR = \"one-or-more-logical-or\"\nexport const OPTION = \"option\"\nexport const PHASE = \"phase\"\nexport const PROMPT = \"prompt\"\nexport const PROMPT_SET = \"prompt-set\"\nexport const REQUIRED = \"required-action\"   // an action the EMT performs, but not on the patient\n// keeping as I had a typo. need to deprecate somehow\nexport const REQURED = REQUIRED\nexport const SUB_PHASE = \"sub-phase\"\n\nexport const MDB_TYPES = Object.freeze({\n    PHASE: PHASE,\n    SUB_PHASE: SUB_PHASE,\n    ASSESS: ASSESS,\n    AWO: AWO,\n    ASSESS_OPTION: ASSESS_OPTION,\n    ASSESSO: ASSESS_OPTION,\n    CL_HEADING: CL_HEADING,\n    CL_PROMPT: CL_PROMPT,\n    DECISION: DECISION,\n    DECISION_OPTION: DECISION_OPTION,\n    DIST_PROMPT: DIST_PROMPT,\n    NESTED_CHECKLIST: NESTED_CHECKLIST,\n    REQUIRED: REQUIRED,\n    REQURED: REQUIRED,\n    INTERV: INTERV,\n    PROMPT_SET: PROMPT_SET,\n    PROMPT: PROMPT,\n    ANSWER: ANSWER,\n})\nexport const SELECTION_TYPES = Object.freeze({\n    ONE: ONE,\n    OOM: OOM,\n    OOM_AND: OOM_AND,\n    OOM_OR: OOM_OR,\n    NONE: NONE\n})\nexport const SELECTION_TYPE_LABELS = Object.freeze({\n    \"one\": \"One\",\n    \"one-or-more\": \"One or more\",\n    \"one-or-more-logical-and\": \"One or more (logical AND)\",\n    \"one-or-more-logical-or\": \"One or more (logical OR)\",\n    \"none\": \"None\"\n})\nexport const PREFIXES = Object.freeze({\n    PHASE: \"\",\n    SUB_PHASE: \"\",\n    ANSWER: \"answer-\",\n    ASSESS: \"assess-\",\n    AWO: \"assessment-with-options-\",\n    ASSESS_OPTION: \"assess-option-\",\n    CL_PROMPT: \"cl-prompt-\",\n    DECISION: \"decision-\",\n    DECISION_OPTION: \"decision-option-\",\n    INTERV: \"intv-\",\n    PROMPT_SET: \"prompt-set-\",\n    PROMPT: \"prompt-\",\n    REQUIRED: \"required-action-\",\n})\n\nexport const SYSTEMS = Object.freeze({\n    AW: \"airway\",\n    BR: \"breathing\",\n    BL: \"bleeding\",\n    SH: \"shock\",\n    OTH: \"other\",\n})\nexport const SYSTEM_LABELS = Object.freeze({\n    AW: \"Airway\",\n    BR: \"Breathing\",\n    BL: \"Bleeding\",\n    SH: \"Shock\",\n    OTH: \"Other\",\n})\n\nexport const CHECKLIST_STEP_TYPES = [ASSESS, AWO, DECISION, REQUIRED]\nexport const OPTION_TYPES = [ASSESS_OPTION, DECISION_OPTION]\nexport const ANALYSIS_TYPES = [ASSESS, AWO, DECISION, REQUIRED, INTERV, PHASE, SUB_PHASE]\n\nexport const PROTOCOL_RELATIONSHIPS = Object.freeze({\n    NONE: \"\",\n    MIN: \"minimal\",\n    OPT: \"optional\",\n    REQ: \"required\",\n    CONTRA: \"contraindicated\",\n    UNN: \"unnecessary\",\n    IR: \"irrelevant\",\n    ALT: \"alternative\"\n})","\nimport _ from \"lodash\"\nimport jsonStableStringify from \"json-stable-stringify\"\n\nimport { CHECKLIST_STEP_TYPES, MDB_TYPES } from \"./constants.js\"\nimport { ScenarioType, PublishedScenario } from \"./types.js\"\n\n// the rest of these imports can go away soon. simply allows me to delete objects form the db\n// and reload with files. not used if records exist in db\nimport INTVS from \"./intvs.js\"\nimport INTV_PROMPTS from \"./intvPrompts.js\"\nimport INTV_PROMPT_ANSWERS from \"./intvPromptAnswers.js\"\nimport INTV_MENU_CATS from \"./intvMenusCats.js\"\nimport INTV_MENU_ITEMS from \"./intvMenuItems.js\"\n\nexport{ MDB_TYPES , ANALYSIS_TYPES, CHECKLIST_STEP_TYPES, OPTION_TYPES, SELECTION_TYPES } from \"./constants\"\nexport { ScenarioType, PublishedScenario } from \"./types\"\n\nexport const loadIntvs = () => {\n    const tmp = INTVS.map(e => {\n        const rec = {...e}\n        if (!e.abbrLabel) {\n            rec.abbrLabel = e.label\n        }\n        if (!e.distPrompts) {\n            rec.distPrompts = []\n        }\n        if (!e.prompts) {\n            rec.prompts = []\n        }\n        return rec\n    })\n    return tmp\n}\n\nexport const loadIntvPrompts = () => {\n    const tmp = INTV_PROMPTS.map(e => {\n        const rec = {...e}\n        if (!!e.interventionID) {\n            const found = INTVS.find(i => i.id === e.interventionID)\n            if (!found) {\n                console.log(`loadIntvPrompts(${e.id}) ${e.interventionID} not found`)\n            }\n        }\n        if (!e.abbrLabel) {\n            rec.abbrLabel = \"\"\n        }\n        if (!e.feedback) {\n            rec.feedback = rec.label\n        }\n        if (!e.answers) {\n            rec.answers = []\n        }\n        return rec\n    })\n    return tmp\n}\n\nexport const loadIntvPromptAnswers = () => {\n    const tmp = INTV_PROMPT_ANSWERS.map(e => {\n        if (!e.abbrLabel) {\n            e.abbrLabel = \"\"\n        }\n        const found = INTV_PROMPTS.find(p => p.id === e.promptID)\n        if (!found) {\n            console.log(`loadIntvPromptAnswers(${e.id}) ${e.promptID} not found`)\n        }\n        return e\n    })\n    return tmp\n}\n\nexport const getScenarios = (db, scenarioType, schemaVersion) => {\n    const query = db.collection(\"scenarios\")\n             .where(\"scenarioType\", \"==\", scenarioType)\n             .where(\"schemaVersion\", \"==\", schemaVersion)\n    return query.get()\n        .then(snapShot => {\n            const scenarios = []\n            if (snapShot.size > 0) {\n                snapShot.docs.forEach(doc => {\n                    const data = doc.data()\n                    scenarios.push({\n                        id: data.id,\n                        name: data.name,\n                        scenarioType: data.scenarioType,\n                        schemaVersion: data.schemaVersion\n                    })\n                })\n            }\n            return scenarios\n        })\n}\n\nexport const getPublishedScenarioObjectByID = async (db, scenarioID) => {\n    const data = await getPublishedScenarioByID(db, scenarioID)\n    return new  PublishedScenario(data)\n}\n\nexport const getPublishedScenarioByID = (db, scenarioID) => {\n    return db.collection(\"published-scenarios\").doc(scenarioID).get().then(doc => doc.data())\n}\n\nexport const getScenarioByID = (db, scenarioID) => {\n    return db.collection(\"scenarios\").doc(scenarioID).get().then(doc => doc.data())\n}\n\nexport const getScenarioByName = (db, scenarioName, schemaVersion) => {\n    return db.collection(\"scenarios\")\n    .where(\"name\", \"==\", scenarioName)\n    .where(\"schemaVersion\", \"==\", schemaVersion)\n    .limit(1)\n    .get()\n    .then(snapShot => {\n        if (snapShot.size === 1) {\n            return snapShot.docs[0].data()\n        } else {\n            throw new Error(\"document not found\")\n        }\n    })\n}\n\nconst addMissingScenarioTypeFields = (scenTypeData) => {\n    const msgs = []\n    if (scenTypeData.checklist) {\n        // console.log(CHECKLIST_STEP_TYPES)\n        scenTypeData.checklist.forEach(clItem => {\n            if (! (\"graded\" in clItem)) {\n                if (CHECKLIST_STEP_TYPES.includes(clItem.type)) {\n                    clItem[\"graded\"] = true\n                    msgs.push(`set 'graded' to true for ${clItem.id}`)\n                } else {\n                    clItem[\"graded\"] = false\n                    msgs.push(`set 'graded' to false for ${clItem.id}`);\n                }\n            }\n        })\n    }\n    if (!scenTypeData.interventions) {\n        msgs.push(\"loading intvs from file\")\n        scenTypeData.interventions = loadIntvs()\n    }\n    if (!scenTypeData.interventionPrompts) {\n        const errs = []\n        const tmpPrompts = loadIntvPrompts()\n        tmpPrompts.forEach(e => {\n            if (e.type === MDB_TYPES.PROMPT) {\n                // ignore this check if distinguishing prompt (not associated with a single intv)\n                if (undefined === scenTypeData.interventions.find(rec => rec.id === e.interventionID)) {\n                    errs.push(`bad interventionID ${e.interventionID}`)\n                }\n            }\n        })\n        let msg = \"loading intv prompts from file...\"\n        if (errs.length > 0) {\n            msgs.push(msg)\n            errs.forEach(e => msgs.push(e))\n        } else {\n            msg += \"no errors found\"\n            msgs.push(msg)\n        }\n        scenTypeData.interventionPrompts = tmpPrompts\n    }\n    if (!scenTypeData.interventionPromptAnswers) {\n        const errs = []\n        const tmpPromptAnswers = loadIntvPromptAnswers()\n        tmpPromptAnswers.forEach(e => {\n            if (undefined === scenTypeData.interventionPrompts.find(rec => rec.id === e.promptID)) {\n                errs.push(`bad promptID ${e.promptID}`)\n            }\n        })\n        let msg = \"loading intv prompt answers from file...\"\n        if (errs.length > 0) {\n            msgs.push(msg)\n            errs.forEach(e => msgs.push(e))\n        } else {\n            msg += \"no errors found\"\n            msgs.push(msg)\n        }\n        scenTypeData.interventionPromptAnswers = tmpPromptAnswers\n    }\n    if (!scenTypeData.interventionMenuCategories) {\n        msgs.push(\"loading intv menu categories from file\")\n        scenTypeData.interventionMenuCategories = INTV_MENU_CATS\n    }\n    if (!scenTypeData.interventionMenuItems) {\n        const errs = []\n        const tmpIntvMenuItems = INTV_MENU_ITEMS.map(e => {\n            const found = scenTypeData.interventionMenuCategories.find(cat => cat.id === e.intvCategoryID)\n            if (!found) {\n                errs.push(`bad intvCategoryID ${e.intvCategoryID}`)\n            } else {\n                if (e.type === MDB_TYPES.INTERV) {\n                    const intv = scenTypeData.interventions.find(i => i.id === e.interventionID)\n                    if (!intv) {\n                        errs.push(`bad interventionID ${e.interventionID}`)\n                    } else {\n                        e.label = intv.label\n                    }\n                }\n                return e\n            }\n        })\n        let msg = \"loading intv menu items from file...\"\n\n        if (errs.length > 0) {\n            msgs.push(msg)\n            errs.forEach(e => msgs.push(e))\n        } else {\n            msg += \"no errors found\"\n            msgs.push(msg)\n        }\n        scenTypeData.interventionMenuItems = tmpIntvMenuItems\n    }\n    if (msgs.length > 0) {\n        msgs.forEach(m => console.log(m))\n    } else {\n        console.log(\"all data loaded from db. files not needed\")\n    }\n    return scenTypeData\n}\n\nexport const getScenarioTypeObjectByID = async (db, scenarioTypeID) => {\n    const data = await getScenarioTypeByID(db, scenarioTypeID)\n    return new ScenarioType(data)\n}\n\nexport const getScenarioTypeObject = async (db, scenarioType, schemaVersion) => {\n    const data = await getScenarioType(db, scenarioType, schemaVersion)\n    return new ScenarioType(data)\n}\n\nexport const getScenarioTypeByID = (db, scenarioTypeID) => {\n    return db.collection(\"scenario-types\")\n        .doc(scenarioTypeID)\n        .get()\n        .then(doc => {\n        const data = doc.data()\n        data.id = doc.id\n        return addMissingScenarioTypeFields(data)\n        })\n        .catch(error => {\n            console.log(error)\n            return error\n        })\n}\n\nexport const getScenarioType = (db, scenarioType, schemaVersion) => {\n    return db.collection(\"scenario-types\")\n            .where(\"name\", \"==\", scenarioType)\n            .where(\"schemaVersion\", \"==\", schemaVersion)\n            .limit(1)\n            .get()\n            .then(snapShot => {\n                if (snapShot.size === 1) {\n                    return addMissingScenarioTypeFields(snapShot.docs[0].data())\n                } else {\n                    throw new Error(\"document not found\")\n                }\n            })\n}\n\n\n\n// FIXME: this needs to go away, although I need to figure out if it's in use anywhere first\nexport const getPromptAndOptions = (scenarioTypeOrPubScenario, promptID) => {\n    const scenType = scenarioTypeOrPubScenario\n    const prompt = scenType.interventionPrompts.find(e => e.id === promptID)\n    if (!!prompt) {\n        const options = prompt.answers.map(ansID => scenType.interventionPromptAnswers.find(a => a.id === ansID))\n        prompt.options = options.map(opt => {\n            return {...opt, prompt: prompt.label}\n        })\n    }\n    return prompt\n}\n\n// moved over from apps/data-entry/src/scripts/connect-firebase\n// added 'db' as first param so that these functions can be used either from web or server firebase APIs\n/**\n * Verify document doesn't already exist in database.\n * @param {object} db instance\n * @param {string} collectionId\n * @param {string} documentId\n * @returns True if document with given ID doesn't exist yet.\n */\nexport const verifyDocument = async (db, collectionId, documentId) => {\n    const set = await db.collection(collectionId).where(\"id\", \"==\", `${documentId}`).get();\n    return set.empty;\n};\n\n// returns true if combo of name and schemaVersion fields is unique\nexport const verifyDocNameUniqueness = async (db, collectionID, candidateName, dbNameField, schemaVersion) => {\n    const snapshot = await db.collection(collectionID)\n        .where(dbNameField, \"==\", candidateName)\n        .where(\"schemaVersion\", \"==\", schemaVersion)\n        .get()\n    return snapshot.empty\n}\n\n// Upload document object to database\nexport const publishDocument = async (db, collectionId, documentObject, documentId) => {\n    documentId\n        ?\n        await db.collection(collectionId).doc(documentId).set(documentObject) :\n        await db.collection(collectionId).doc().set(documentObject);\n};\n\n// Update document with given id\nexport const updateDocument = async (db, collectionId, documentId, documentObject) => {\n    const set = await db.collection(collectionId).where(\"id\", \"==\", `${documentId}`).get();\n    set.empty ?\n        publishDocument(collectionId, documentObject) :\n        await db.collection(collectionId).doc(set.docs[0].id).set(documentObject);\n};\n\n/**\n * Will save document, using auto-generated IDs if documentObject doesn't have\n * an 'id' attribute.\n * @param {object} db instance\n * @param {string} collectionId\n * @param {object} documentObject\n */\nexport const saveDocument = async (db, collectionId, documentObject) => {\n    const doc = (!documentObject.id) ?\n        db.collection(collectionId).doc() :\n        db.collection(collectionId).doc(documentObject.id);\n    documentObject.id = doc.id;\n    await doc.set(documentObject);\n    return documentObject.id\n}\n\n/**\n * Query collection for document with id\n * @param {object} db instance\n * @param {string} collectionId\n * @param {string} documentId\n * @returns {object} Object containing document data.\n */\nexport const getDocument = async (db, collectionId, documentId) => {\n    const doc = await db.collection(collectionId).doc(documentId).get();\n    return doc.data();\n};\n\n/**\n * Query collection for document with name\n * @param {string} collectionId\n * @param {string} documentName\n * @returns {object} Object containing document data.\n */\nexport const getDocumentWithName = async (db, collectionId, documentName) => {\n    const set = await db.collection(collectionId).where(\"name\", \"==\", `${documentName}`).get();\n    return set.docs[0]?.data();\n};\n\n/**\n * Delete document from collectio\n * @param {string} collectionId\n * @param {string} documentId\n */\n\n export const deleteDocument = async (db, collectionId, documentId) => {\n    await db.collection(collectionId).doc(documentId).delete()}\n\nexport const deleteAndArchiveDocument = (db, collectionId, documentId) => {\n    if (window.confirm (\"Are you sure you want to delete this file?  It will be archived but you will need help to retrieve it.\"))\n        {const data = getDocument(db, collectionId, documentId)\n         let archiveId = \"archive-\" + collectionId\n         saveDocument (db, archiveId, data)\n         deleteDocument (db, collectionId, documentId)\n    }\n}\n\nexport const deleteDocumentNoArchive = async (db, collectionId, documentId) => {\n    if (window.confirm (\"Are you sure you want to delete this file?\"))\n        {await db.collection(collectionId).doc(documentId).delete()};\n};\n\nexport const deleteObsAndAnaDocuments = (db, id) => {\n    deleteAndArchiveDocument(db,\"logs\",id)\n    //deleteDocument(db,\"debriefing-feedback-logs\",id)\n}\n\nexport const deleteObsDocument = (db, id) => {\n    deleteAndArchiveDocument(db,\"logs\",id)\n}\n\nexport const deleteAnaDocument = (db, id) => {\n    deleteDocument(db,\"analyzed-logs\",id)\n}\n\nexport const deleteCond1CommentDocument = (db, id) => {\n    deleteDocument(db,\"cond1-comments\",id)\n}\n\nexport const deleteCommentDocument = (db, id) => {\n    deleteAndArchiveDocument(db,\"debriefing-comment-logs\",id)\n}\n\n/**\n * Pull collection from database as array of document objects\n * @param {string} collectionId\n * @returns {object[]} An array containing all of the document in the collection.\n */\nexport const getCollection = async (db, collectionId) => {\n    const collection = await db.collection(collectionId).get();\n    return collection.docs?.map(item => item.data());\n};\n\n// copied over from /apps/debriefer/src/scripts/connect-firebase and 'db' param added as first param\n\n// Get a list of document names and a copy of each document\nexport const listDocumentNames = async (db, collectionId) => {\n    let documentList = db.collectionGroup(collectionId);\n    let documentDictionary = {};\n    documentList.get().then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n            documentDictionary[doc.id] = doc.data();\n        });\n    });\n    return documentDictionary;\n}\n\nfunction exportObserverLogMetaData(doc) {\n    const data = doc.data()\n    return {\n      id: doc.id,\n      label: data.label,\n      scenario: data.scenarioName,\n      scenarioID: data.scenarioID,\n      userName: data.userName,\n      timestamp: data.timestamp,\n      classCode: data.classCode,\n      condition: data.condition,\n    };\n}\n\nexport const getLogs = (db) => {\n    return db.collection(\"logs\").get()\n        .then(querySnapshot => querySnapshot.docs.map(doc => exportObserverLogMetaData(doc)))\n        .catch(error => {\n            console.error(error)\n            return []\n        })\n}\n\nexport const getObserverLogAnalyses = (db, observerLogID) => {\n    return db.collection(\"analyzed-logs\")\n            .where(\"observerLogID\", \"==\", observerLogID)\n            .get()\n            .then(querySnapShot => {\n                return querySnapShot.docs.map(doc => {\n                    const data = doc.data()\n                    return {\n                        id: doc.id,\n                        label: data.label,\n                        observerLogID: data.observerLogID,\n                        analyzer: data.analyzer,\n                        timestamp: data.timestamp\n                    }\n                })\n            })\n            .catch(error => {\n                console.error(error)\n                return []\n            })\n}\n\nconst getPublishedScenarios = (logs, pubScens, pubScenIDs, onlyPublished) => {\n    let filtered = []\n        for (let log of logs){\n        if (pubScenIDs.includes(log.scenarioID)){\n            let version = pubScens.find(s => s.id === log.scenarioID).version\n            log.publishedVersion = version\n            filtered.push(log)\n        }\n    } \n    if (onlyPublished){\n        return filtered.sort((a,b) => a.publishedVersion.localeCompare(b.publishedVersion))}\n    else {return logs.sort((a,b) => a.publishedVersion.localeCompare(b.publishedVersion))}\n}\n\n\nexport const getObserverLogList = async (db, onlyPublished=true) => {\n    // by default, only lists observer logs which don't refer to currently \n    // published scenarioIDs\n    const pubScens = await getPubScenarios(db)\n    const pubScenIDs = pubScens.map(e => e.id)\n    return db.collection(\"logs\")\n        .get()\n        .then(querySnapshot => querySnapshot.docs.map(doc => exportObserverLogMetaData(doc)))\n        .then(logs => \n            (getPublishedScenarios(logs,pubScens,pubScenIDs,onlyPublished))\n        )\n        .catch(error => {\n            console.error(error)\n            return []\n        })\n}\n\n\nexport const getPubScenarios = (db) => {\n    let results = []\n    return db.collection(\"published-scenarios\").get()\n        .then(querySnapshot => {\n            return querySnapshot.docs.map(doc => {\n                const data = doc.data()\n                return {id: doc.id,\n                        version: data.version}\n            })\n        })\n}\n\nexport const createCond1Comments = async (db, analysis, userName) => {\n    const docRef = await db.collection(\"cond1-comments\").doc()\n    const id = docRef.id\n    const data = {\n        id,\n        comments: Array(analysis.events.length).fill(\"\"),\n        scenarioName: analysis.scenarioName,\n        classCode: analysis.classCode || \"\",\n        condition: analysis.condition || \"\",\n        label: analysis.label || null,\n        reviewer: userName,\n        id: id,\n        analysisLogID: analysis.id,\n        observerLogID: analysis.observerLogID,\n        scenarioID: analysis.scenarioID || \"\", \n        timestamp: Date()\n    }\n    await docRef.set(data)\n    return id\n}\n\nexport const createCond2Debriefing = async (db, analysis, userName) => {\n    const docRef = await db.collection(\"cond2-debriefings\").doc()\n    const id = docRef.id\n    const data = {\n        id,\n        analysisLogID: analysis.id,\n        observerLogID: analysis.observerLogID,\n        reviewer: userName,\n        comments: {},\n        timestamp: Date()\n    }\n    await docRef.set(data)\n    return id\n}\nexport const getAnalysisCond1Comments = (db, analysisLogID) => {\n    return db.collection(\"cond1-comments\")\n            .where(\"analysisLogID\", \"==\", analysisLogID)\n            .get()\n            .then(querySnapshot => {\n                return querySnapshot.docs.map(doc => {\n                    const data = doc.data()\n                    return {\n                        id: doc.id,\n                        ...data\n                    }\n                })\n            })\n}\n\nexport const getAnalysisCond2Debriefings = (db, analysisLogID) => {\n    return db.collection(\"cond2-debriefings\")\n    .where(\"analysisLogID\", \"==\", analysisLogID)\n    .get()\n    .then(querySnapshot => {\n        return querySnapshot.docs.map(doc => {\n            const data = doc.data()\n            return {\n                id: doc.id,\n                ...data\n            }\n        })\n    })\n}\n\nexport const getDebriefCommentLogs = (db) => {\n    return db.collection(\"debriefing-comment-logs\").get()\n        .then(querySnapshot => {\n            return querySnapshot.docs.map(doc => {\n                const data = doc.data()\n                return {\n                    id: doc.id,\n                    label: data.label,\n                    scenario: data.scenarioName,\n                    scenarioID: data.scenarioID,\n                    commenter: data.commenter,\n                    timestamp: data.timestamp\n                }\n            })\n        })\n}\n\nexport const getAnalyses = (db) => {\n    return db.collection(\"analyzed-logs\").get()\n        .then(querySnapshot => {\n            return querySnapshot.docs.map(doc => {\n                const data = doc.data()\n                return {\n                    id: doc.id,\n                    label: data.label,\n                    observerLogID: data.observerLogID,\n                    analyzer: data.analyzer,\n                    timestamp: data.timestamp\n                }\n            })\n        })\n}\n\nexport const getCond1CommentLogs =  (db) => {\n    return db.collection(\"cond1-comments\").get()\n        .then(querySnapshot => {\n            return querySnapshot.docs.map(doc => {\n                const data = doc.data()\n                return {\n                    id: doc.id,\n                    label: data.label,\n                    analysisLogID: data.analysisLogID,\n                    commenter: data.commenter,\n                    timestamp: data.timestamp\n                }\n            })\n        })\n}\n\nexport const getLog = (db, logID) => {\n    return db.collection(\"logs\").doc(logID).get()\n        .then((doc) => {\n            const data = doc.data()\n            if (!!data){\n                data.id = doc.id\n                return data}\n            else {return null}\n        })\n        .catch(error => {\n            console.error(error)\n            return null\n        })\n}\n\nexport const getDebriefLog = (db, logID) => {\n    return db.collection(\"debriefing-feedback-logs\").doc(logID).get()\n        .then((doc) => {\n            const data = doc.data()\n            if (!!data){\n                data.id = doc.id\n                return data}\n            else {return null}\n        })\n        .catch(error => {\n            console.error(error)\n            return null\n        })\n}\n\nexport const getDebriefCommentLog =  (db, logID) => {\n    return db.collection(\"debriefing-comment-logs\").doc(logID).get()\n        .then((doc) => {\n            const data = doc.data()\n            if (!!data){\n                data.id = doc.id\n                return data}\n            else {return false}\n        })\n        .catch(error => {\n            console.error(error)\n            return null\n        })\n}\n\n\n\nexport const getAnalysisLog = (db, logID) => {\n    return db.collection(\"analyzed-logs\").doc(logID).get()\n        .then((doc) => {\n            const data = doc.data()\n            if (!!data){\n                //data.id = doc.id\n                return data\n            }\n            else {return null}\n        })\n        .catch(error => {\n            console.error(error)\n            return null\n        })\n}\n\nexport const getCond1CommentLog =  (db, logID) => {\n    return db.collection(\"cond1-comments\").doc(logID).get()\n        .then((doc) => {\n            const data = doc.data()\n            if (!!data){\n                data.id = doc.id\n                return data}\n            else {return null}\n        })\n        .catch(error => {\n            console.error(error)\n            return null\n        })\n}\n\nexport const getCond2DebriefingLog = (db, debriefingID) => {\n    return db.collection(\"cond2-debriefings\").doc(debriefingID).get()\n        .then((doc => {\n            const data = doc.data()\n            return {\n                id: doc.id,\n                ...data\n            }\n        }))\n}\n\nexport const getObserverLog = (db, logID) => {\n    return db.collection(\"logs\").doc(logID).get()\n        .then((doc) => {\n            const data = doc.data()\n            if (!!data){\n                data.id = doc.id\n                return data}\n            else {return null}\n        })\n        .catch(error => {\n            console.error(error)\n            return null\n        })\n}\n\n\nexport const getDebriefLogWithName = async (db, documentName) => {\n    const set = await db.collection(\"debriefing-feedback-logs\").where(\"ObserverFileName\", \"==\", `${documentName}`).get();\n    return set.docs[0]?.data();\n};\n\nexport const createInterventionVariant = (distPromptIds2OptIds) => {\n    // the list of opt IDs mapped to each distPromptID needs to be sorted in order\n    // to make them comparable\n    const retVal = {}\n    Object.entries(distPromptIds2OptIds).forEach(([distPromptID, optionsArray]) => {\n        retVal[distPromptID] = optionsArray.sort()\n    })\n    return retVal\n}\n\nexport const interventionVariantsAreEqual = (intvVariant1, intvVariant2) => {\n    return _.isEqual(intvVariant1, intvVariant2)\n}\n\n\nexport const intvVariant2JSON = (intvVariant) => {\n    return jsonStableStringify(intvVariant)\n}","const INTV_MENU_ITEMS = [\n    {\n        \"depth\": 1,\n        \"type\": \"heading\",\n        \"id\": \"heading-als\",\n        \"label\": \"ALS\",\n        intvCategoryID: \"intv-cat-airway\"\n    },\n    {\n        \"depth\": 1,\n        \"type\": \"heading\",\n        \"id\": \"heading-amputation\",\n        \"label\": \"Manage amputation\",\n        intvCategoryID: \"intv-cat-manage-wounds-and-specific-injuries\"\n    },\n    {\n        \"depth\": 1,\n        \"type\": \"heading\",\n        \"id\": \"heading-bls\",\n        \"label\": \"BLS\",\n        intvCategoryID: \"intv-cat-airway\"\n    },\n    {\n        \"depth\": 2,\n        \"type\": \"heading\",\n        \"id\": \"heading-crico\",\n        \"label\": \"Cricothyrotomy\",\n        intvCategoryID: \"intv-cat-airway\"\n    },\n    {\n        \"depth\": 2,\n        \"type\": \"heading\",\n        \"id\": \"heading-establish-patency\",\n        \"label\": \"Establish patency\",\n        intvCategoryID: \"intv-cat-airway\"\n    },\n    {\n        \"depth\": 2,\n        \"type\": \"heading\",\n        \"id\": \"heading-insert-adjunct\",\n        \"label\": \"Insert adjunct\",\n        intvCategoryID: \"intv-cat-airway\"\n    },\n    {\n        \"depth\": 2,\n        \"type\": \"heading\",\n        \"id\": \"heading-intubation\",\n        \"label\": \"Intubation\",\n        intvCategoryID: \"intv-cat-airway\"\n    },\n    {\n        \"depth\": 1,\n        \"type\": \"heading\",\n        \"id\": \"heading-manage-internal-bleeding\",\n        \"label\": \"Manage suspected internal bleeding\",\n        intvCategoryID: \"intv-cat-circulation-management\"\n    },\n    {\n        \"depth\": 1,\n        \"type\": \"heading\",\n        \"id\": \"heading-manage-shock\",\n        \"label\": \"Manage hemorrhagic shock\",\n        intvCategoryID: \"intv-cat-circulation-management\"\n    },\n    {\n        \"depth\": 3,\n        \"type\": \"heading\",\n        \"id\": \"heading-medication-facilitated-intubation\",\n        \"label\": \"Medication Facilitated Intubation\",\n        intvCategoryID: \"intv-cat-airway\"\n    },\n    {\n        \"depth\": 2,\n        \"type\": \"heading\",\n        \"id\": \"heading-open-airway\",\n        \"label\": \"Open airway\",\n        intvCategoryID: \"intv-cat-airway\"\n    },\n    {\n        \"depth\": 3,\n        \"type\": \"heading\",\n        \"id\": \"heading-remove-foreign-body-obstructions\",\n        \"label\": \"Remove foreign body obstructions\",\n        intvCategoryID: \"intv-cat-airway\"\n    },\n    {\n         \"depth\": 1,\n         \"type\": \"heading\",\n         \"id\": \"heading-severe-external-bleeding\",\n         \"label\": \"Manage severe external bleeding\",\n         intvCategoryID: \"intv-cat-circulation-management\"\n    },\n    {\n        \"depth\": 1,\n        \"type\": \"heading\",\n        \"id\": \"heading-transfer\",\n        \"label\": \"Transfer patient to EMS vehicle\",\n        intvCategoryID: \"intv-cat-extrication-and-transport\"\n    },\n    {\n        \"depth\": 1,\n        \"type\": \"heading\",\n        \"id\": \"heading-transport\",\n        \"label\": \"Transport to care facility\",\n        intvCategoryID: \"intv-cat-extrication-and-transport\"\n    },\n    {\n        \"depth\": 3,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-advanced-airway-adjunct\",\n        interventionID: \"intv-advanced-airway-adjunct\",\n        intvCategoryID: \"intv-cat-airway\"\n    },\n    {\n        \"depth\": 3,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-airway-patency-technique-suction-airway\",\n        interventionID: \"intv-airway-patency-technique-suction-airway\",\n        intvCategoryID: \"intv-cat-airway\"\n    },\n    {\n        \"depth\": 1,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-apply-sterile-dressings\",\n        interventionID: \"intv-apply-sterile-dressings\",\n        intvCategoryID: \"intv-cat-manage-wounds-and-specific-injuries\"\n    },\n    {\n        \"depth\": 4,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-back-blows-and-chest-thrusts\",\n        interventionID: \"intv-back-blows-and-chest-thrusts\",\n        intvCategoryID: \"intv-cat-airway\"\n    },\n    {\n        \"depth\": 2,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-control-severe-bleeding-technique-direct-pressure\",\n        interventionID: \"intv-control-severe-bleeding-technique-direct-pressure\",\n        intvCategoryID: \"intv-cat-circulation-management\"\n    },\n    {\n        \"depth\": 2,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-control-severe-bleeding-technique-tourniquet\",\n        interventionID: \"intv-control-severe-bleeding-technique-tourniquet\",\n        intvCategoryID: \"intv-cat-circulation-management\"\n    },\n    {\n        \"depth\": 2,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-control-severe-bleeding-technique-2nd-tourniquet\",\n        interventionID: \"intv-control-severe-bleeding-technique-2nd-tourniquet\",\n        intvCategoryID: \"intv-cat-circulation-management\"\n    },\n    {\n        \"depth\": 2,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-control-severe-bleeding-technique-pack-wound-with-gauze\",\n        interventionID: \"intv-control-severe-bleeding-technique-pack-wound-with-gauze\",\n        intvCategoryID: \"intv-cat-circulation-management\"\n    },\n    {\n        \"depth\": 2,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-control-severe-bleeding-technique-pressure-bandage\",\n        interventionID: \"intv-control-severe-bleeding-technique-pressure-bandage\",\n        intvCategoryID: \"intv-cat-circulation-management\"\n    },\n    {\n        \"depth\": 2,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-control-severe-bleeding-technique-load-and-go\",\n        interventionID: \"intv-control-severe-bleeding-technique-load-and-go\",\n        intvCategoryID: \"intv-cat-circulation-management\"\n    },\n    {\n        \"depth\": 2,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-control-shock-technique-keep-patient-warm\",\n        interventionID: \"intv-control-shock-technique-keep-patient-warm\",\n        intvCategoryID: \"intv-cat-circulation-management\"\n    },\n    {\n        \"depth\": 2,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-control-shock-technique-administer-high-concentration-o2\",\n        interventionID: \"intv-control-shock-technique-administer-high-concentration-o2\",\n        intvCategoryID: \"intv-cat-circulation-management\"\n    },\n    {\n        \"depth\": 2,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-control-shock-technique-place-patient-supine-position\",\n        interventionID: \"intv-control-shock-technique-place-patient-supine-position\",\n        intvCategoryID: \"intv-cat-circulation-management\"\n    },\n    {\n        \"depth\": 2,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-control-shock-technique-administer-iv-boluses\",\n        interventionID: \"intv-control-shock-technique-administer-iv-boluses\",\n        intvCategoryID: \"intv-cat-circulation-management\"\n    },\n    {\n        \"depth\": 4,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-heimlich-maneuver\",\n        interventionID: \"intv-heimlich-maneuver\",\n        intvCategoryID: \"intv-cat-airway\"\n    },\n    {\n        \"depth\": 2,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-keep-body-part-cool\",\n        interventionID: \"intv-keep-body-part-cool\",\n        intvCategoryID: \"intv-cat-manage-wounds-and-specific-injuries\"\n    },\n    {\n        \"depth\": 4,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-magill-forceps-assisted\",\n        interventionID: \"intv-magill-forceps-assisted\",\n        intvCategoryID: \"intv-cat-airway\"\n    },\n    {\n        \"depth\": 4,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-manual-finger-sweep\",\n        interventionID: \"intv-manual-finger-sweep\",\n        intvCategoryID: \"intv-cat-airway\"\n    },\n    {\n        \"depth\": 3,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-nasopharyngeal-airway\",\n        interventionID: \"intv-nasopharyngeal-airway\",\n        intvCategoryID: \"intv-cat-airway\"\n    },\n    {\n        \"depth\": 3,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-nasotracheal-intubation\",\n        interventionID: \"intv-nasotracheal-intubation\",\n        interventionID: \"intv-nasotracheal-intubation\",\n        interventionID: \"intv-nasotracheal-intubation\",\n        intvCategoryID: \"intv-cat-airway\"\n    },\n    {\n        \"depth\": 3,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-needle-cricothyrotomy\",\n        interventionID: \"intv-needle-cricothyrotomy\",\n        intvCategoryID: \"intv-cat-airway\"\n    },\n    {\n        \"depth\": 1,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-occlusive-dressing\",\n        interventionID: \"intv-occlusive-dressing\",\n        intvCategoryID: \"intv-cat-manage-thoracic-trauma\"\n    },\n    {\n        \"depth\": 3,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-open-airway-method-head-tilt\",\n        interventionID: \"intv-open-airway-method-head-tilt\",\n        intvCategoryID: \"intv-cat-airway\"\n    },\n    {\n        \"depth\": 3,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-open-airway-method-modified-jaw-thrust\",\n        interventionID: \"intv-open-airway-method-modified-jaw-thrust\",\n        intvCategoryID: \"intv-cat-airway\"\n    },\n    {\n        \"depth\": 3,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-oropharyngeal-airway\",\n        interventionID: \"intv-oropharyngeal-airway\",\n        intvCategoryID: \"intv-cat-airway\"\n    },\n    {\n        \"depth\": 3,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-orotracheal-intubation\",\n        interventionID: \"intv-orotracheal-intubation\",\n        intvCategoryID: \"intv-cat-airway\"\n    },\n    {\n        \"depth\": 2,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-place-body-part-in-bag\",\n        interventionID: \"intv-place-body-part-in-bag\",\n        intvCategoryID: \"intv-cat-manage-wounds-and-specific-injuries\"\n    },\n    {\n        \"depth\": 2,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-place-immobilized-patient-on-stretcher\",\n        interventionID: \"intv-place-immobilized-patient-on-stretcher\",\n        intvCategoryID: \"intv-cat-extrication-and-transport\"\n    },\n    {\n        \"depth\": 1,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-pleural-decompression\",\n        interventionID: \"intv-pleural-decompression\",\n        intvCategoryID: \"intv-cat-manage-thoracic-trauma\"\n    },\n    {\n        \"depth\": 1,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-prepare-and-administer-pain-nausea-vomiting-medications\",\n        interventionID: \"intv-prepare-and-administer-pain-nausea-vomiting-medications\",\n        intvCategoryID: \"intv-cat-manage-pain-nausea-vomiting\"\n    },\n    {\n        \"depth\": 1,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-prepare-and-administer-sedative\",\n        interventionID: \"intv-prepare-and-administer-sedative\",\n        intvCategoryID: \"intv-cat-sedate-agitated-or-combatitive-patient\"\n    },\n    {\n        \"depth\": 4,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-rapid-sequence-intubation\",\n        interventionID: \"intv-rapid-sequence-intubation\",\n        interventionID: \"intv-rapid-sequence-intubation\",\n        interventionID: \"intv-rapid-sequence-intubation\",\n        intvCategoryID: \"intv-cat-airway\"\n    },\n    {\n        \"depth\": 2,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-retrieve-amputated-body-part\",\n        interventionID: \"intv-retrieve-amputated-body-part\",\n        intvCategoryID: \"intv-cat-manage-wounds-and-specific-injuries\"\n    },\n    {\n        \"depth\": 4,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-sedation-assisted-intubation\",\n        interventionID: \"intv-sedation-assisted-intubation\",\n        intvCategoryID: \"intv-cat-airway\"\n    },\n    {\n        \"depth\": 4,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-slat\",\n        interventionID: \"intv-slat\",\n        intvCategoryID: \"intv-cat-airway\"\n    },\n    {\n        \"depth\": 1,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-spinal-immobilization-technique-attach-cid\",\n        interventionID: \"intv-spinal-immobilization-technique-attach-cid\",\n        intvCategoryID: \"intv-cat-spinal-motion-restriction\"\n    },\n    {\n        \"depth\": 1,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-spinal-immobilization-technique-cervical-collar\",\n        interventionID: \"intv-spinal-immobilization-technique-cervical-collar\",\n        intvCategoryID: \"intv-cat-spinal-motion-restriction\"\n    },\n    {\n        \"depth\": 1,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-spinal-immobilization-technique-manual-c-spine\",\n        interventionID: \"intv-spinal-immobilization-technique-manual-c-spine\",\n        intvCategoryID: \"intv-cat-manual-c-spine-stabilization\"\n    },\n    {\n        \"depth\": 1,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-spinal-immobilization-technique-manual-c-spine2\",\n        interventionID: \"intv-spinal-immobilization-technique-manual-c-spine\",\n        intvCategoryID: \"intv-cat-spinal-motion-restriction\"\n    },\n    {\n        \"depth\": 1,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-spinal-immobilization-technique-transfer-to-device\",\n        interventionID: \"intv-spinal-immobilization-technique-transfer-to-device\",\n        intvCategoryID: \"intv-cat-spinal-motion-restriction\"\n    },\n    {\n        \"depth\": 2,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-splint-fractures\",\n        interventionID: \"intv-splint-fractures\",\n        intvCategoryID: \"intv-cat-circulation-management\"\n    },\n    {\n        \"depth\": 1,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-splint-fractures2\",\n        interventionID: \"intv-splint-fractures\",\n        intvCategoryID: \"intv-cat-manage-wounds-and-specific-injuries\"\n    },\n    {\n        \"depth\": 2,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-sterile-dressing-soft-tissue\",\n        interventionID: \"intv-sterile-dressing-soft-tissue\",\n        intvCategoryID: \"intv-cat-manage-wounds-and-specific-injuries\"\n    },\n    {\n        \"depth\": 1,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-supplemental-oxygen-device-nasal-cannula\",\n        interventionID: \"intv-supplemental-oxygen-device-nasal-cannula\",\n        intvCategoryID: \"intv-cat-manage-oxygenation-and-ventilation\"\n    },\n    {\n        \"depth\": 1,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-supplemental-oxygen-device-non-rebreather-mask\",\n        interventionID: \"intv-supplemental-oxygen-device-non-rebreather-mask\",\n        intvCategoryID: \"intv-cat-manage-oxygenation-and-ventilation\"\n    },\n    {\n        \"depth\": 3,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-surgical-cricothyrotomy\",\n        interventionID: \"intv-surgical-cricothyrotomy\",\n        intvCategoryID: \"intv-cat-airway\"\n    },\n    {\n        \"depth\": 2,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-transfers-patient-method-walk-patient\",\n        interventionID: \"intv-transfers-patient-method-walk-patient\",\n        intvCategoryID: \"intv-cat-extrication-and-transport\"\n    },\n    {\n        \"depth\": 2,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-transfers-patient-method-place-directly-on-stretcher\",\n        interventionID: \"intv-transfers-patient-method-place-directly-on-stretcher\",\n        intvCategoryID: \"intv-cat-extrication-and-transport\"\n    },\n    {\n        \"depth\": 2,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-transport\",\n        interventionID: \"intv-transport\",\n        intvCategoryID: \"intv-cat-extrication-and-transport\"\n    },\n    {\n        \"depth\": 2,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-transport-body-part-to-receiving-facility\",\n        interventionID: \"intv-transport-body-part-to-receiving-facility\",\n        intvCategoryID: \"intv-cat-manage-wounds-and-specific-injuries\"\n    },\n    {\n        \"depth\": 1,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-ventilation-technique-bag-valve-mask\",\n        interventionID: \"intv-ventilation-technique-bag-valve-mask\",\n        intvCategoryID: \"intv-cat-manage-oxygenation-and-ventilation\"\n    },\n    {\n        \"depth\": 2,\n        \"type\": \"intervention\",\n        \"id\": \"menu-item-wrap-body-part-in-saline-soaked-gauze\",\n        interventionID: \"intv-wrap-body-part-in-saline-soaked-gauze\",\n        intvCategoryID: \"intv-cat-manage-wounds-and-specific-injuries\"\n    }\n]\n\nexport default INTV_MENU_ITEMS","const INTV_MENU_CATS = [\n    {\n        \"id\": \"intv-cat-manual-c-spine-stabilization\",\n        \"label\": \"Manual c-spine stabilization\",\n        \"items\": [\n            \"menu-item-spinal-immobilization-technique-manual-c-spine\"\n        ]\n    },\n    {\n        \"id\": \"intv-cat-airway\",\n        \"label\": \"Airway\",\n        \"items\": [\n            \"heading-bls\",\n            \"heading-open-airway\",\n            \"menu-item-open-airway-method-head-tilt\",\n            \"menu-item-open-airway-method-modified-jaw-thrust\",\n            \"heading-establish-patency\",\n            \"menu-item-airway-patency-technique-suction-airway\",\n            \"heading-remove-foreign-body-obstructions\",\n            \"menu-item-manual-finger-sweep\",\n            \"menu-item-magill-forceps-assisted\",\n            \"menu-item-slat\",\n            \"menu-item-heimlich-maneuver\",\n            \"menu-item-back-blows-and-chest-thrusts\",\n            \"heading-insert-adjunct\",\n            \"menu-item-oropharyngeal-airway\",\n            \"menu-item-nasopharyngeal-airway\",\n            \"heading-als\",\n            \"heading-intubation\",\n            \"menu-item-advanced-airway-adjunct\",\n            \"menu-item-orotracheal-intubation\",\n            \"menu-item-nasotracheal-intubation\",\n            \"heading-medication-facilitated-intubation\",\n            \"menu-item-rapid-sequence-intubation\",\n            \"menu-item-sedation-assisted-intubation\",\n            \"heading-crico\",\n            \"menu-item-needle-cricothyrotomy\",\n            \"menu-item-surgical-cricothyrotomy\",\n        ]\n    },\n    {\n        \"id\": \"intv-cat-manage-oxygenation-and-ventilation\",\n        \"label\": \"Manage oxygenation and ventilation\",\n        \"items\": [\n            \"menu-item-supplemental-oxygen-device-nasal-cannula\",\n            \"menu-item-supplemental-oxygen-device-non-rebreather-mask\",\n            \"menu-item-ventilation-technique-bag-valve-mask\",\n        ]\n    },\n    {\n        \"id\": \"intv-cat-circulation-management\",\n        \"label\": \"Circulation management\",\n        \"items\": [\n            \"heading-severe-external-bleeding\",\n            \"menu-item-control-severe-bleeding-technique-direct-pressure\",\n            \"menu-item-control-severe-bleeding-technique-tourniquet\",\n            \"menu-item-control-severe-bleeding-technique-2nd-tourniquet\",\n            \"menu-item-control-severe-bleeding-technique-pack-wound-with-gauze\",\n            \"menu-item-control-severe-bleeding-technique-pressure-bandage\",\n            \"menu-item-control-severe-bleeding-technique-load-and-go\",\n            \"heading-manage-internal-bleeding\",\n            \"menu-item-splint-fractures\",\n            \"heading-manage-shock\",\n            \"menu-item-control-shock-technique-keep-patient-warm\",\n            \"menu-item-control-shock-technique-administer-high-concentration-o2\",\n            \"menu-item-control-shock-technique-place-patient-supine-position\",\n            \"menu-item-control-shock-technique-administer-iv-boluses\",\n        ]\n    },\n    {\n        \"id\": \"intv-cat-manage-thoracic-trauma\",\n        \"label\": \"Manage thoracic trauma\",\n        \"items\": [\n                \"menu-item-occlusive-dressing\",\n                \"menu-item-pleural-decompression\",\n        ]\n    },\n    {\n        \"id\": \"intv-cat-spinal-motion-restriction\",\n        \"label\": \"Spinal motion restriction\",\n        \"items\": [\n            \"menu-item-spinal-immobilization-technique-manual-c-spine2\",\n            \"menu-item-spinal-immobilization-technique-cervical-collar\",\n            \"menu-item-spinal-immobilization-technique-transfer-to-device\",\n            \"menu-item-spinal-immobilization-technique-attach-cid\",\n        ]\n    },\n    {\n        \"id\": \"intv-cat-extrication-and-transport\",\n        \"label\": \"Extrication and transport\",\n        \"items\": [\n            \"heading-transfer\",\n            \"menu-item-transfers-patient-method-walk-patient\",\n            \"menu-item-transfers-patient-method-place-directly-on-stretcher\",\n            \"menu-item-place-immobilized-patient-on-stretcher\",\n            \"heading-transport\",\n            \"menu-item-transport\",\n        ]\n    },\n    {\n        \"id\": \"intv-cat-manage-wounds-and-specific-injuries\",\n        \"label\": \"Manage wounds and specific injuries\",\n        \"items\": [\n            \"menu-item-apply-sterile-dressings\",\n            \"menu-item-splint-fractures2\",\n            \"heading-amputation\",\n            \"menu-item-sterile-dressing-soft-tissue\",\n            \"menu-item-retrieve-amputated-body-part\",\n            \"menu-item-wrap-body-part-in-saline-soaked-gauze\",\n            \"menu-item-place-body-part-in-bag\",\n            \"menu-item-keep-body-part-cool\",\n            \"menu-item-transport-body-part-to-receiving-facility\",\n        ]\n    },\n    {\n        \"id\": \"intv-cat-manage-pain-nausea-vomiting\",\n        \"label\": \"Manage pain, nausea, vomiting\",\n        \"items\": [\n            \"menu-item-prepare-and-administer-pain-nausea-vomiting-medications\",\n        ]\n    },\n    {\n        \"id\": \"intv-cat-sedate-agitated-or-combatitive-patient\",\n        \"label\": \"Sedate agitated or combatitive patient\",\n        \"items\": [\n            \"menu-item-prepare-and-administer-sedative\",\n        ]\n    }\n]\n\nexport default INTV_MENU_CATS","const INTV_PROMPT_ANSWERS = [\n    {\n        id: \"answer-wound-location-head\",\n        label: \"Wound located at head\",\n        abbrLabel: \"Head\",\n        promptID: \"prompt-wound-location\"\n    }, {\n        id: \"answer-wound-location-neck\",\n        label: \"Wound located at neck\",\n        abbrLabel: \"Neck\",\n        promptID: \"prompt-wound-location\"\n    }, {\n        id: \"answer-wound-location-chest\",\n        label: \"Wound located at chest\",\n        abbrLabel: \"Chest\",\n        promptID: \"prompt-wound-location\"\n    }, {\n        id: \"answer-wound-location-abdomen-pelvis\",\n        label: \"Wound located at abdomen/pelvis\",\n        abbrLabel: \"Abdomen/Pelvis\",\n        promptID: \"prompt-wound-location\"\n    }, {\n        id: \"answer-wound-location-posterior\",\n        label: \"Wound located at posterior thorax, lumbar, or buttocks\",\n        abbrLabel: \"Posterior\",\n        promptID: \"prompt-wound-location\"\n    }, {\n        id: \"answer-wound-location-genitalia\",\n        label: \"Wound located at genitalia\",\n        abbrLabel: \"Genitalia\",\n        promptID: \"prompt-wound-location\"\n    }, {\n        id: \"answer-wound-location-left-lower-extremity\",\n        label: \"Wound located at left lower extremity\",\n        abbrLabel: \"Left lower extremity\",\n        promptID: \"prompt-wound-location\"\n    }, {\n        id: \"answer-wound-location-right-lower-extremity\",\n        label: \"Wound located at right lower extremity\",\n        abbrLabel: \"Right lower extremity\",\n        promptID: \"prompt-wound-location\"\n    }, {\n        id: \"answer-wound-location-left-upper-extremity\",\n        label: \"Wound located at left upper extremity\",\n        abbrLabel: \"Left upper extremity\",\n        promptID: \"prompt-wound-location\"\n    }, {\n        id: \"answer-wound-location-right-upper-extremity\",\n        label: \"Wound located at right upper extremity\",\n        abbrLabel: \"Right upper-extremity\",\n        promptID: \"prompt-wound-location\"\n    }, {\n        id: \"answer-wound-location-other\",\n        label: \"Other wound location\",\n        abbrLabel: \"Other\",\n        promptID: \"prompt-wound-location\"\n    },\n\n    {\n        id: \"answer-wound-locations-head\",\n        label: \"Wound located at head\",\n        abbrLabel: \"Head\",\n        promptID: \"prompt-wound-locations\"\n    }, {\n        id: \"answer-wound-locations-neck\",\n        label: \"Wound located at neck\",\n        abbrLabel: \"Neck\",\n        promptID: \"prompt-wound-locations\"\n    }, {\n        id: \"answer-wound-locations-chest\",\n        label: \"Wound located at chest\",\n        abbrLabel: \"Chest\",\n        promptID: \"prompt-wound-locations\"\n    }, {\n        id: \"answer-wound-locations-abdomen-pelvis\",\n        label: \"Wound located at abdomen/pelvis\",\n        abbrLabel: \"Abdomen/Pelvis\",\n        promptID: \"prompt-wound-locations\"\n    }, {\n        id: \"answer-wound-locations-posterior\",\n        label: \"Wound located at posterior thorax, lumbar, or buttocks\",\n        abbrLabel: \"Posterior\",\n        promptID: \"prompt-wound-locations\"\n    }, {\n        id: \"answer-wound-locations-genitalia\",\n        label: \"Wound located at genitalia\",\n        abbrLabel: \"Genitalia\",\n        promptID: \"prompt-wound-locations\"\n    }, {\n        id: \"answer-wound-locations-left-lower-extremity\",\n        label: \"Wound located at left lower extremity\",\n        abbrLabel: \"Left lower extremity\",\n        promptID: \"prompt-wound-locations\"\n    }, {\n        id: \"answer-wound-locations-right-lower-extremity\",\n        label: \"Wound located at right lower extremity\",\n        abbrLabel: \"Right lower extremity\",\n        promptID: \"prompt-wound-locations\"\n    }, {\n        id: \"answer-wound-locations-left-upper-extremity\",\n        label: \"Wound located at left upper extremity\",\n        abbrLabel: \"Left upper extremity\",\n        promptID: \"prompt-wound-locations\"\n    }, {\n        id: \"answer-wound-locations-right-upper-extremity\",\n        label: \"Wound located at right upper extremity\",\n        abbrLabel: \"Right upper-extremity\",\n        promptID: \"prompt-wound-locations\"\n    }, {\n        id: \"answer-wound-locations-other\",\n        label: \"Other wound location\",\n        abbrLabel: \"Other\",\n        promptID: \"prompt-wound-locations\"\n    },\n\n\n    {\n        \"id\": \"answer-airway-patency-suction-yankauer\",\n        \"label\": \"Yankauer\",\n        \"promptID\": \"prompt-airway-patency-suction-device\"\n    }, {\n        \"id\": \"answer-airway-patency-suction-long-multiuse\",\n        \"label\": \"Long, multiuse\",\n        \"promptID\": \"prompt-airway-patency-suction-device\"\n    }, {\n        \"id\": \"answer-airway-patency-suction-other\",\n        \"label\": \"Other\",\n        \"promptID\": \"prompt-airway-patency-suction-device\"\n    },\n\n    {\n        \"id\": \"answer-alternative-rescue-airway-type-ett\",\n        \"label\": \"Endotracheal tube (ETT)\",\n        \"promptID\": \"prompt-advanced-airway-adjunct-type\"\n    }, {\n        \"id\": \"answer-alternative-rescue-airway-type-combitube\",\n        \"label\": \"Combitube\",\n        \"promptID\": \"prompt-advanced-airway-adjunct-type\"\n    }, {\n        \"id\": \"answer-alternative-rescue-airway-type-lta\",\n        \"label\": \"Laryngeal tube airway (LTA; King tube)\",\n        \"promptID\": \"prompt-advanced-airway-adjunct-type\"\n    }, {\n        \"id\": \"answer-alternative-rescue-airway-type-lma\",\n        \"label\": \"Laryngeal mask airway (LMA)\",\n        \"promptID\": \"prompt-advanced-airway-adjunct-type\"\n    }, {\n        \"id\": \"answer-alternative-rescue-airway-type-igel\",\n        \"label\": \"Igel\",\n        \"promptID\": \"prompt-advanced-airway-adjunct-type\"\n    }, {\n        \"id\": \"answer-alternative-rescue-airway-type-other\",\n        \"label\": \"Other\",\n        \"promptID\": \"prompt-advanced-airway-adjunct-type\"\n    },\n\n    {\n        \"id\": \"answer-alternative-airway-tube-size-7\",\n        \"promptID\": \"prompt-advanced-airway-tube-size\",\n        \"label\": \"7.0\"\n    }, {\n        \"id\": \"answer-alternative-airway-tube-size-8\",\n        \"promptID\": \"prompt-advanced-airway-tube-size\",\n        \"label\": \"8.0\"\n    }, {\n        \"id\": \"answer-alternative-airway-tube-size-age-div-4-plus-4\",\n        \"promptID\": \"prompt-advanced-airway-tube-size\",\n        \"label\": \"((age/4 + 4))\"\n    }, {\n        \"id\": \"answer-alternative-airway-tube-size--age-div-4-plus-4-minus-5\",\n        \"promptID\": \"prompt-advanced-airway-tube-size\",\n        \"label\": \"((age/4 + 4) - 5\"\n    }, {\n        \"id\": \"answer-alternative-airway-tube-size-37f\",\n        \"promptID\": \"prompt-advanced-airway-tube-size\",\n        \"label\": \"37F\"\n    },{\n        \"id\": \"answer-alternative-airway-tube-size-41f\",\n        \"promptID\": \"prompt-advanced-airway-tube-size\",\n        \"label\": \"41F\"\n    }, {\n        \"id\": \"answer-alternative-airway-tube-size-0\",\n        \"promptID\": \"prompt-advanced-airway-tube-size\",\n        \"label\": \"0\"\n    }, {\n        \"id\": \"answer-alternative-airway-tube-size-1\",\n        \"promptID\": \"prompt-advanced-airway-tube-size\",\n        \"label\": \"1\"\n    }, {\n        \"id\": \"answer-alternative-airway-tube-size-1-5\",\n        \"promptID\": \"prompt-advanced-airway-tube-size\",\n        \"label\": \"1.5\"\n    }, {\n        \"id\": \"answer-alternative-airway-tube-size-2\",\n        \"promptID\": \"prompt-advanced-airway-tube-size\",\n        \"label\": \"2\"\n    }, {\n        \"id\": \"answer-alternative-airway-tube-size-2-5\",\n        \"promptID\": \"prompt-advanced-airway-tube-size\",\n        \"label\": \"2.5\"\n    }, {\n        \"id\": \"answer-alternative-airway-tube-size-3\",\n        \"promptID\": \"prompt-advanced-airway-tube-size\",\n        \"label\": \"3\"\n    },{\n        \"id\": \"answer-alternative-airway-tube-size-4\",\n        \"promptID\": \"prompt-advanced-airway-tube-size\",\n        \"label\": \"4\"\n    },{\n        \"id\": \"answer-alternative-airway-tube-size-5\",\n        \"promptID\": \"prompt-advanced-airway-tube-size\",\n        \"label\": \"5\"\n    },{\n        \"id\": \"answer-alternative-airway-tube-size-6\",\n        \"promptID\": \"prompt-advanced-airway-tube-size\",\n        \"label\": \"6\"\n    },{\n        \"id\": \"answer-alternative-airway-tube-size-other\",\n        \"promptID\": \"prompt-advanced-airway-tube-size\",\n        \"label\": \"Other\"\n    },\n\n    {\n        \"id\": \"answer-orotracheal-intubation-tube-insertion-depth-21cm\",\n        \"promptID\": \"prompt-orotracheal-intubation-tube-insertion-depth\",\n        \"label\": \"21cm\"\n    },{\n        \"id\": \"answer-orotracheal-intubation-tube-insertion-depth-23cm\",\n        \"promptID\": \"prompt-orotracheal-intubation-tube-insertion-depth\",\n        \"label\": \"23cm\"\n    },{\n        \"id\": \"answer-orotracheal-intubation-tube-insertion-depth-3-times-tube-size\",\n        \"promptID\": \"prompt-orotracheal-intubation-tube-insertion-depth\",\n        \"label\": \"3 x tube size\"\n    },{\n        \"id\": \"answer-orotracheal-intubation-tube-insertion-depth-other\",\n        \"promptID\": \"prompt-orotracheal-intubation-tube-insertion-depth\",\n        \"label\": \"Other\"\n    },\n\n    {\n        \"id\": \"answer-nasotracheal-intubation-tube-size-6-to-6-5\",\n        \"promptID\": \"prompt-nasotracheal-intubation-tube-size\",\n        \"label\": \"6.0 - 6.5\"\n    },\n    {\n        \"id\": \"answer-nasotracheal-intubation-tube-size-7-to-7-5\",\n        \"promptID\": \"prompt-nasotracheal-intubation-tube-size\",\n        \"label\": \"7.0 - 7.5\"\n    },{\n        \"id\": \"answer-nasotracheal-intubation-tube-size-age-div-4+4-minus1\",\n        \"promptID\": \"prompt-nasotracheal-intubation-tube-size\",\n        \"label\": \"(age/4 - 4)-1\"\n    },{\n        \"id\": \"answer-nasotracheal-intubation-tube-size-age-div-4+4-minus0-5\",\n        \"promptID\": \"prompt-nasotracheal-intubation-tube-size\",\n        \"label\": \"(age/4 -4) - 0.5\"\n    },{\n        \"id\": \"answer-nasotracheal-intubation-tube-size-0-5-1cm-less-than-oro-size\",\n        \"promptID\": \"prompt-nasotracheal-intubation-tube-size\",\n        \"label\": \".5 - 1cm less then size for orotracheal tube size\"\n    },{\n        \"id\": \"answer-nasotracheal-intubation-tube-size-other\",\n        \"promptID\": \"prompt-nasotracheal-intubation-tube-size\",\n        \"label\": \"Other\"\n    },\n\n    {\n        \"id\": \"answer-nasal-cannula-flow-rate-1-6-lpm\",\n        \"promptID\": \"prompt-nasal-cannula-flow-rate\",\n        \"label\": \"Nasal cannula flow rate 1-6 liters/min\",\n        \"abbrLabel\": \"1-6 liters/min\"\n    },{\n        \"id\": \"answer-nasal-cannula-flow-rate-other\",\n        \"promptID\": \"prompt-nasal-cannula-flow-rate\",\n        \"label\": \"Nasal cannula flow rate other\",\n        \"abbrLabel\": \"Other\"\n    },\n\n    {\n        \"id\": \"answer-nasal-cannula-target-saturation-gt-90-pct\",\n        \"promptID\": \"prompt-nasal-cannula-target-saturation\",\n        \"label\": \"Nasal cannula target saturation: 90% or greater\",\n        \"abbrLabel\": \"90% or greater\"\n    },{\n        \"id\": \"answer-nasal-cannula-target-saturation-other\",\n        \"promptID\": \"prompt-nasal-cannula-target-saturation\",\n        \"label\": \"Nasal cannula target saturation: other\",\n        \"abbrLabel\": \"Other\"\n    },\n\n    {\n        \"id\": \"answer-non-rebreather-mask-flow-rate-10-15-liters-min\",\n        \"promptID\": \"prompt-non-rebreather-mask-flow-rate\",\n        \"label\": \"Non-rebreather mask flow rate 10-15 L/min\",\n        \"abbrLabel\": \"10-15 L/min\"\n    }, {\n        \"id\": \"answer-non-rebreather-mask-flow-rate-other\",\n        \"promptID\": \"prompt-non-rebreather-mask-flow-rate\",\n        \"label\": \"Non-rebreather mask flow rate other\",\n        \"abbrLabel\": \"Other\"\n    },\n\n    {\n        \"id\": \"answer-non-rebreather-mask-target-saturation-gt-90-pct\",\n        \"promptID\": \"prompt-non-rebreather-mask-target-saturation\",\n        \"label\": \"Non-rebreather mask target O2 saturation: 90% or greater\",\n        \"abbrLabel\": \"90% or greater\"\n    },{\n        \"id\": \"answer-non-rebreather-mask-target-saturation-other\",\n        \"promptID\": \"prompt-non-rebreather-mask-target-saturation\",\n        \"label\": \"Non-rebreather mask target O2 saturation: other\",\n        \"abbrLabel\": \"Other\"\n    },\n\n    {\n        \"id\": \"answer-bvm-ventilation-rate-10-12-bpm\",\n        \"promptID\": \"prompt-bvm-ventilation-rate\",\n        \"label\": \"BVM ventilation rate: 10-12 BPM\",\n        \"abbrLabel\": \"10-12 breaths/minute\"\n    }, {\n        \"id\": \"answer-bvm-ventilation-rate-other\",\n        \"promptID\": \"prompt-bvm-ventilation-rate\",\n        \"label\": \"BVM ventilation rate: other\",\n        \"abbrLabel\": \"Other\"\n    },\n\n    {\n        \"id\": \"answer-bvm-flow-rate-15-ltm-or-gt\",\n        \"promptID\": \"prompt-bvm-flow-rate\",\n        \"label\": \"BVM flow rate: 15 liters/min or greater\",\n        \"abbrLabel\": \"15 liters/min or greater\"\n    }, {\n        \"id\": \"answer-bvm-flow-rate-other\",\n        \"promptID\": \"prompt-bvm-flow-rate\",\n        \"label\": \"BVM flow rate: other\",\n        \"abbrLabel\": \"Other\"\n    },\n    {\n        \"id\": \"answer-bvm-target-saturation-rate-gt-90-pct\",\n        \"promptID\": \"prompt-bvm-target-saturation\",\n        \"label\": \"BVM target O2 saturation rate 90% or greater\",\n        \"abbrLabel\": \"90% or greater\"\n    },{\n        \"id\": \"answer-bvm-target-saturation-rate-other\",\n        \"promptID\": \"prompt-bvm-target-saturation\",\n        \"label\": \"BVM target O2 saturation rate other\",\n        \"abbrLabel\": \"Other\"\n    },\n\n    {\n        \"id\": \"answer-tourniquet-placement-close-to-core-far-from-wound\",\n        \"promptID\": \"prompt-tourniquet-placement\",\n        \"label\": \"Tourniquet placement as far from wound and close to the core as possible\",\n        \"abbrLabel\": \"As far from wound and close to the core as possible\"\n    },{\n        \"id\": \"answer-tourniquet-placement-other\",\n        \"promptID\": \"prompt-tourniquet-placement\",\n        \"label\": \"Tourniquet placement other\",\n        \"abbrLabel\": \"Other\"\n    },\n\n    {\n        \"id\": \"answer-2nd-tourniquet-placement-adjacent-to-initial-tourniquet\",\n        \"promptID\": \"prompt-2nd-tourniquet-placement\",\n        \"label\": \"Second tourniquet location: adjacent to initial tourniquet\",\n        \"abbrLabel\": \"Adjacent to initial tourniquet\"\n    },{\n        \"id\": \"answer-2nd-tourniquet-placement-other\",\n        \"promptID\": \"prompt-2nd-tourniquet-placement\",\n        \"label\": \"Second tourniquet location: other\",\n        \"abbrLabel\": \"Other\"\n    },\n\n    {\n        \"id\": \"answer-occulsivive-dressing-injury-type-open-pneumothorax\",\n        \"promptID\": \"prompt-occlusive-dressing-injury-type\",\n        \"label\": \"Occlusive dressing injury type: Open pnuemothorax (sucking chest wound)\",\n        \"abbrLabel\": \"Open pnuemothorax (sucking chest wound)\"\n    },{\n        \"id\": \"answer-occulsivive-dressing-injury-type-other\",\n        \"promptID\": \"prompt-occlusive-dressing-injury-type\",\n        \"label\": \"Occlusive dressing injury type: other\",\n        \"abbrLabel\": \"Other\"\n    },\n\n    {\n        \"id\": \"answer-occulsive-dressing-method-leave-one-side-untaped\",\n        \"promptID\": \"prompt-occlusive-dressing-method\",\n        \"label\": \"Occlusive dressing method: Leave one side untaped\",\n        \"abbrLabel\": \"Leave one side untaped\"\n    },{\n        \"id\": \"answer-occulsive-dressing-method-leave-dressing-with-one-way-valve\",\n        \"promptID\": \"prompt-occlusive-dressing-method\",\n        \"label\": \"Occlusive dressing method: Dressing with one-way valve (e.g. Hyfin chest seal, Asherman chest seal)\",\n        \"abbrLabel\": \"Dressing with one-way valve (e.g. Hyfin chest seal, Asherman chest seal)\"\n    },{\n        \"id\": \"answer-occulsive-dressing-method-other\",\n        \"promptID\": \"prompt-occlusive-dressing-method\",\n        \"label\": \"Occlusive dressing method: other\",\n        \"abbrLabel\": \"Other\"\n    },\n\n    {\n        \"id\": \"answer-pleural-decompression-injury-type-tension-pneumothorax\",\n        \"promptID\": \"prompt-pleural-decompression-injury-type\",\n        \"label\": \"Pleural decompression injury type: tension pneumothorax\",\n        \"abbrLabel\": \"Tension pneumothorax\"\n    },{\n        \"id\": \"answer-pleural-decompression-injury-type-open-pneumothorax\",\n        \"promptID\": \"prompt-pleural-decompression-injury-type\",\n        \"label\": \"Pleural decompression injury type: Open pnuemothorax (sucking chest wound)\",\n        \"abbrLabel\": \"Open pnuemothorax (sucking chest wound)\"\n    },{\n        \"id\": \"answer-pleural-decompression-injury-type-other\",\n        \"promptID\": \"prompt-pleural-decompression-injury-type\",\n        \"label\": \"Pleural decompression injury type: other\",\n        \"abbrLabel\": \"Other\"\n    },\n\n    {\n        \"id\": \"answer-pleural-decompression-needle-placement-side-of-the-body-right\",\n        \"promptID\": \"prompt-pleural-decompression-needle-placement-side-of-the-body\",\n        \"label\": \"Pleural Decompression needle placement: right side\",\n        \"abbrLabel\": \"Right\"\n    },{\n        \"id\": \"answer-pleural-decompression-needle-placement-side-of-the-body-left\",\n        \"promptID\": \"prompt-pleural-decompression-needle-placement-side-of-the-body\",\n        \"label\": \"Pleural Decompression needle placement: left side\",\n        \"abbrLabel\": \"Left\"\n    },\n\n    {\n        \"id\": \"answer-pleural-decompression-needle-placement-anatomical-landmark-2nd-or-3rd-intercostal-space-mid-clavicular\",\n        \"promptID\": \"prompt-pleural-decompression-needle-placement-anatomical-landmark\",\n        \"label\": \"Pleural decompression anatomical landmark: Second or third intercostal space mid-clavicular line\",\n        \"abbrLabel\": \"Second or third intercostal space mid-clavicular line\"\n    },{\n        \"id\": \"answer-pleural-decompression-needle-placement-anatomical-landmark-4th-or-5th-intercostal-space-mid-axillary\",\n        \"promptID\": \"prompt-pleural-decompression-needle-placement-anatomical-landmark\",\n        \"label\": \"Pleural decompression anatomical landmark: Fourth or fifth intercostal space mid-axillary line\",\n        \"abbrLabel\": \"Fourth or fifth intercostal space mid-axillary line\"\n    },{\n        \"id\": \"answer-pleural-decompression-needle-placement-anatomical-landmark-other\",\n        \"promptID\": \"prompt-pleural-decompression-needle-placement-anatomical-landmark\",\n        \"label\": \"Pleural decompression anatomical landmark: other\",\n        \"abbrLabel\": \"Other\"\n    },\n\n    {\n        \"id\": \"answer-pleural-decompression-needle-size-large-bore\",\n        \"promptID\": \"prompt-pleural-decompression-needle-size\",\n        \"label\": \"Pleural decompression needle size: Large bore (14 or 16 gauge)\",\n        \"abbrLabel\": \"Large bore (14 or 16 gauge)\"\n    },{\n        \"id\": \"answer-pleural-decompression-needle-size-other\",\n        \"promptID\": \"prompt-pleural-decompression-needle-size\",\n        \"label\": \"Pleural decompression needle size: other\",\n        \"abbrLabel\": \"Other\"\n    },\n\n    {\n        \"id\": \"answer-pleural-decompression-needle-length-2-inches-or-longer\",\n        \"promptID\": \"prompt-pleural-decompression-needle-length\",\n        \"label\": \"Pleural Decompression needle size: 2 inches or more\",\n        \"abbrLabel\": \"2 inches or more\"\n    },{\n        \"id\": \"answer-pleural-decompression-needle-length-other\",\n        \"promptID\": \"prompt-pleural-decompression-needle-length\",\n        \"label\": \"Pleural Decompression needle size: other\",\n        \"abbrLabel\": \"Other\"\n    },\n\n    {\n        \"id\": \"answer-transport-facility-choice-level-1-or-2-trauma-center\",\n        \"promptID\": \"prompt-transport-facility-choice\",\n        \"label\": \"Receiving facility type: Closest level 1 or 2 trauma center\",\n        \"abbrLabel\": \"Closest level 1 or 2 trauma center\"\n    },{\n        \"id\": \"answer-transport-facility-choice-level-3-or-4-trauma-center\",\n        \"promptID\": \"prompt-transport-facility-choice\",\n        \"label\": \"Receiving facility type: Closet level 3 or 4 trauma center\",\n        \"abbrLabel\": \"Closet level 3 or 4 trauma center\"\n    },{\n        \"id\": \"answer-transport-facility-choice-closest\",\n        \"promptID\": \"prompt-transport-facility-choice\",\n        \"label\": \"Receiving facility type: Closest receiving facility\",\n        \"abbrLabel\": \"Closest receiving facility\"\n    },{\n        \"id\": \"answer-transport-facility-choice-other\",\n        \"promptID\": \"prompt-transport-facility-choice\",\n        \"label\": \"Receiving facility type: other\",\n        \"abbrLabel\": \"Other\"\n    },\n\n    {\n        \"id\": \"answer-transport-method-ambulance\",\n        \"promptID\": \"prompt-transport-method\",\n        \"label\": \"Ambulance\",\n        \"abbrLabel\": \"Ambulance\"\n    },{\n        \"id\": \"answer-transport-method-helicopter\",\n        \"promptID\": \"prompt-transport-method\",\n        \"label\": \"Helicopter\",\n        \"abbrLabel\": \"Helicopter\"\n    },\n\n    {\n        \"id\": \"answer-transport-lights-sirens-yes\",\n        \"promptID\": \"prompt-transport-lights-siren-decision\",\n        \"label\": \"Use lights and sirens\",\n        \"abbrLabel\": \"Yes\"\n    },{\n        \"id\": \"answer-transport-lights-sirens-no\",\n        \"promptID\": \"prompt-transport-lights-siren-decision\",\n        \"label\": \"Do not use lights and sirens\",\n        \"abbrLabel\": \"No\"\n    },\n\n    {\n        \"id\": \"answer-splint-type-board\",\n        \"promptID\": \"prompt-splint-type\",\n        \"label\": \"Splint type: Board splint\",\n        \"abbrLabel\": \"Board splint\"\n    },{\n        \"id\": \"answer-splint-type-moldable\",\n        \"promptID\": \"prompt-splint-type\",\n        \"label\": \"Splint type: Moldable splint\",\n        \"abbrLabel\": \"Moldable splint\"\n    },{\n        \"id\": \"answer-splint-type-traction\",\n        \"promptID\": \"prompt-splint-type\",\n        \"label\": \"Splint type: Traction splint\",\n        \"abbrLabel\": \"Traction splint\"\n    },{\n        \"id\": \"answer-splint-type-pelvic-binder\",\n        \"promptID\": \"prompt-splint-type\",\n        \"label\": \"Splint type: Pelvic binder\",\n        \"abbrLabel\": \"Pelvic binder\"\n    },{\n        \"id\": \"answer-splint-type-other\",\n        \"promptID\": \"prompt-splint-type\",\n        \"label\": \"Splint type: Other\",\n        \"abbrLabel\": \"Other\"\n    },\n\n]\n/*\n    {\n        \"id\": \"\",\n        \"promptID\": \"\",\n        \"label\": \"\",\n        \"abbrLabel\": \"\"\n    },\n*/\n\nexport default INTV_PROMPT_ANSWERS","import { MDB_TYPES, SELECTION_TYPES as ST } from \"@meddbriefer/scenario-data\"\n\nconst INTV_PROMPTS = [\n    {\n        \"id\": \"prompt-wound-location\",\n        type: MDB_TYPES.DIST_PROMPT,\n        selectionType: ST.ONE,\n        label: \"Where is the wound located?\",\n        abbrLabel: \"Wound location?\",\n        answers: [\n            \"answer-wound-location-head\",\n            \"answer-wound-location-neck\",\n            \"answer-wound-location-chest\",\n            \"answer-wound-location-abdomen-pelvis\",\n            \"answer-wound-location-posterior\",\n            \"answer-wound-location-genitalia\",\n            \"answer-wound-location-left-lower-extremity\",\n            \"answer-wound-location-right-lower-extremity\",\n            \"answer-wound-location-left-upper-extremity\",\n            \"answer-wound-location-right-upper-extremity\",\n            \"answer-wound-location-other\"\n        ]\n    },\n    {\n        \"id\": \"prompt-wound-locations\",\n        type: MDB_TYPES.DIST_PROMPT,\n        selectionType: ST.OOM,\n        label: \"Where are the wound(s) located?\",\n        abbrLabel: \"Wound location(s)?\",\n        answers: [\n            \"answer-wound-locations-head\",\n            \"answer-wound-locations-neck\",\n            \"answer-wound-locations-chest\",\n            \"answer-wound-locations-abdomen-pelvis\",\n            \"answer-wound-locations-posterior\",\n            \"answer-wound-locations-genitalia\",\n            \"answer-wound-locations-left-lower-extremity\",\n            \"answer-wound-locations-right-lower-extremity\",\n            \"answer-wound-locations-left-upper-extremity\",\n            \"answer-wound-locations-right-upper-extremity\",\n            \"answer-wound-locations-other\"\n        ]\n    },\n\n\n    {\n        \"id\": \"prompt-airway-patency-suction-device\",\n        \"interventionID\": \"intv-airway-patency-technique-suction-airway\",\n        \"type\": MDB_TYPES.PROMPT,\n        \"selectionType\": ST.ONE,\n        \"label\": \"What kind of suction catheter will you use?\",\n        \"abbrLabel\": \"Suction catheter type?\",\n        \"answers\": [\n            \"answer-airway-patency-suction-yankauer\",\n            \"answer-airway-patency-suction-long-multiuse\",\n            \"answer-airway-patency-suction-other\"\n        ]\n    },\n\n    {\n        \"id\": \"prompt-advanced-airway-adjunct-type\",\n        \"interventionID\": \"intv-advanced-airway-adjunct\",\n        \"type\": MDB_TYPES.PROMPT,\n        \"selectionType\": ST.ONE,\n        \"label\": \"What type of advanced airway adjunct would you use?\",\n        \"abbrLabel\": \"Which advanced airway?\",\n        \"answers\": [\n            \"answer-alternative-rescue-airway-type-ett\",\n            \"answer-alternative-rescue-airway-type-combitube\",\n            \"answer-alternative-rescue-airway-type-lta\",\n            \"answer-alternative-rescue-airway-type-lma\",\n            \"answer-alternative-rescue-airway-type-igel\",\n            \"answer-alternative-rescue-airway-type-other\"\n        ]\n    }, {\n        \"id\": \"prompt-advanced-airway-tube-size\",\n        \"interventionID\": \"intv-advanced-airway-adjunct\",\n        \"type\": MDB_TYPES.PROMPT,\n        \"selectionType\":\"one\",\n        \"label\": \"What tube size for advanced airway?\",\n        \"abbrLabel\": \"What size?\",\n        \"answers\": [\n            \"answer-alternative-airway-tube-size-7\",\n            \"answer-alternative-airway-tube-size-8\",\n            \"answer-alternative-airway-tube-size-age-div-4-plus-4\",\n            \"answer-alternative-airway-tube-size--age-div-4-plus-4-minus-5\",\n            \"answer-alternative-airway-tube-size-37f\",\n            \"answer-alternative-airway-tube-size-41f\",\n            \"answer-alternative-airway-tube-size-0\",\n            \"answer-alternative-airway-tube-size-1\",\n            \"answer-alternative-airway-tube-size-1-5\",\n            \"answer-alternative-airway-tube-size-2\",\n            \"answer-alternative-airway-tube-size-2-5\",\n            \"answer-alternative-airway-tube-size-3\",\n            \"answer-alternative-airway-tube-size-4\",\n            \"answer-alternative-airway-tube-size-5\",\n            \"answer-alternative-airway-tube-size-6\",\n            \"answer-alternative-airway-tube-size-other\"\n        ]\n    },\n\n    {\n        \"id\": \"prompt-orotracheal-intubation-tube-insertion-depth\",\n        \"interventionID\": \"intv-orotracheal-intubation\",\n        \"type\": MDB_TYPES.PROMPT,\n        \"selectionType\": ST.ONE,\n        \"label\": \"At what depth would you insert the tube?\",\n        \"abbrLabel\": \"Tube insertion depth?\",\n        \"answers\": [\n            \"answer-orotracheal-intubation-tube-insertion-depth-21cm\",\n            \"answer-orotracheal-intubation-tube-insertion-depth-23cm\",\n            \"answer-orotracheal-intubation-tube-insertion-depth-3-times-tube-size\",\n            \"answer-orotracheal-intubation-tube-insertion-depth-other\"\n        ]\n    },\n\n    {\n        \"id\": \"prompt-nasotracheal-intubation-tube-size\",\n        \"interventionID\": \"intv-nasotracheal-intubation\",\n        \"type\": MDB_TYPES.PROMPT,\n        \"selectionType\": ST.ONE,\n        \"label\": \"What tube size would you use?\",\n        \"abbrLabel\": \"Tube size?\",\n        \"answers\": [\n            \"answer-nasotracheal-intubation-tube-size-6-to-6-5\",\n            \"answer-nasotracheal-intubation-tube-size-7-to-7-5\",\n            \"answer-nasotracheal-intubation-tube-size-age-div-4+4-minus1\",\n            \"answer-nasotracheal-intubation-tube-size-age-div-4+4-minus0-5\",\n            \"answer-nasotracheal-intubation-tube-size-0-5-1cm-less-than-oro-size\",\n            \"answer-nasotracheal-intubation-tube-size-other\"\n        ]\n    },\n\n    {\n        \"id\": \"prompt-nasal-cannula-flow-rate\",\n        \"interventionID\": \"intv-supplemental-oxygen-device-nasal-cannula\",\n        \"type\": MDB_TYPES.PROMPT,\n        \"selectionType\": ST.ONE,\n        \"label\": \"What oxygen flow rate would you administer?\",\n        \"abbrLabel\": \"Oxygen flow rate?\",\n        \"answers\": [\n            \"answer-nasal-cannula-flow-rate-1-6-lpm\",\n            \"answer-nasal-cannula-flow-rate-other\"\n        ]\n    },{\n        \"id\": \"prompt-nasal-cannula-target-saturation\",\n        \"interventionID\": \"intv-supplemental-oxygen-device-nasal-cannula\",\n        \"type\": MDB_TYPES.PROMPT,\n        \"selectionType\": ST.ONE,\n        \"label\": \"What is your target oxygen saturation range?\",\n        \"abbrLabel\": \"Target O2 saturation?\",\n        \"answers\": [\n            \"answer-nasal-cannula-target-saturation-gt-90-pct\",\n            \"answer-nasal-cannula-target-saturation-other\"\n        ]\n    },\n\n    {\n        \"id\": \"prompt-non-rebreather-mask-flow-rate\",\n        \"interventionID\": \"intv-supplemental-oxygen-device-non-rebreather-mask\",\n        \"type\": MDB_TYPES.PROMPT,\n        \"selectionType\": ST.ONE,\n        \"label\": \"What oxygen flow rate would you administer?\",\n        \"abbrLabel\": \"Oxygen flow rate?\",\n        \"answers\": [\n            \"answer-non-rebreather-mask-flow-rate-10-15-liters-min\",\n            \"answer-non-rebreather-mask-flow-rate-other\"\n        ]\n    },{\n        \"id\": \"prompt-non-rebreather-mask-target-saturation\",\n        \"interventionID\": \"intv-supplemental-oxygen-device-non-rebreather-mask\",\n        \"type\": MDB_TYPES.PROMPT,\n        \"selectionType\": ST.ONE,\n        \"label\": \"What is your target oxygen saturation range?\",\n        \"abbrLabel\": \"Target O2 saturation?\",\n        \"answers\": [\n            \"answer-non-rebreather-mask-target-saturation-gt-90-pct\",\n            \"answer-non-rebreather-mask-target-saturation-other\"\n        ]\n    },\n\n    {\n        \"id\": \"prompt-bvm-ventilation-rate\",\n        \"interventionID\": \"intv-ventilation-technique-bag-valve-mask\",\n        \"type\": MDB_TYPES.PROMPT,\n        \"selectionType\": ST.ONE,\n        \"label\": \"At what rate will you ventilate the patient?\",\n        \"abbrLabel\": \"\",\n        \"answers\": [\n            \"answer-bvm-ventilation-rate-10-12-bpm\",\n            \"answer-bvm-ventilation-rate-other\",\n        ]\n    }, {\n        \"id\": \"prompt-bvm-flow-rate\",\n        \"interventionID\": \"intv-ventilation-technique-bag-valve-mask\",\n        \"type\": MDB_TYPES.PROMPT,\n        \"selectionType\": ST.ONE,\n        \"label\": \"What flow rate would you administer?\",\n        \"abbrLabel\": \"Flow rate?\",\n        \"answers\": [\n            \"answer-bvm-flow-rate-15-ltm-or-gt\",\n            \"answer-bvm-flow-rate-other\",\n        ]\n    },{\n        \"id\": \"prompt-bvm-target-saturation\",\n        \"interventionID\": \"intv-ventilation-technique-bag-valve-mask\",\n        \"type\": MDB_TYPES.PROMPT,\n        \"selectionType\": ST.ONE,\n        \"label\": \"What is your target oxygen saturation range?\",\n        \"abbrLabel\": \"Target O2 saturation?\",\n        \"answers\": [\n            \"answer-bvm-target-saturation-rate-gt-90-pct\",\n            \"answer-bvm-target-saturation-rate-other\"\n        ]\n    },\n\n    {\n        \"id\": \"prompt-tourniquet-placement\",\n        \"interventionID\": \"intv-control-severe-bleeding-technique-tourniquet\",\n        \"type\": MDB_TYPES.PROMPT,\n        \"selectionType\": ST.ONE,\n        \"label\": \"Where would you place the tourniquet?\",\n        \"abbrLabel\": \"Tourniquet location?\",\n        \"answers\": [\n            \"answer-tourniquet-placement-close-to-core-far-from-wound\",\n            \"answer-tourniquet-placement-other\"\n        ]\n    },\n\n    {\n        \"id\": \"prompt-2nd-tourniquet-placement\",\n        \"interventionID\": \"intv-control-severe-bleeding-technique-2nd-tourniquet\",\n        \"type\": MDB_TYPES.PROMPT,\n        \"selectionType\": ST.ONE,\n        \"label\": \"Where would you place the second tourniquet?\",\n        \"abbrLabel\": \"Tourniquet location?\",\n        \"answers\": [\n            \"answer-2nd-tourniquet-placement-adjacent-to-initial-tourniquet\",\n            \"answer-2nd-tourniquet-placement-other\"\n        ]\n    },\n\n    {\n        \"id\": \"prompt-occlusive-dressing-injury-type\",\n        \"interventionID\": \"intv-occlusive-dressing\",\n        \"type\": MDB_TYPES.PROMPT,\n        \"selectionType\": ST.ONE,\n        \"label\": \"What type of injury are you trying to manage?\",\n        \"abbrLabel\": \"For what type of injury?\",\n        \"answers\": [\n            \"answer-occulsivive-dressing-injury-type-open-pneumothorax\",\n            \"answer-occulsivive-dressing-injury-type-other\"\n        ]\n    },{\n        \"id\": \"prompt-occlusive-dressing-method\",\n        \"interventionID\": \"intv-occlusive-dressing\",\n        \"type\": MDB_TYPES.PROMPT,\n        \"selectionType\": ST.ONE,\n        \"label\": \"How would you create a release valve on an occlusive dressing?\",\n        \"abbrLabel\": \"How would you create a release valve?\",\n        \"answers\": [\n            \"answer-occulsive-dressing-method-leave-one-side-untaped\",\n            \"answer-occulsive-dressing-method-leave-dressing-with-one-way-valve\",\n            \"answer-occulsive-dressing-method-other\"\n        ]\n    },\n\n\n    {\n        \"id\": \"prompt-pleural-decompression-injury-type\",\n        \"interventionID\": \"intv-pleural-decompression\",\n        \"type\": MDB_TYPES.PROMPT,\n        \"selectionType\": ST.ONE,\n        \"label\": \"What type of injury are you trying to manage?\",\n        \"abbrLabel\": \"For what type of injury?\",\n        \"answers\": [\n            \"answer-pleural-decompression-injury-type-tension-pneumothorax\",\n            \"answer-pleural-decompression-injury-type-open-pneumothorax\",\n            \"answer-pleural-decompression-injury-type-other\"\n        ]\n    },{\n        \"id\": \"prompt-pleural-decompression-needle-placement-side-of-the-body\",\n        \"interventionID\": \"intv-pleural-decompression\",\n        \"type\": MDB_TYPES.PROMPT,\n        \"selectionType\": ST.ONE,\n        \"label\": \"On which side of the body would you place the needle?\",\n        \"abbrLabel\": \"Which side would you place the needle?\",\n        \"answers\": [\n            \"answer-pleural-decompression-needle-placement-side-of-the-body-right\",\n            \"answer-pleural-decompression-needle-placement-side-of-the-body-left\"\n        ]\n    },{\n        \"id\": \"prompt-pleural-decompression-needle-placement-anatomical-landmark\",\n        \"interventionID\": \"intv-pleural-decompression\",\n        \"type\": MDB_TYPES.PROMPT,\n        \"selectionType\": ST.ONE,\n        \"label\": \"At what anatomical landmark?\",\n        \"abbrLabel\": \"At what anatomical landmark?\",\n        \"answers\": [\n            \"answer-pleural-decompression-needle-placement-anatomical-landmark-2nd-or-3rd-intercostal-space-mid-clavicular\",\n            \"answer-pleural-decompression-needle-placement-anatomical-landmark-4th-or-5th-intercostal-space-mid-axillary\",\n            \"answer-pleural-decompression-needle-placement-anatomical-landmark-other\"\n        ]\n    },{\n        \"id\": \"prompt-pleural-decompression-needle-size\",\n        \"interventionID\": \"intv-pleural-decompression\",\n        \"type\": MDB_TYPES.PROMPT,\n        \"selectionType\": ST.ONE,\n        \"label\": \"What size needle do you want to use?\",\n        \"abbrLabel\": \"Needle size?\",\n        \"answers\": [\n            \"answer-pleural-decompression-needle-size-large-bore\",\n            \"answer-pleural-decompression-needle-size-other\"\n        ]\n    },{\n        \"id\": \"prompt-pleural-decompression-needle-length\",\n        \"interventionID\": \"intv-pleural-decompression\",\n        \"type\": MDB_TYPES.PROMPT,\n        \"selectionType\": ST.ONE,\n        \"label\": \"How long a needle would you use?\",\n        \"abbrLabel\": \"Needle length?\",\n        \"answers\": [\n            \"answer-pleural-decompression-needle-length-2-inches-or-longer\",\n            \"answer-pleural-decompression-needle-length-other\"\n        ]\n    },\n\n    {\n        \"id\": \"prompt-transport-facility-choice\",\n        \"interventionID\": \"intv-transport\",\n        \"type\": MDB_TYPES.PROMPT,\n        \"selectionType\": ST.ONE,\n        \"label\": \"What type of care facility will you transport the patient to?\",\n        \"abbrLabel\": \"Type of receiving facility\",\n        \"answers\": [\n            \"answer-transport-facility-choice-level-1-or-2-trauma-center\",\n            \"answer-transport-facility-choice-level-3-or-4-trauma-center\",\n            \"answer-transport-facility-choice-closest\",\n            \"answer-transport-facility-choice-other\"\n        ]\n    },{\n        \"id\": \"prompt-transport-method\",\n        \"interventionID\": \"intv-transport\",\n        \"type\": MDB_TYPES.PROMPT,\n        \"selectionType\": ST.ONE,\n        \"label\": \"Would you transport this patient by air or ground ambulance?\",\n        \"abbrLabel\": \"Air or ground ambulance?\",\n        \"answers\": [\n            \"answer-transport-method-ambulance\",\n            \"answer-transport-method-helicopter\"\n        ]\n    },{\n        \"id\": \"prompt-transport-lights-siren-decision\",\n        \"interventionID\": \"intv-transport\",\n        \"type\": MDB_TYPES.PROMPT,\n        \"selectionType\": ST.ONE,\n        \"label\": \"Would you use lights and sirens with this patient?\",\n        \"abbrLabel\": \"Lights and sirens?\",\n        \"answers\": [\n            \"answer-transport-lights-sirens-yes\",\n            \"answer-transport-lights-sirens-no\"\n        ]\n    },\n\n    {\n        \"id\": \"prompt-splint-type\",\n        \"interventionID\": \"intv-splint-fractures\",\n        \"type\": MDB_TYPES.PROMPT,\n        \"selectionType\": ST.ONE,\n        \"label\": \"What type of splint would you use?\",\n        \"abbrLabel\": \"Type of splint?\",\n        \"answers\": [\n            \"answer-splint-type-board\",\n            \"answer-splint-type-moldable\",\n            \"answer-splint-type-traction\",\n            \"answer-splint-type-pelvic-binder\",\n            \"answer-splint-type-other\"\n        ]\n    },\n\n]\n/*\n    {\n        \"id\": \"\",\n        \"interventionID\": \"\",\n        \"type\": MDB_TYPES.PROMPT,\n        \"selectionType\": ST.ONE,\n        \"label\": \"\",\n        \"abbrLabel\": \"\",\n        \"answers\": [\n        ]\n    },\n*/\nexport default INTV_PROMPTS","const INTVS = [\n   {\n      \"id\": \"intv-open-airway-method-head-tilt\",\n      \"system\": \"airway\",\n      \"label\": \"Head tilt chin lift\"\n   },\n   {\n      \"id\": \"intv-open-airway-method-modified-jaw-thrust\",\n      \"system\": \"airway\",\n      \"label\": \"Modified jaw thrust\"\n   },\n   {\n      \"id\": \"intv-airway-patency-technique-suction-airway\",\n      \"system\": \"airway\",\n      \"label\": \"Suction airway\",\n      \"prompts\": [\n         \"prompt-airway-patency-suction-device\"\n      ]\n   },\n   {\n      \"id\": \"intv-manual-finger-sweep\",\n      \"system\": \"airway\",\n      \"label\": \"Manual (finger sweep)\"\n   },\n   {\n      \"id\": \"intv-magill-forceps-assisted\",\n      \"system\": \"airway\",\n      \"label\": \"Magill forceps assisted\"\n   },\n   {\n      \"id\": \"intv-slat\",\n      \"system\": \"airway\",\n      \"label\": \"SLAT\"\n   },\n   {\n      \"id\": \"intv-heimlich-maneuver\",\n      \"system\": \"airway\",\n      \"label\": \"Heimlich maneuver\"\n   },\n   {\n      \"id\": \"intv-back-blows-and-chest-thrusts\",\n      \"system\": \"airway\",\n      \"label\": \"Back blows and chest thrusts\"\n   },\n   {\n      \"id\": \"intv-oropharyngeal-airway\",\n      \"system\": \"airway\",\n      \"label\": \"Oropharyngeal airway (OPA)\"\n   },\n   {\n      \"id\": \"intv-nasopharyngeal-airway\",\n      \"system\": \"airway\",\n      \"label\": \"Nasopharyngeal airway (NPA)\"\n   },\n   {\n      \"id\": \"intv-advanced-airway-adjunct\",\n      \"system\": \"airway\",\n      \"label\": \"Insert advanced airway adjunct\",\n      \"prompts\": [\n         \"prompt-advanced-airway-adjunct-type\",\n         \"prompt-advanced-airway-tube-size\"\n      ]\n   },\n   {\n      \"id\": \"intv-orotracheal-intubation\",\n      \"system\": \"airway\",\n      \"label\": \"Orotracheal intubation\",\n      \"prompts\": [\n         \"prompt-orotracheal-intubation-tube-insertion-depth\"\n      ]\n   },\n   {\n      \"id\": \"intv-nasotracheal-intubation\",\n      \"system\": \"airway\",\n      \"label\": \"Nasotracheal intubation\",\n      \"prompts\": [\n         \"prompt-nasotracheal-intubation-tube-size\"\n      ]\n   },\n   {\n      \"id\": \"intv-rapid-sequence-intubation\",\n      \"system\": \"airway\",\n      \"label\": \"Rapid sequence intubation (RSI)\"\n   },\n   {\n      \"id\": \"intv-sedation-assisted-intubation\",\n      \"system\": \"airway\",\n      \"label\": \"Sedation-assisted intubation\",\n      \"prompts\": []\n   },\n   {\n      \"id\": \"intv-needle-cricothyrotomy\",\n      \"system\": \"airway\",\n      \"label\": \"Needle cricothyrotomy\"\n   },\n   {\n      \"id\": \"intv-surgical-cricothyrotomy\",\n      \"system\": \"airway\",\n      \"label\": \"Surgical cricothyrotomy\"\n   },\n   {\n      \"id\": \"intv-supplemental-oxygen-device-nasal-cannula\",\n      \"system\": \"breathing\",\n      \"label\": \"Nasal cannula\",\n      \"prompts\": [\n         \"prompt-nasal-cannula-o2-flow-rate\",\n         \"prompt-nasal-cannula-target-saturation\"\n      ]\n   },\n   {\n      \"id\": \"intv-supplemental-oxygen-device-non-rebreather-mask\",\n      \"system\": \"breathing\",\n      \"label\": \"Non-rebreather mask\",\n      \"prompts\": [\n         \"prompt-non-rebreather-mask-flow-rate\",\n         \"prompt-non-rebreather-mask-target-saturation\"\n      ]\n   },\n   {\n      \"id\": \"intv-ventilation-technique-bag-valve-mask\",\n      \"system\": \"breathing\",\n      \"label\": \"Bag-valve mask\",\n      \"prompts\": [\n         \"prompt-bvm-ventilation-rate\",\n         \"prompt-bvm-flow-rate\",\n         \"prompt-bvm-target-saturation\"\n      ]\n   },\n   {\n      \"id\": \"intv-control-severe-bleeding-technique-direct-pressure\",\n      \"system\": \"bleeding\",\n      \"label\": \"Apply direct pressure\",\n      distPrompts: [\n         \"prompt-wound-location\"\n      ]\n   },\n   {\n      \"id\": \"intv-control-severe-bleeding-technique-tourniquet\",\n      \"system\": \"bleeding\",\n      \"label\": \"Apply tourniquet\",\n      distPrompts: [\n         \"prompt-wound-location\"\n      ],\n      prompts: [\n         \"prompt-tourniquet-placement\"\n      ]\n   },\n   {\n      \"id\": \"intv-control-severe-bleeding-technique-2nd-tourniquet\",\n      \"system\": \"bleeding\",\n      \"label\": \"Apply second tourniquet\",\n      distPrompts: [\n         \"prompt-wound-location\"\n      ],\n      prompts: [\n         \"prompt-2nd-tourniquet-placement\"\n      ]\n   },\n   {\n      \"id\": \"intv-control-severe-bleeding-technique-pack-wound-with-gauze\",\n      \"system\": \"bleeding\",\n      \"label\": \"Pack wound with gauze or hemostatic gauze\",\n      distPrompts: [\n         \"prompt-wound-location\"\n      ],\n   },\n   {\n      \"id\": \"intv-control-severe-bleeding-technique-pressure-bandage\",\n      \"system\": \"bleeding\",\n      \"label\": \"Pressure dressing\",\n      distPrompts: [\n         \"prompt-wound-location\"\n      ],\n   },\n   {\n      \"id\": \"intv-control-severe-bleeding-technique-load-and-go\",\n      \"system\": \"bleeding\",\n      \"label\": \"Load and go (if uncontrolled)\"\n   },\n   {\n      \"id\": \"intv-control-shock-technique-keep-patient-warm\",\n      \"system\": \"shock\",\n      \"label\": \"Keep patient warm (e.g., apply blankets)\"\n   },\n   {\n      \"id\": \"intv-control-shock-technique-administer-high-concentration-o2\",\n      \"system\": \"shock\",\n      \"label\": \"Administer high concentration of oxygen\"\n   },\n   {\n      \"id\": \"intv-control-shock-technique-place-patient-supine-position\",\n      \"system\": \"shock\",\n      \"label\": \"Place or maintain patient in supine position\"\n   },\n   {\n      \"id\": \"intv-control-shock-technique-administer-iv-boluses\",\n      \"system\": \"shock\",\n      \"label\": \"IV fluid resuscitation\",\n      prompts: []\n   },\n   {\n      \"id\": \"intv-occlusive-dressing\",\n      \"system\": \"breathing\",\n      \"label\": \"Occlusive dressing\",\n      prompts: [\n         \"prompt-occlusive-dressing-injury-type\",\n         \"prompt-occlusive-dressing-method\",\n      ]\n   },\n   {\n      \"id\": \"intv-pleural-decompression\",\n      \"system\": \"breathing\",\n      \"label\": \"Needle decompression\",\n      prompts: [\n         \"prompt-pleural-decompression-injury-type\",\n         \"prompt-pleural-decompression-needle-placement-side-of-the-body\",\n         \"prompt-pleural-decompression-needle-placement-anatomical-landmark\",\n         \"prompt-pleural-decompression-needle-size\",\n         \"prompt-pleural-decompression-needle-length\"\n      ]\n   },\n   {\n      \"id\": \"intv-spinal-immobilization-technique-manual-c-spine\",\n      \"label\": \"Manual c-spine stabilization\"\n   },\n   {\n      \"id\": \"intv-spinal-immobilization-technique-cervical-collar\",\n      \"label\": \"Cervical collar\"\n   },\n   {\n      \"id\": \"intv-spinal-immobilization-technique-transfer-to-device\",\n      \"label\": \"Transfer patient to immobilization device\",\n      prompts: [\n\n      ]\n   },\n   {\n      \"id\": \"intv-spinal-immobilization-technique-attach-cid\",\n      \"label\": \"Attach cervical immobilization device (CID)\"\n   },\n\n   {\n      \"id\": \"intv-transfers-patient-method-walk-patient\",\n      \"label\": \"Walk patient to ambulance\"\n   },\n   {\n      \"id\": \"intv-transfers-patient-method-place-directly-on-stretcher\",\n      \"label\": \"Place directly on stretcher\"\n   },\n   {\n      id: \"intv-place-immobilized-patient-on-stretcher\",\n      label: \"Place immobilized patient on stretcher\"\n   },\n   /*\n   {\n      \"id\": \"intv-transfers-patient-method-long-backboard\",\n      \"label\": \"Place on long back board (LBB)\"\n   },\n   {\n      \"id\": \"intv-transfers-patient-method-short-board\",\n      \"label\": \"Place on short board (e.g., KED)\"\n   },\n   {\n      \"id\": \"intv-transfers-patient-method-scoop-stretcher\",\n      \"label\": \"Place on scoop stretcher\"\n   },\n   */\n   {\n      \"id\": \"intv-transport\",\n      \"label\": \"Transport\",\n      prompts: [\n         \"prompt-transport-facility-choice\",\n         \"prompt-transport-method\",\n         \"prompt-transport-lights-siren-decision\"\n      ]\n   },\n   {\n      \"id\": \"intv-apply-sterile-dressings\",\n      \"label\": \"Apply sterile dressings\",\n      distPrompts: [\n         \"prompt-wound-locations\"\n      ],\n   },\n   {\n      \"id\": \"intv-splint-fractures\",\n      \"system\": \"bleeding\",\n      \"label\": \"Splint fractures\",\n      // distPrompts: [\n      // ],\n      // prompts: [\n      //    \"prompt-splint-type\"\n      // ]\n   },\n\n   {\n      id: \"intv-sterile-dressing-soft-tissue\",\n      label: \"Apply sterile dressing over soft tissue\",\n      distPrompts: [\n         \"prompt-wound-location\"\n      ],\n   },\n   {\n      \"id\": \"intv-retrieve-amputated-body-part\",\n      \"label\": \"Retrieve avulsed/amputated part\",\n      distPrompts: [\n         \"prompt-wound-location\"\n      ],\n   },\n   {\n      id: \"intv-wrap-body-part-in-saline-soaked-gauze\",\n      label: \"Wrap part in gauze soaked in saline\",\n      distPrompts: [\n         \"prompt-wound-location\"\n      ],\n   },\n   {\n      id: \"intv-place-body-part-in-bag\",\n      label: \"Place part in bag\",\n      distPrompts: [\n         \"prompt-wound-location\"\n      ],\n   },\n   {\n      id: \"intv-keep-body-part-cool\",\n      label: \"Keep cool but do not pack directly on ice\",\n      distPrompts: [\n         \"prompt-wound-location\"\n      ],\n   },\n   {\n      id: \"intv-transport-body-part-to-receiving-facility\",\n      label: \"Transport part to receiving facility\",\n      distPrompts: [\n         \"prompt-wound-location\"\n      ],\n   },\n   // {\n   //    \"id\": \"intv-establish-ivs\",\n   //    \"label\": \"Establish IVs\"\n   // },\n   // {\n   //    \"id\": \"intv-replace-bls-airway-with-als-airway\",\n   //    \"label\": \"Replace basic airway with advanced airway\"\n   // },\n   // {\n   //    \"id\": \"intv-replace-bandages\",\n   //    \"label\": \"Replace bandages\"\n   // },\n   // {\n   //    \"id\": \"intv-replace-oxygen-tank\",\n   //    \"label\": \"Replace oxygen tank\"\n   // },\n   // {\n   //    \"id\": \"intv-adjust-iv-replace-bolus\",\n   //    \"label\": \"Adjust an IV (e.g., hang second bag)\"\n   // },\n   // {\n   //    \"id\": \"intv-turn-up-heat-in-ambulance\",\n   //    \"label\": \"Turn up heat in ambulance\"\n   // },\n   // {\n   //    \"id\": \"intv-reassess-intv-other\",\n   //    \"label\": \"Reassess other intervention\"\n   // },\n   // {\n   //    \"id\": \"intv-reassess-vital-signs\",\n   //    \"label\": \"Reassess vital signs\"\n   // }\n   {\n      id: \"intv-prepare-and-administer-pain-nausea-vomiting-medications\",\n      label: \"Prepare and administer medications\"\n   },\n   {\n      id: \"intv-prepare-and-administer-sedative\",\n      label: \"Prepare and administer medications\"\n   },\n]\n\nexport default INTVS","import { MDB_TYPES, SUB_PHASE} from \"./constants.js\"\nimport { groupByKey } from \"./utils.js\"\n\nexport class ScenarioType {\n    constructor(data) {\n        const {\n            id,\n            name,\n            schemaVersion,\n            checklist,\n            interventions,\n            interventionPrompts,\n            interventionPromptAnswers,\n            interventionVariantAnswers,\n            interventionMenuCategories,\n            interventionMenuItems,\n            medications,\n            hierarchy,\n            phaseData,\n            ...remaining\n        } = data\n        // console.log(checklist)\n        this.id = id\n        this.name = name\n        this.schemaVersion = schemaVersion\n        this._checklist = checklist\n        this._interventions = interventions\n        this._interventionPrompts = interventionPrompts\n        this._interventionPromptAnswers = interventionPromptAnswers\n        this.interventionVariantAnswers = interventionVariantAnswers\n        this._interventionMenuCategories = interventionMenuCategories\n        this._interventionMenuItems = interventionMenuItems\n        this._medications = medications\n        this.checkListMetaData = this.genCheckListMetaData()\n        this.uniqueIDs = this.genUniqueIDs()\n        this.uniqueLabels = this.genUniqueLabels()\n    }\n\n    genUniqueIDs() {\n        let ids = this._interventions.map(e => e.id)\n        ids = ids.concat(this._interventionPrompts.map(e => e.id))\n        ids = ids.concat(this._interventionPromptAnswers.map(e => e.id))\n        ids = ids.concat(this._interventionMenuCategories.map(e => e.id))\n        ids = ids.concat(this._interventionMenuItems.map(e => e.id))\n        ids = ids.concat(this._medications.map(e => e.id))\n        ids = ids.concat(this._checklist.map(e => e.id))\n        return ids\n    }\n\n    genUniqueLabels() {\n        let labels = this._interventions.map(e => e.label)\n        labels = labels.concat(this._checklist.map(e => e.label))\n        return labels\n    }\n\n    genCheckListMetaData() {\n        const metaData = []\n        const CHECKLIST = [...this._checklist].map(e => {\n            // remove obsolete attributes\n            delete e.promptID\n            delete e.relation\n            delete e.verboseLabel\n            if (undefined === e.phase) e.phase = null\n            if (undefined === e.subPhase) e.subPhase = null\n            return e\n        })\n        const PHASES = CHECKLIST.filter(e => e.type === MDB_TYPES.PHASE)\n        const SUB_PHASES = CHECKLIST.filter(e => e.type === MDB_TYPES.SUB_PHASE)\n        const OPTIONS = CHECKLIST.filter(e => e.type === MDB_TYPES.DECISION_OPTION)\n        const CL_ITEMS = CHECKLIST.filter(e => !PHASES.includes(e) && !SUB_PHASES.includes(e) && !OPTIONS.includes(e))\n        const phaseSubPhases = groupByKey(SUB_PHASES, \"phase\")\n        PHASES.forEach(p => {\n            if (p.id in phaseSubPhases) {\n                p.subPhases = phaseSubPhases[p.id].map(e => e.id)\n            }\n        })\n        const decisionOpts = groupByKey(OPTIONS, \"parentID\")\n        CL_ITEMS.forEach(i => {\n            if (i.type === MDB_TYPES.DECISION) {\n                i.options = decisionOpts[i.id].map(o => o.id)\n            }\n        })\n        const clDepth = {}\n        CL_ITEMS.forEach(e => {\n            const rel = (!!e.subPhase) ? e.subPhase : e.phase\n            if (rel === e.parentID) {\n                clDepth[e.id] = 1\n            } else {\n                clDepth[e.id] = clDepth[e.parentID] + 1\n            }\n            if (e.type === MDB_TYPES.NESTED_CHECKLIST) {\n                e.type = MDB_TYPES.CL_HEADING\n            }\n            e.parentID = rel\n            e.depth = clDepth[e.id]\n        })\n        const clItemsBySubPhase = groupByKey(CL_ITEMS, \"subPhase\")\n        const phaseItems = [...clItemsBySubPhase[null]]\n        const itemsByPhase = groupByKey(phaseItems, \"phase\")\n        PHASES.forEach(p => {\n            if (p.id in itemsByPhase) {\n                p.items = itemsByPhase[p.id].map(i => i.id)\n            }\n        })\n        delete clItemsBySubPhase[null]\n        SUB_PHASES.forEach(sp => sp.items = clItemsBySubPhase[sp.id].map(i => i.id))\n        //\n        return CHECKLIST\n    }\n\n    genHierarchy() {\n        const CHECKLIST = [...this._checklist].map(e => {\n            // remove obsolete attributes\n            delete e.promptID\n            delete e.relation\n            delete e.verboseLabel\n            return e\n        })\n        const PHASES = CHECKLIST.filter(e => e.type === MDB_TYPES.PHASE)\n        const SUB_PHASES = CHECKLIST.filter(e => e.type === MDB_TYPES.SUB_PHASE)\n        const OPTIONS = CHECKLIST.filter(e => e.type === MDB_TYPES.DECISION_OPTION)\n        const CL_ITEMS = CHECKLIST.filter(e => !PHASES.includes(e) && !SUB_PHASES.includes(e))\n        CL_ITEMS.forEach(e => {\n            if (undefined === e.subPhase) {\n                // FIXME: we should set this up in the data-structure itself\n                e.subPhase = null\n            }\n        })\n        const phaseSubPhases = groupByKey(SUB_PHASES, \"phase\")\n        PHASES.forEach(p => {\n            if (p.id in phaseSubPhases) {\n                p.subPhases = phaseSubPhases[p.id].map(e => e.id)\n            }\n        })\n        const decisionOpts = groupByKey(OPTIONS, \"parentID\")\n        CL_ITEMS.forEach(i => {\n            if (i.type === MDB_TYPES.DECISION) {\n                i.options = decisionOpts[i.id].map(o => o.id)\n            }\n        })\n        const clDepth = {}\n        CL_ITEMS.forEach(e => {\n            const rel = (!!e.subPhase) ? e.subPhase : e.phase\n            if (rel === e.parentID) {\n                clDepth[e.id] = 1\n            } else {\n                clDepth[e.id] = clDepth[e.parentID] + 1\n            }\n            if (e.type === MDB_TYPES.NESTED_CHECKLIST) {\n                e.type = MDB_TYPES.CL_HEADING\n            }\n            e.parentID = rel\n            e.depth = clDepth[e.id]\n        })\n        const clItemsBySubPhase = groupByKey(CL_ITEMS, \"subPhase\")\n        const phaseItems = [...clItemsBySubPhase[null]]\n        const itemsByPhase = groupByKey(phaseItems, \"phase\")\n        PHASES.forEach(p => {\n            if (p.id in itemsByPhase) {\n                p.items = itemsByPhase[p.id].map(i => i.id)\n            }\n        })\n        delete clItemsBySubPhase[null]\n        SUB_PHASES.forEach(sp => sp.items = clItemsBySubPhase[sp.id].map(i => i.id))\n        const hierarchy = []\n        PHASES.forEach(ph => {\n            const {subPhases, items, ...newPh} = ph\n            if (undefined !== items) {\n                newPh.items = items.map(itemID => {\n                    const {options, ...newItem} = CL_ITEMS.find(e => e.id === itemID)\n                    if (undefined !== options) {\n                        newItem.options = options.map(optID => OPTIONS.find(o => o.id === optID))\n                    }\n                    return newItem\n                })\n                hierarchy.push(newPh)\n            } else {\n                newPh.subPhases = subPhases.map(sphID => {\n                    const {items, ...newSph} = SUB_PHASES.find(sp => sp.id === sphID)\n                    newSph.items = items.map(itemID => {\n                      const {options, ...newItem} =  CL_ITEMS.find(i => i.id === itemID)\n                      if (undefined !== options) {\n                          newItem.options = options.map(optID => OPTIONS.find(o => o.id === optID))\n                      }\n                      return newItem\n                    })\n                    return newSph\n                })\n                hierarchy.push(newPh)\n            }\n        })\n        return hierarchy\n    }\n\n    getChecklistItem(id) {\n        return this._checklist.find(e => e.id === id)\n    }\n\n    getInterventionForm(interventionID) {\n        return this.getIntervention(interventionID, true)\n    }\n\n    getIntervention(interventionID, expand=false) {\n        const found = this._interventions.find(e => e.id === interventionID)\n        if (!found) { return {}}\n        const {distPrompts, prompts, ...intv} = found\n        if (!expand) {\n            intv.distPrompts = distPrompts\n            intv.prompts = prompts\n            return intv\n        }\n        intv.distPrompts = distPrompts.map(distPromptID => this.getPrompt(distPromptID, true))\n        intv.prompts = prompts.map(promptID => this.getPrompt(promptID, true))\n        return intv\n    }\n\n    getDecisionWithOptions(id) {\n        const found = this.getChecklistItem(id)\n        if (!found) {\n            return {}\n        }\n        const {options, ...decision} = found\n        // console.log(decision)\n        decision.options = options.map(optID => this.getChecklistItem(optID))\n        return decision\n    }\n\n    getPrompt(promptID, expand=false) {\n        const found = this._interventionPrompts.find(e => e.id === promptID)\n        if (!found) { return {}}\n        const {answers, ...prompt} = found\n        if (!expand) {\n            prompt.answers = answers\n        } else {\n            prompt.answers = answers.map(answerID => this.getAnswer(answerID))\n        }\n        return prompt\n    }\n\n    getAnswer(answerID) {\n        return this._interventionPromptAnswers.find(e => e.id === answerID)\n    }\n\n    getInterventionMenus() {\n        return this._interventionMenuCategories.map(e => {\n            const {items, ...newRec} = e\n            newRec.items = items.map(itemID => this._interventionMenuItems.find(mi => mi.id === itemID))\n            return newRec\n        })\n    }\n}\n\nexport class PublishedScenario {\n\n    constructor(data) {\n        const {\n            id,\n            name,\n            version,\n            datePublished,\n            scenarioType,\n            schemaVersion,\n            info,\n            vitalSigns,\n            OPQRST,\n            SAMPLE,\n            assessmentFindings,\n            checkListCorrectness,\n            correctMedicationDosages,\n            problems,\n            solutions,\n            actions,\n            interventionVariantAnswers,\n            checkListMetaData,\n            medications,\n            interventions,\n            interventionPrompts,\n            interventionPromptAnswers,\n            interventionMenuCategories,\n            interventionMenuItems,\n            ...rest\n        } = data\n        this.id = id\n        this.name = name\n        this.version = version\n        this.datePublished = datePublished\n        this.scenarioType = scenarioType\n        this.schemaVersion = schemaVersion\n        this.info = info\n        this.vitalSigns = vitalSigns\n        this.OPQRST = OPQRST\n        this.SAMPLE = SAMPLE\n        this.assessmentFindings = assessmentFindings\n        this.checkListCorrectness = checkListCorrectness\n        this.correctMedicationDosages = correctMedicationDosages\n        this.problems = problems\n        this.solutions = solutions\n        this.actions = actions\n        this.interventionVariantAnswers = interventionVariantAnswers\n        this._checkListMetaData = checkListMetaData\n        this.medications = medications\n        this._interventions = interventions\n        this._interventionPrompts = interventionPrompts\n        this._interventionPromptAnswers = interventionPromptAnswers\n        this._interventionMenuCategories = interventionMenuCategories\n        this._interventionMenuItems  = interventionMenuItems\n        // console.log(rest)\n        this.phaseData = this.genPhaseData()\n        this.interventionMenus = this.genInterventionMenus()\n        this.systemInterventions = this.genSystemInterventions()\n    }\n\n    genSystemInterventions() {\n        let tmp = this._interventions\n                    .filter(e => !!e.system)\n                    .map(e => {return {id: e.id, type: MDB_TYPES.INTERV, label: e.label, system: e.system}})\n        const sysIntvs = groupByKey(tmp, \"system\")\n        // console.log(sysIntvs)\n        return sysIntvs\n    }\n    genInterventionMenus() {\n        return this._interventionMenuCategories.map(cat => {\n            const {items, ...menuCat} = cat\n            menuCat.items = items.map(itemID => this._interventionMenuItems.find(mi => mi.id === itemID))\n            return menuCat\n        })\n    }\n    genPhaseData() {\n        const CHECKLIST = [...this._checkListMetaData].map(e => {\n            // remove obsolete attributes\n            delete e.promptID\n            delete e.relation\n            delete e.verboseLabel\n            return e\n        })\n        const PHASES = CHECKLIST.filter(e => e.type === MDB_TYPES.PHASE)\n        const SUB_PHASES = CHECKLIST.filter(e => e.type === MDB_TYPES.SUB_PHASE)\n        const OPTIONS = CHECKLIST.filter(e => e.type === MDB_TYPES.DECISION_OPTION)\n        const CL_ITEMS = CHECKLIST.filter(e => !PHASES.includes(e) && !SUB_PHASES.includes(e) && !OPTIONS.includes(e))\n        CL_ITEMS.forEach(e => {\n            if (undefined === e.subPhase) {\n                // FIXME: we should set this up in the data-structure itself\n                e.subPhase = null\n            }\n        })\n        const phaseSubPhases = groupByKey(SUB_PHASES, \"phase\")\n        PHASES.forEach(p => {\n            if (p.id in phaseSubPhases) {\n                p.subPhases = phaseSubPhases[p.id].map(e => e.id)\n            }\n        })\n        const decisionOpts = groupByKey(OPTIONS, \"parentID\")\n        CL_ITEMS.forEach(i => {\n            if (i.type === MDB_TYPES.DECISION) {\n                i.options = decisionOpts[i.id].map(o => o.id)\n            }\n        })\n        const clDepth = {}\n        CL_ITEMS.forEach(e => {\n            const rel = (!!e.subPhase) ? e.subPhase : e.phase\n            if (rel === e.parentID) {\n                clDepth[e.id] = 1\n            } else {\n                clDepth[e.id] = clDepth[e.parentID] + 1\n            }\n            if (e.type === MDB_TYPES.NESTED_CHECKLIST) {\n                e.type = MDB_TYPES.CL_HEADING\n            }\n            e.parentID = rel\n            e.depth = clDepth[e.id]\n        })\n        const clItemsBySubPhase = groupByKey(CL_ITEMS, \"subPhase\")\n        const phaseItems = [...clItemsBySubPhase[null]]\n        const itemsByPhase = groupByKey(phaseItems, \"phase\")\n        PHASES.forEach(p => {\n            if (p.id in itemsByPhase) {\n                p.items = itemsByPhase[p.id].map(i => i.id)\n            }\n        })\n        delete clItemsBySubPhase[null]\n        // console.log(clItemsBySubPhase)\n        SUB_PHASES.forEach(sp => {\n            // console.log(sp)\n            const items = clItemsBySubPhase[sp.id].map(i => i.id)\n            // console.log()\n            sp.items = items\n        })\n        const hierarchy = []\n        PHASES.forEach(ph => {\n            const {\n                subPhases,\n                items,\n                ...newPh\n            } = ph\n            if (undefined !== items) {\n                newPh.items = items.map(itemID => {\n                    const {\n                        options,\n                        ...newItem\n                    } = CL_ITEMS.find(e => e.id === itemID)\n                    if (undefined !== options) {\n                        newItem.options = options.map(optID => OPTIONS.find(o => o.id === optID))\n                    }\n                    return newItem\n                })\n                hierarchy.push(newPh)\n            } else {\n                newPh.subPhases = subPhases.map(sphID => {\n                    const {\n                        items,\n                        ...newSph\n                    } = SUB_PHASES.find(sp => sp.id === sphID)\n                    newSph.items = items.map(itemID => {\n                        const {\n                            options,\n                            ...newItem\n                        } = CL_ITEMS.find(i => i.id === itemID)\n                        if (undefined !== options) {\n                            newItem.options = options.map(optID => OPTIONS.find(o => o.id === optID))\n                        }\n                        return newItem\n                    })\n                    return newSph\n                })\n                hierarchy.push(newPh)\n            }\n        })\n        return hierarchy\n    }\n\n    getChecklistItem(id) {\n        return this._checkListMetaData.find(e => e.id === id)\n    }\n\n    getInterventionForm(intvID) {\n        return this.getIntervention(intvID, true)\n    }\n\n    getIntervention(interventionID, expand = false) {\n        const found = this._interventions.find(e => e.id === interventionID)\n        if (!found) {\n            return {}\n        }\n        const {\n            distPrompts,\n            prompts,\n            ...intv\n        } = found\n        if (!expand) {\n            intv.distPrompts = distPrompts\n            intv.prompts = prompts\n            return intv\n        }\n        intv.distPrompts = distPrompts.map(distPromptID => this.getPrompt(distPromptID, true))\n        intv.prompts = prompts.map(promptID => this.getPrompt(promptID, true))\n        return intv\n    }\n\n    getPrompt(promptID, expand = false) {\n        const found = this._interventionPrompts.find(e => e.id === promptID)\n        if (!found) {\n            return {}\n        }\n        const {\n            answers,\n            ...prompt\n        } = found\n        if (!expand) {\n            prompt.answers = answers\n        } else {\n            prompt.answers = answers.map(answerID => this.getAnswer(answerID))\n        }\n        return prompt\n    }\n\n    getAnswer(answerID) {\n        return this._interventionPromptAnswers.find(e => e.id === answerID)\n    }\n\n}","export const deepCopy = (object) => {\n    return JSON.parse(JSON.stringify(object))\n}\n\n// returns subset of records from array 'arr' whose type field matches 'type'\nexport const getRecsOfType = (arr, type) => {\n    return arr.filter(rec => rec.type === type)\n}\n\n// returns if any of the arrays passed to this have lengths > 0\n// perhaps this should be written as a non-1-liner for clarity\nexport const anyHaveValues = (...arrs) => {\n    return arrs.map((arr) => arr.length > 0).filter(val => val === true).length > 0\n}\n\n// takes a list of objects and fieldName (key) and returns an object who's attributes are\n// the distinct values for that field mapped to a list objects which share that\n// value\nexport const groupByKey = (list, key) => list.reduce(\n    (hash, obj) => ({\n        ...hash,\n        [obj[key]]: (hash[obj[key]] || []).concat(obj)\n    }), {}\n)\n"],"names":["Switch","useHistory","useFirebaseProject","FirebaseContext","AuthProvider","PrivateRoute","DebLog","UnauthedLayout","computeReviewTitle","SaveReviewModal","LogChooser","environment","App","auth","db","firebaseProject","history","window","redirectToCond2Debriefing","debriefID","newURL","push","production","process","env","NX_FIREBASE_PROJECT","StrictMode","ReactDOM","HashRouter","Router","root","createRoot","document","getElementById","render","insertInPhaseRelativeToSuggestedOrder","phaseNames","phases","object","orderedArrayObjects","objIndex","confirmedEvents","checklistHierarchy","requiredPhaseNames","requiredSubphases","phaseRequiredAtEnd","phaseIndex","expertPhase","length","includes","getSubPhases","lastIndexOf","getEndSubPhaseIndex","when","objectsBefore","objectBefore","requiredObjectBefore","slice","reverse","find","entry","id","interventionID","protocolRelationship","objectAfter","objectsAfter","requiredObjectAfter","phaseObjects","indexBefore","indexAfter","indexRequiredBefore","indexRequiredAfter","insertionIndex","findIndex","insertInPhaseInOrder","phase","splice","getEndSubPhase","inPhaseId","subPhases","subPhaseName","reversedSubPhases","subPhase","index","phaseId","hasSubPhases","findHeaderFor","numericalID","log","candidateHeader","foundHeader","MDB_TYPES","ANALYSIS_TYPES","initializeConstraints","filterConstraintsBySolutions","getStatesForStatus","getEventsByIdTime","pushNew","trimActions","getItem","scenarios","summarizeAnalysis","checkAgainstKB","checkForMinimalCases","organizeLogDisplay","doVitalsCounts","doVitalsFeedback","intvChecks","exceptionDefs","fbTemplatesDef","processInterventionAnswers","processAssessmentAnswers","getPrescribedInvAnswers","initializePromptAnswerGrading","getChecklistItemsByType","getChecklistHierarchy","groupByKey","debugSummarize","problemStates","cautionStates","constraintsViolated","insertInterventionHeader","requiredPhaseAndSubPhases","scenario","phaseFB","promptIDs","itemByID","itemByLabel","training","analysisFields","initGlobals","scen","name","getPromptIDs","info","debriefing","initializeItemLookupByID","initializeItemLookupByLabel","PHASE","map","e","concat","SUB_PHASE","findPhaseSubphasesOrdered","forEach","ph","undefined","label","sp","_interventionPrompts","prompts","prompt","checklistLookupByID","_checkListMetaData","filter","type","intvLookupByID","_interventions","intvMetaData","result","Object","assign","checklistLookupByLabel","intvLookupByLabel","subPhIds","collectScenAssessments","problems","assessments","prob","collectScenInterventions","interventions","allActions","ids","a","allAlts","insertMissingSubphases","priorPh","i","updateVital","vitalEntries","timestamp","updatedEntries","vitalEntry","processRawLogForDisplay","events","processedForDisplay","event","eventObj","answers","answerCorrect","EVENT_FIELDS","fldName","item","abbrLabel","actionDescription","workingPhase","phaseLabel","trimmedActions","retVal","annotateInputEvents","interventionsConfirmed","trackForStatus","priorPhase","parentPhase","parentIndex","newPhaseStart","assessmentTypes","status","eventType","processedTypes","processingState","vital","vitalType","j","PROBLEM_ACTION_FIELDS","action","k","setupStatusChecking","fillOutProblemFields","alt","altFound","redundantToFB","allContras","contra","probLabel","variant","intvVariant","origVariant","JSON","parse","key","keys","val","prescribedAnswers","checkListCorrectness","parentItem","parentID","parentLabel","incorrectAnswersFB","statusChecking","intv","initialEntry","intvStatusNeeded","vitalsNeeded","assessmentsNeeded","suggestedPhase","protocols","protocol","checkForMissingAssessments","neededScenAssessments","indexCounter","checklistSteps","md","ASSESS","REQUIRED","exceptions","exceptionDef","scenarioName","exception","why","cls","phaseObject","STEP_FIELDS","assessmentFindings","assessmentFB","graded","setupProblems","defs","sols","actions","problemDef","problem","solutionIDs","solutions","probSols","sol","problemID","lifeThreat","vitals","obj","assessmentID","solID","solution","otherActions","altActions","actEntries","actIDs","act","actionsInSuggestedOrder","insertMissingIntvChecks","statusTracking","toUpdate","entries","Array","isArray","newObj","findBestSolMatch","bestFittingSol","bestIndex","finalIndex","bestVal","bestLen","foundOneAltAction","solVal","found","notFound","f","solLen","solLenFound","fSol","altActsToRemove","ordering","insertMissingInterventions","ACTION_FIELDS","SOLUTION_FIELDS","PROBLEM_FIELDS","phaseVal","capitalizeFirstLetter","orderingIndex","x","string","charAt","toUpperCase","analyzeEvents","problemDefs","problemActions","problemSolutions","formattedActions","expectedScenInterventions","annotatedResults","intvsTracking","kbUpdates","updatedPhases","postAssessmentReview","postInterventionReview","priorProb","finalActions","intvHeaderIndex","headerObject","console","vitalsCounts","ds","alert","getConstraint","findNameNumID","names","occurrence","numericalIDStart","numericalIDEnd","findObjByNumerialID","phaseName","storeMisOrderedArgs","lateArg","objToModify","lateRelativeTo","storeMisOrderedFB","otherArg","FB","constraintType","orderingFB","appendString","arg2","feedback","collectEntriesToCheckConstraints","listOfNames","listOfEntries","uniqueListOfNames","counter","startIndex","endIndex","phaseObjectNames","saveFailedConstraint","constraintID","arg1","op","addToListOfFeedback","parPhFB","last","repeating","toLowerCase","checkAgainst2ndArgs","arg1st","args2nd","direction","entryNames","endNum1st","startNum1st","label1st","phFB","par1PhFB","par2PhFB","otherLabel","violations","arg","arg2nd","label2nd","startNum2nd","endNum2nd","checkConstraintsForArg","constraint","before","beforeOp","after","afterOp","uniqueEntryNames","firstArg","firstArgItem","processFirstArg","colorTypes","iconTypes","phaseStatusList","scenarioConstraintIDs","conditionalConstraints","globalConstraints","M2CA_PhaseIE","SC8CP_PhaseIE","B4CA_PhaseIE","B5CA_PhaseIE","C5CA_PhaseIE","vitalsCheckFeedbackLabel","vitalsCheckFeedbackID","formatAsMinSecs","_","require","C2_FIELDS","M2CA","SC8CP","B5CA","B4CA","C5CA","elt","array","intersects","arr1","arr2","indexOf","fields","newActions","trimAction","newEvent","labelID","fld","getPhaseStatus","statuses","itemStatuses","phaseStatuses","res","value","fbTemplates","stateList","state","stateStatus","getAssessmentEntry","currentEntry","aIndex","assessmentEntry","displayColor","getAssessmentIcon","getColor","color","fixStrSp","textString","textArray","split","lenTextArray","newItem","trim","newString","generateIntvStatusFB","checked","notChecked","fb","intvStatus","foundCk","fbSource","getFBField","field","c2FB","indexLabel","variantID","feedbackAbsent","feedbackErrors","feedbackOutOfOrder","combinedResult","para","getPhaseFeedback","phaseFBGiven","phFeedback","vitalsFB","applyFBTemplate","rep","template","feedbackArray","firstChar","substring","previousString","nextString","afterPlusChar","feedbackString","getFeedback","vitalsCheckFB","intvStatusFB","feedbackTemplate","scenarioConstraints","initialConstraints","constraintIDs","constraints","getEvents","storeLeafActions","subActions","newAction","buildC2FB","scenName","phaseIE","top","Action","saveAnalysisLog","obsLog","analysisData","userName","metaData","classCode","condition","scenarioID","Date","data","newActionsList","filterUnknown","logObj","pickBy","dataWithID","saveLog","saveCommentLog","priorLog","comments","reviewer","analysisLogID","collection","docRef","doc","set","getTimestamp","unknownItem","getItems","items","pActions","pNames","pIndex","pActIndex","processedIds","pIds","pEntry","actionNeeded","minimalNeeded","foundActions","allActionFound","allMinimalFound","numericalIDsChanged","foundId","minimalWhy","header","z","displayObjects","entryIndex","headerIndex","problemHeaderColor","subPhaseColor","subPhaseStatuses","newPhaseObjects","headerObj","subHeaderObj","priorHLPhaseItem","endEntry","iPhaseObjects","subheader","localPhaseName","localPhaseItem","phaseOrderStatus","highLevelPhase","highLevelPhaseItem","phaseID","determineHLcolor","lowerColor","higherColor","newColor","CHECKLIST_STEP_TYPES","OPTION_TYPES","listOfObjs","reduce","hash","itemType","getChecklistItems","clSteps","options","stepOptions","step","phChecklistSteps","spChecklistSteps","phSubphases","leafStatusList","summaryFields","analysis","regularizeStatus","determineStatusOfNotFound","promptIDarray","itemsByID","idsNotFound","startsWith","pop","examineDups","misordered","noError","interimEvent","lastEvent","processNextLevel","summary","decisionPromptIDs","results","children","childIDs","dummyEvent","copyEvents","headerStatus","scenIEFeedback","itemByIDArray","seconds","toISOString","substr","vitalsTakenDueToAssessmentSteps","globalReassessmentKn","globalReassessmentFeedback","vitalsCount","FBitems","FBitem","finalFB","done","notDone","count","vitalsDoneTwice","vitalsNotDoneTwice","numVitalFound","vitalsToCheck","actionIDs","numFound","minFound","idEntries","React","classNames","styles","Card","title","desc","card","Route","Redirect","Button","MDBNavBar","useDebriefing","StepTabs","Define","Explain","Benchmarks","Review","InvestigateExamine","Formalize","SaveButton","allSlidesCompleted","setDone","clickHandler","target","blur","Cond2Debriefing","debriefingID","computeTitle","saveButtonLabel","saveModal","SaveModal","useContext","DebriefingContext","createContext","debLog","getSlideData","getPathData","updatePathData","getIdData","updateIdData","stepStepPathToPath","haveNextSlide","havePrevSlide","prevSlide","nextSlide","enableNextSlide","enableStepPath","stepIsEnabled","stepStepPathIsEnabled","goStepStepPath","getUserRating","setUserRating","ieSummary","bOutline","ieOutline","computeExpandedSlides","stepPathIsExpanded","setAllSlidesCompleted","saveDebriefing","nextURL","startTime","useEffect","useState","useParams","TwoDivLayout","FlatLeftNav","stepPath","setSP","myData","setMyData","lineHeight","paddingLeft","benchmarks","bm","bmIdx","paddingTop","benchmarkText","subBenchmarks","sbm","sbmIdx","SingleColumnLayout","description","text","idx","AuthContext","MDBModal","SaveDebriefingModal","show","dismiss","saveUserData","getUserData","submitHandler","preventDefault","userData","timeOnTask","task","endTime","now","table","response","elements","heading","questions","NavButtons","currStep","currStepPath","prev","next","Nav","useLocation","TopButton","location","setCurrStep","pathname","NavItem","NavLink","active","Table","AnalysisMessages","FeedbackIcon","getRequiredSubActions","isGood","isAbsent","hasError","isOutOfOrder","Analysis","slide","analyzedHandler","nonRequiredActions","log_status","maxHeight","overflowY","height","backgroundColor","position","sa","nra","analyzed","PLACEHOLDER","messages","msgs","setMsgs","showLess","setShowLess","tmp","msg","tmp2","border","padding","marginBottom","ExamineForm","handleSubmit","examine","examined","HierarchicalLeftNav","SequentialIEView","TabbedIEView","expandedSlides","setExpandedSlides","completed","setCompleted","setExamined","_completed","_examined","UserRating","initialMode","needToExamine","setNeedToExamine","rated","setRated","setAnalyzed","mode","setMode","computeMode","setComputeMode","getMode","onRatingComplete","onAnalysisComplete","onExamineComplete","examineResponse","pd","_rated","_analyzed","need2props","examIfAbs","examineIfAbsent","absent","examIfErrs","examineIfErrors","errors","need2","newMode","promptsIfAbsent","promptsIfErrors","TabContent","TabPane","activeTab","setActiveTab","setTab","tabID","lowerCaseFirstLetter","ratedHandler","handleRatingChange","fontSize","subAction","display","default","outline","props","OutlineButton","OutlineLabel","child","OutlineChildren","node","depth","textAlign","paddingRight","paddingBottom","expandChildren","shouldExpand","listStyle","borderRadius","Tooltip","toolTipText","setToolTipText","toggleToolTipText","slideshow","of","paragraphs","chunks","chunk","hoverText","toggleToolTip","setToolTip","textDecoration","verticalAlign","path2str","path","ind","String","join","isLeafNode","subActionsList","hasErrors","summaryObj","nodeSummary","createIESlides","slides","IE","traverseDepthFirst","currNode","currPath","currDepth","newPath","getIENodeData","rest","other","nodeData","createIESlidesData","slideData","buildBOutline","B","expectations","rec","enabled","expectationText","buildIEOutline","childID","computeSlides","D","E","R","F","computeSlideData","define","explain","formalize","rSlidesData","bSlidesData","exp","ieSlideData","computeDataStructures","scenData","obsLogData","debLogData","scenFeedBack","flattenedSummary","values","flat","stepSlides","usrRatings","userRatings","pthData","pathData","ieData","sData","idDat","idData","s","bOL","ieOL","computeDebriefingTitle","useFirebase","getCond2DebriefingLog","getAnalysisLog","getLog","getPublishedScenarioObjectByID","saveDocument","getScenarioFeedback","expanded","arr","debID","setDebID","setDebLog","setObsLog","setScenario","setSlides","setSlideData","setPathData","setIdData","setUserRatings","setIESummary","setBOutline","setIEOutline","loaded","setLoaded","setNextURL","setStartTime","newData","newValue","prevState","getSlideFromStepStepPath","getSlideIndexForStepStepPath","prevValue","updatedPathData","currSlideIdx","haveNext","enabledStepPaths","someEnabled","fetchData","observerLogID","then","catch","error","str","getStatus","sts","AnalysesTableHeader","stdDateTimeFormatToCustom","AnalysesTable","analyses","onViewAnalysis","onAnalyze","analyzer","Breadcrumb","BreadcrumbItem","Link","ObserverLogTableHeader","DebriefingsTable","AnalysisDetails","cond1Comments","cond2Debriefings","onCond1StartReview","onCond1ContinueReview","onCond2StartReview","onCond2ContinueReview","version","width","debriefings","onStartReview","onContinueReview","debrief","ObserverLogDetails","HotTable","HotColumn","registerAllModules","EmailFieldRenderer","ObsLogLinkRenderer","ObserverLogTable","logs","viewButtonHandler","sortEmptyCells","indicator","headerAction","compareFunctionFactory","sortOrder","columnMeta","comparator","nextValue","ObserverLog","ObserverLogList","getAnalysisCond1Comments","getAnalysisCond2Debriefings","getObserverLog","logID","analysisID","setLog","setAnalysis","cond1DebLogs","setCond1DebLogs","cond2DebLogs","setCond2DebLogs","aData","obsData","createCond1Comments","createCond2Debriefing","redirectToCond1Debriefing","continueCond1ReviewHandler","startCond1ReviewHandler","continueCond2ReviewHandler","startCond2ReviewHandler","getObserverLogAnalyses","analysisLogs","setAnalysisLogs","updateAnalysisLogs","setUpdateAnalysisLogs","analyzeLogHandler","viewAnalysisHandler","records","getObserverLogList","obsLogs","setObsLogs","viewObsLogHandler","obsLogID","strftime","stdValue","link","B4CA_PhaseDEBRF","ACTION_TYPES","WAIT_TIFF","WAIT_SANDY","SUM_NODE_NO_FEEDBACK","NO_FEEDBACK","SUM_NODE_FBCK_CHILDREN","REQ","CONTRA","UNNEC","ALT","alternativeToIntv","OPT","B5CA_PhaseDEBRF","labe","feedbackError","C5CA_PhaseDEBRF","SC8CP_PhaseDEBRF","vitalChecks","vitalLabels","requiredVitals","systems","criticalInterventions","good","B1CA","M1CA","B7CA","intvStatusRules","ands","updates","tab","airwayOpen","airwayPatent","airwayAdjunct","airwaySecured","intubation","airwayProcedure","circulationPressure","circulationTourniquet","breathSounds","medEffects","medCommandApproval","oxygenated","decompression","medAdmin","receivingFacilityReply","shockWarming","ivPlacement","patientPositionPlacement","airAmbulance","woundState","notAllowed","breathingAssisted","inRoute","cSpineCollar","spineStable","injuryStable","onStretcher","amputated","fracture","neutral","bad","interventionStates","freeze","intvResults","misorderedErrors","misorderedError","IRR","GENERIC_STEP_D","GENERIC_STEP_F","getStep","stepsArray","stepName","createScenarioData","ebrData","linkText","spans","AuthFlow","StaffRoute","AUTH_FLOW_COMPONENTS","LoginForm","RegistrationForm","ForgotPasswordForm","EmailVerificationForm","as","DEFAULT_HEADING","currAuthComponent","getCurrComponent","REGISTER","FORGOT_PASSWD","EMAIL_VERIFY","MAX_ATTEMPTS","RETRY_INTERVAL","EmailVerification","authMsg","currentUser","emailVerified","setCurrAuthComponent","setAuthMsg","setEmailVerified","resendVerificationEmail","sendEmailVerification","checkForEmailVerification","intervalID","attempt","setInterval","reload","clearInterval","LOGIN","container","row","marginLeft","cn","sendOutPasswordReset","passwdResetError","setLoginError","setPasswdResetError","handleRememberedPasswd","email","message","btn","PasswordVisibilityIcon","passwordVisible","setPasswordVisible","loginError","loginUserWithEmailAndPassword","togglePasswordVisibility","handleForgotPassword","handleLogin","password","handleRegister","confirmPasswordVisible","setConfirmPasswordVisible","validClassCode","setIsValidClassCode","toggleConfirmPasswordVisibility","getClassCodes","registerErrorMsg","registerUserWithEmailAndPassword","alreadyHaveAccount","handleSignUp","validClassCodes","visible","stateToggler","PASSWORD_RESET_SUCCESS_MSG","ERROR_CODE_UNKNOWN_USER","ERROR_CODE_WRONG_PASSWD","ERROR_CODE_ACCT_ALREADY_EXISTS","ERROR_CODE_NETWORK_ERROR","UNKNOWN_USER_ERROR_MSG","WRONG_PASSWD_ERROR_MSG","ACCT_ALREADY_EXISTS_ERROR_MSG","NETWORK_ERROR_MSG","isAuthenticated","setIsAuthenticated","setCurrentUser","setUserName","setRegisterErrorMsg","isStaff","setIsStaff","userPrefs","setUserPrefs","userIsStaff","user","uid","get","exists","signOutUser","signOut","setUnauthedState","createUserWithEmailAndPassword","userCredential","getUserRecord","code","userRec","updateUserRecord","signInWithEmailAndPassword","sendPasswordResetEmail","onAuthStateChanged","err","userDoc","merge","getUserDoc","ccSnapShot","classCodes","docs","component","RouteComponent","authFlowLayout","Layout","routeProps","NotStaff","Modal","ModalHeader","ModalBody","size","Navbar","NavbarText","UserDropDown","leftNav","rightNav","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","UserIcon","showUserMenu","setShowUserMenu","toggleUserMenu","dark","create","shallow","useSnackbar","showMessage","setTimeout","Snackbar","answerIDs","getAnswerIDs","_interventionPromptAnswers","answer","variantDef","intvEntry","interventionVariantAnswers","isEmpty","eventIn","eventOut","errorStatusVal","answerDetails","correctAnswerLabel","givenAnswerLabel","promptID","answerID","correctAnswerIDs","getAnswerLabels","getAnswerLabel","answerEntry","answerType","getSelectionType","answerCorrectness","evalAnswers","difference","setA","setB","from","prescribedAnswerIDs","selectionType","answerLabel","conjText","nextLabel","firebase","getProjectConfig","projectName","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getApp","appID","matches","apps","app","getOrInitializeApp","appCfg","initializeApp","projectConfig","firebaseApp","firestore","ANSWER","ASSESSO","ASSESS_OPTION","AWO","CB","CL_HEADING","CL_PROMPT","CRIT_FAIL","DECISION","DECISION_OPTION","DIST_PROMPT","HEADING","INTERV","INTV_FORM","NESTED_CHECKLIST","NONE","ONE","OOM","OOM_AND","OOM_OR","OPTION","PROMPT","PROMPT_SET","REQURED","SELECTION_TYPES","SELECTION_TYPE_LABELS","PREFIXES","SYSTEMS","AW","BR","BL","SH","OTH","SYSTEM_LABELS","PROTOCOL_RELATIONSHIPS","MIN","UNN","IR","jsonStableStringify","ScenarioType","PublishedScenario","INTVS","INTV_PROMPTS","INTV_PROMPT_ANSWERS","INTV_MENU_CATS","INTV_MENU_ITEMS","loadIntvs","distPrompts","loadIntvPrompts","loadIntvPromptAnswers","p","getScenarios","scenarioType","schemaVersion","query","where","snapShot","getPublishedScenarioByID","getScenarioByID","getScenarioByName","limit","Error","addMissingScenarioTypeFields","scenTypeData","checklist","clItem","interventionPrompts","errs","tmpPrompts","interventionPromptAnswers","tmpPromptAnswers","interventionMenuCategories","interventionMenuItems","tmpIntvMenuItems","cat","intvCategoryID","m","getScenarioTypeObjectByID","scenarioTypeID","getScenarioTypeByID","getScenarioTypeObject","getScenarioType","getPromptAndOptions","scenarioTypeOrPubScenario","scenType","ansID","opt","verifyDocument","collectionId","documentId","empty","verifyDocNameUniqueness","collectionID","candidateName","dbNameField","snapshot","publishDocument","documentObject","updateDocument","getDocument","getDocumentWithName","documentName","deleteDocument","delete","deleteAndArchiveDocument","confirm","archiveId","deleteDocumentNoArchive","deleteObsAndAnaDocuments","deleteObsDocument","deleteAnaDocument","deleteCond1CommentDocument","deleteCommentDocument","getCollection","listDocumentNames","documentList","collectionGroup","documentDictionary","querySnapshot","exportObserverLogMetaData","getLogs","querySnapShot","getPublishedScenarios","pubScens","pubScenIDs","onlyPublished","filtered","publishedVersion","sort","b","localeCompare","getPubScenarios","fill","getDebriefCommentLogs","commenter","getAnalyses","getCond1CommentLogs","getDebriefLog","getDebriefCommentLog","getCond1CommentLog","getDebriefLogWithName","createInterventionVariant","distPromptIds2OptIds","distPromptID","optionsArray","interventionVariantsAreEqual","intvVariant1","intvVariant2","isEqual","intvVariant2JSON","ST","constructor","medications","hierarchy","phaseData","remaining","_checklist","_interventionMenuCategories","_interventionMenuItems","_medications","checkListMetaData","genCheckListMetaData","uniqueIDs","genUniqueIDs","uniqueLabels","genUniqueLabels","labels","CHECKLIST","relation","verboseLabel","PHASES","SUB_PHASES","OPTIONS","CL_ITEMS","phaseSubPhases","decisionOpts","o","clDepth","rel","clItemsBySubPhase","phaseItems","itemsByPhase","genHierarchy","newPh","itemID","optID","sphID","newSph","getChecklistItem","getInterventionForm","getIntervention","expand","getPrompt","getDecisionWithOptions","decision","getAnswer","getInterventionMenus","newRec","mi","datePublished","vitalSigns","OPQRST","SAMPLE","correctMedicationDosages","genPhaseData","interventionMenus","genInterventionMenus","systemInterventions","genSystemInterventions","system","sysIntvs","menuCat","intvID","deepCopy","stringify","getRecsOfType","anyHaveValues","arrs","list"],"sourceRoot":""}